[{"E:\\react\\canpac\\src\\index.js":"1","E:\\react\\canpac\\src\\serviceWorker.js":"2","E:\\react\\canpac\\src\\routers\\App.js":"3","E:\\react\\canpac\\src\\layouts\\Private.js":"4","E:\\react\\canpac\\src\\layouts\\Auth.js":"5","E:\\react\\canpac\\src\\routers\\private-router.js":"6","E:\\react\\canpac\\src\\routers\\auth-router.js":"7","E:\\react\\canpac\\src\\pages\\private\\Order\\index.js":"8","E:\\react\\canpac\\src\\pages\\private\\Dashboard\\index.js":"9","E:\\react\\canpac\\src\\pages\\Auth\\SignIn\\index.js":"10","E:\\react\\canpac\\src\\pages\\components\\LeftSidebar.js":"11","E:\\react\\canpac\\src\\pages\\components\\TopNavbar.js":"12","E:\\react\\canpac\\src\\pages\\components\\icons\\index.js":"13","E:\\react\\canpac\\src\\pages\\Auth\\SignUp\\index.js":"14","E:\\react\\canpac\\src\\pages\\Auth\\Forget-Password\\index.js":"15","E:\\react\\canpac\\src\\pages\\private\\Profile\\UpdateProfile.js":"16","E:\\react\\canpac\\src\\pages\\private\\Dashboard\\verticalBar.js":"17","E:\\react\\canpac\\src\\pages\\private\\Dashboard\\Doughnut.js":"18","E:\\react\\canpac\\src\\pages\\private\\Product-Stock\\index.js":"19","E:\\react\\canpac\\src\\pages\\private\\Product-Order\\index.js":"20","E:\\react\\canpac\\src\\pages\\private\\Order-Draft\\index.js":"21","E:\\react\\canpac\\src\\pages\\private\\Produect-Details\\index.js":"22","E:\\react\\canpac\\src\\pages\\private\\Low-stock\\index.js":"23","E:\\react\\canpac\\src\\pages\\private\\Product-Delivery\\index.js":"24","E:\\react\\canpac\\src\\pages\\private\\users\\index.js":"25","E:\\react\\canpac\\src\\pages\\private\\Merchents\\index.js":"26","E:\\react\\canpac\\src\\pages\\private\\Permissions\\index.js":"27","E:\\react\\canpac\\src\\pages\\private\\Roles\\index.js":"28","E:\\react\\canpac\\src\\pages\\private\\Roles\\Create-Role.js":"29","E:\\react\\canpac\\src\\scripts\\api.js":"30","E:\\react\\canpac\\src\\scripts\\api-service.js":"31","E:\\react\\canpac\\src\\scripts\\helper.js":"32","E:\\react\\canpac\\src\\context\\AuthContext.js":"33","E:\\react\\canpac\\src\\pages\\private\\Report\\WeeklyReport.js":"34","E:\\react\\canpac\\src\\pages\\private\\Roles\\Update-role.js":"35","E:\\react\\canpac\\src\\pages\\private\\users\\CreateUser.js":"36","E:\\react\\canpac\\src\\pages\\private\\users\\UpdateUser.js":"37","E:\\react\\canpac\\src\\pages\\private\\Merchents\\UpdateMarchent.js":"38","E:\\react\\canpac\\src\\pages\\private\\Merchents\\CreateMarchent.js":"39","E:\\react\\canpac\\src\\pages\\Auth\\Forget-Password\\passwordSet.js":"40","E:\\react\\canpac\\src\\pages\\Auth\\VerifyEmail\\index.js":"41","E:\\react\\canpac\\src\\i18n.js":"42","E:\\react\\canpac\\src\\pages\\private\\404.js":"43"},{"size":963,"mtime":1637945926643,"results":"44","hashOfConfig":"45"},{"size":5156,"mtime":1612957156853,"results":"46","hashOfConfig":"45"},{"size":1012,"mtime":1637945927202,"results":"47","hashOfConfig":"45"},{"size":2139,"mtime":1637945926690,"results":"48","hashOfConfig":"45"},{"size":943,"mtime":1637945926649,"results":"49","hashOfConfig":"45"},{"size":5323,"mtime":1637945927219,"results":"50","hashOfConfig":"45"},{"size":1001,"mtime":1637945927203,"results":"51","hashOfConfig":"45"},{"size":3555,"mtime":1642049409523,"results":"52","hashOfConfig":"45"},{"size":5909,"mtime":1637945926884,"results":"53","hashOfConfig":"45"},{"size":4173,"mtime":1637945926801,"results":"54","hashOfConfig":"45"},{"size":13777,"mtime":1637945926834,"results":"55","hashOfConfig":"45"},{"size":15676,"mtime":1637945926835,"results":"56","hashOfConfig":"45"},{"size":1772,"mtime":1630068752394,"results":"57","hashOfConfig":"58"},{"size":4628,"mtime":1637945926821,"results":"59","hashOfConfig":"45"},{"size":5086,"mtime":1637945926735,"results":"60","hashOfConfig":"45"},{"size":6580,"mtime":1637945927082,"results":"61","hashOfConfig":"45"},{"size":2577,"mtime":1642048971568,"results":"62","hashOfConfig":"45"},{"size":2409,"mtime":1642048936200,"results":"63","hashOfConfig":"45"},{"size":7289,"mtime":1637945927056,"results":"64","hashOfConfig":"45"},{"size":11914,"mtime":1642049409520,"results":"65","hashOfConfig":"45"},{"size":12294,"mtime":1642049409520,"results":"66","hashOfConfig":"45"},{"size":8722,"mtime":1637945927069,"results":"67","hashOfConfig":"45"},{"size":3109,"mtime":1642049409522,"results":"68","hashOfConfig":"45"},{"size":11894,"mtime":1642049409520,"results":"69","hashOfConfig":"45"},{"size":9721,"mtime":1637945927201,"results":"70","hashOfConfig":"45"},{"size":9525,"mtime":1637945927026,"results":"71","hashOfConfig":"45"},{"size":7978,"mtime":1637945927048,"results":"72","hashOfConfig":"45"},{"size":4668,"mtime":1637945927179,"results":"73","hashOfConfig":"45"},{"size":3981,"mtime":1637945927115,"results":"74","hashOfConfig":"45"},{"size":2307,"mtime":1637945927266,"results":"75","hashOfConfig":"45"},{"size":5649,"mtime":1637945927232,"results":"76","hashOfConfig":"45"},{"size":1627,"mtime":1637945927268,"results":"77","hashOfConfig":"45"},{"size":1264,"mtime":1637945926632,"results":"78","hashOfConfig":"45"},{"size":14460,"mtime":1642043527266,"results":"79","hashOfConfig":"45"},{"size":4706,"mtime":1637945927169,"results":"80","hashOfConfig":"45"},{"size":8800,"mtime":1637945927199,"results":"81","hashOfConfig":"45"},{"size":8607,"mtime":1637945927200,"results":"82","hashOfConfig":"45"},{"size":8125,"mtime":1637945926992,"results":"83","hashOfConfig":"45"},{"size":8135,"mtime":1637945926936,"results":"84","hashOfConfig":"45"},{"size":3084,"mtime":1637945926791,"results":"85","hashOfConfig":"45"},{"size":1291,"mtime":1637945926823,"results":"86","hashOfConfig":"45"},{"size":455,"mtime":1637945926633,"results":"87","hashOfConfig":"45"},{"size":1651,"mtime":1637945926843,"results":"88","hashOfConfig":"45"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nsdh6p",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17bgnq6",{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\canpac\\src\\index.js",[],"E:\\react\\canpac\\src\\serviceWorker.js",[],"E:\\react\\canpac\\src\\routers\\App.js",[],"E:\\react\\canpac\\src\\layouts\\Private.js",[],"E:\\react\\canpac\\src\\layouts\\Auth.js",[],"E:\\react\\canpac\\src\\routers\\private-router.js",[],"E:\\react\\canpac\\src\\routers\\auth-router.js",[],"E:\\react\\canpac\\src\\pages\\private\\Order\\index.js",["198"],"E:\\react\\canpac\\src\\pages\\private\\Dashboard\\index.js",["199","200","201","202"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport VerticalBar from \"./verticalBar\";\r\nimport DoughnutChart from \"./Doughnut\";\r\nimport { Card, Skeleton, Button  } from 'antd';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { authContext } from \"../../../context/AuthContext\";\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { DASHBOARD } from '../../../scripts/api';\r\nimport * as htmlToImage from 'html-to-image';\r\nimport moment from 'moment';\r\n\r\n\r\nexport default function Dashboard() {\r\n    const {t, i18n} = useTranslation();\r\n    const {user, getUserInfo, setUserInfo} = useContext(authContext);\r\n    const [dashboard, setDashboard] = useState();\r\n\r\n    const getDashboardData = async () => {\r\n        let res = await postData(DASHBOARD, {});\r\n\r\n        if (res) {\r\n            setDashboard(res.data.data);\r\n        }\r\n    };\r\n\r\n    const generateReport = () => {\r\n        htmlToImage.toBlob(document.getElementById('my-node'))\r\n            .then(function (blob) {\r\n                window.saveAs(blob, `generale-report-${moment().format('YYYY-MM-DD--HH-mm-ss')}.png`);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDashboardData()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                dashboard ? <>\r\n                {\r\n                    user && <div className=\"rui-page-title\">\r\n                        <div className=\"container-fluid\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb\" style={{\"listStyleType\": \"none\"}}>\r\n                                    <li className=\"breadcrumb-item\"> <strong>\r\n                                        {t(\"common.name\")}: </strong> {user?.name}</li>\r\n                                </ol>\r\n                                <ol className=\"breadcrumb\" style={{\"listStyleType\": \"none\"}}>\r\n                                    <li className=\"breadcrumb-item\"> <strong>Company:</strong> {user.company_name} </li>\r\n                                </ol>\r\n                                <ol className=\"breadcrumb\" style={{\"listStyleType\": \"none\"}}>\r\n                                    <li className=\"breadcrumb-item\"> <strong>Phone:</strong> {user.phone} </li>\r\n                                </ol>\r\n                                <ol className=\"breadcrumb\" style={{\"listStyleType\": \"none\"}}>\r\n                                    <li className=\"breadcrumb-item\"> <strong>Email:</strong> {user.email} </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                \r\n                <div>\r\n                    <Button onClick={generateReport} type=\"primary\" size=\"large\" style={{width: \"300px\"}}\r\n                    className=\"btn-brand btn-block float-right mb-20\">Generate Report</Button>\r\n                </div>\r\n\r\n                <div className=\"rui-page-content\" id=\"my-node\">\r\n                    <div className=\"container-fluid\">\r\n                        {\r\n                            dashboard && <div className=\"row xs-gap mt-20 px-20\">\r\n                                <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                    <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4 text-center\">\r\n                                        <h1>Product Stock</h1>\r\n                                        <Link to=\"/product-stock\"><h2>{dashboard.product_stock}</h2></Link>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                    <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4 text-center\">\r\n                                        <h1>Product Order</h1>\r\n                                        <Link to=\"/product-order\"><h2>{dashboard.product_order}</h2></Link>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col col-sm-12 col-lg-3 mb-10\">\r\n                                    <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4 text-center\">\r\n                                        <h1>Low Stock</h1>\r\n                                        <Link to=\"/low-stock\"><h2>{dashboard.low_stock}</h2></Link>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                    <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4 text-center\">\r\n                                        <h1>Product Delivery</h1>\r\n                                        <Link to=\"/product-delivery\"><h2>{dashboard.product_delivery}</h2></Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        <div className=\"row xs-gap mt-20 px-20\">\r\n                            <div className=\"col col-sm-12 col-lg-12 mb-10\">\r\n                                <Card >\r\n                                    <VerticalBar quantity={dashboard.product_quantity_model_wise}></VerticalBar>\r\n                                </Card >\r\n                            </div>\r\n                            <div className=\"col col-sm-12 col-lg-12 mb-10\">\r\n                                <Card >\r\n                                    <DoughnutChart products={dashboard.popular_product_model}></DoughnutChart>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                </> : Skeleton\r\n            }\r\n            \r\n        </Fragment>\r\n    )\r\n}","E:\\react\\canpac\\src\\pages\\Auth\\SignIn\\index.js",["203","204","205","206","207","208","209","210","211","212"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport \"./style.scss\";\r\nimport {LOGIN, USER_PROFILE} from \"../../../scripts/api\";\r\nimport {postData, postDataProfile} from \"../../../scripts/api-service\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default function SignIn() {\r\n    const onFinish = async (values) => {\r\n        let res = await postData(LOGIN, values, 'no_token');\r\n        if (res) {\r\n            Cookies.set(\"canpacToken\", res.data.data.access_token, { expires: 1 });\r\n            // window.location = \"/\";\r\n            setUserInfo(res.data.data.access_token);\r\n        }\r\n    };\r\n\r\n    const setUserInfo = async (token) => {\r\n        let res = await postDataProfile(USER_PROFILE, {}, token);\r\n        if (res) {\r\n            let masterData = res?.data?.data;\r\n            localStorage.setItem(\"canpacPermissions\", JSON.stringify(masterData?.roles[0].permissions));\r\n            window.location = \"/\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"rui-main\">\r\n            <div className=\"rui-sign align-items-center justify-content-center\">\r\n            <div className=\"bg-image\">\r\n                    <div className=\"bg-grey-1\" />\r\n                </div>\r\n                <div className=\"form rui-sign-form rui-sign-form-cloud\">\r\n                    <div className=\"row vertical-gap sm-gap justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            <h1 className=\"display-4 mb-10 text-center\">Sign In</h1>\r\n                        </div>\r\n\r\n                        <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                            onFinish={onFinish}\r\n                            >\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                rules={[\r\n                                    { required: true, message: 'Please input your email addresss!' },\r\n                                    {\r\n                                        pattern: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n                                        message: \"Please enter a valid email address\",\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input size=\"large\" placeholder=\"Email address\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: 'Please input your password!' }]}\r\n                            >\r\n                                <Input.Password size=\"large\" placeholder=\"Password\"/>\r\n                            </Form.Item>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6\"></div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <Link to=\"/auth/forget-password\" className=\"fs-13\">Forget password?</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Form.Item>\r\n                                <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                    Login\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n\r\n                        <div className=\"col-12\">\r\n                            <div className=\"rui-sign-or\">or</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-20 text-grey-5\">\r\n                    Don&apos;t you have an account? \r\n                    <Link to=\"/auth/signup\" className=\"text-2\"> Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\components\\LeftSidebar.js",[],"E:\\react\\canpac\\src\\pages\\components\\TopNavbar.js",["213","214","215","216","217","218","219","220","221","222","223","224"],"import React, {Fragment, useContext, useEffect, useState} from 'react'\r\nimport logo from \"../../assets/images/i-logo.png\";\r\nimport avatar1 from \"../../assets/images/avatar-1.png\";\r\nimport $ from \"jquery\";\r\nimport { Menu, Dropdown, Modal } from 'antd';\r\nimport { LogoutOutlined, UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { Link } from 'react-router-dom';\r\nimport { CHANGE_PASSWORD } from \"../../scripts/api\";\r\nimport { postData } from \"../../scripts/api-service\";\r\nimport { alertPop } from \"../../scripts/helper\";\r\nimport Cookies from \"js-cookie\";\r\nimport { authContext } from \"../../context/AuthContext\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n      width,\r\n      height\r\n    };\r\n};\r\n\r\nexport default function TopNavbar() {\r\n    const location = useLocation();\r\n    const {t, i18n} = useTranslation();\r\n\r\n    const {user, getUserInfo, setUserInfo, DeleteUserInfo } = useContext(authContext);\r\n\r\n    const [changepassModal, setChangepassModal] = useState(false);\r\n    const [showNav, setShowNav] = useState(true);\r\n\r\n    const toggleContent = () => {\r\n        if ($( \"#main-wrapper\" ).hasClass( \"yay-hide\" )) {\r\n            $( \"#main-wrapper\" ).removeClass( \"yay-hide\" );\r\n            setShowNav(true);\r\n        } else {\r\n            $( \"#main-wrapper\" ).addClass( \"yay-hide\" );\r\n            setShowNav(false);\r\n        }\r\n    }\r\n\r\n    const mobileViewToggle = () => {\r\n        if ($( \"#main-wrapper\" ).hasClass( \"yay-hide\" )) {\r\n            $('#left-sidebar-cici-4565').css(\"z-index\", 1004);\r\n            $('#left-sidebar-cici-4565').css(\"opacity\", 0);\r\n            $( \"#main-wrapper\" ).removeClass( \"yay-overlay\" );\r\n        } else {\r\n            $('#left-sidebar-cici-4565').css(\"z-index\", 10000);\r\n            $('#left-sidebar-cici-4565').css(\"opacity\", 1);\r\n            $( \"#left-sidebar-cici-4565\" ).addClass( \"yay-overlay\" );\r\n        }\r\n    }\r\n\r\n    const logOut = () => {\r\n        DeleteUserInfo();\r\n        Cookies.remove(\"canpacToken\");\r\n        window.location = \"/auth/login\";\r\n        localStorage.removeItem('canpacPermissions');\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (location.pathname === \"/\") {\r\n            if (!($( \"#main-wrapper\" ).hasClass( \"yay-hide\" ))) $( \"#main-wrapper\" ).addClass( \"yay-hide\" );\r\n        } else {\r\n            if ($( \"#main-wrapper\" ).hasClass( \"yay-hide\" ) && showNav) $( \"#main-wrapper\" ).removeClass( \"yay-hide\" );\r\n        }\r\n\r\n    }, [location.pathname])\r\n\r\n    const menu = (\r\n        <Menu>\r\n          <Menu.Item>\r\n            <a rel=\"noopener noreferrer\" onClick={() => {setChangepassModal(true)}}>\r\n                <KeyOutlined /> Change Password\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/update-profile\">\r\n                <UserOutlined /> Update Profile\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <a rel=\"noopener noreferrer\" onClick={() => logOut()}>\r\n                <LogoutOutlined /> Sign Out\r\n            </a>\r\n          </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const languageMenu = (\r\n        <Menu>\r\n          <Menu.Item>\r\n            <a rel=\"noopener noreferrer\" onClick={() => changeLanguage(\"en\")}>\r\n                ENGLISH\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <a onClick={() => changeLanguage(\"vn\")}>\r\n                VIETNAMESE\r\n            </a>\r\n          </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    const changeLanguage = (language) => {\r\n        i18n.changeLanguage(language);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setUserInfo();\r\n    }, [])\r\n\r\n    const onFinish = async (values) => {\r\n        if (values.password === values.password_confirmation) {\r\n            let res = await postData(CHANGE_PASSWORD, values);\r\n\r\n            if (res) {\r\n                alertPop('success', 'Password changed successfully');\r\n                setTimeout(() => {\r\n                    logOut();\r\n                }, 2000);\r\n            }\r\n        } else {\r\n            alertPop('error', 'Password and confirmation password not match!');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            let {width} = getWindowDimensions();\r\n            if (width <= 614) {\r\n                $('#left-sidebar-cici-4565').addClass('yay-overlay');\r\n            } else {\r\n                $('#left-sidebar-cici-4565').removeClass('yay-overlay')\r\n            }\r\n        } \r\n        \r\n        handleResize();\r\n        window.addEventListener('resize', handleResize);\r\n      }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n        <nav className=\"rui-navbar rui-navbar-top rui-navbar-sticky\">\r\n            <div className=\"rui-navbar-brand\">\r\n                <a href=\"/\" className=\"rui-navbar-logo\">\r\n                    <img src={logo} alt=\"\" width=\"90\" /> \r\n                </a>\r\n                <button className=\"yay-toggle rui-yaybar-toggle\" type=\"button\" onClick={toggleContent}><span></span></button>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"rui-navbar-content\">\r\n                    <ul className=\"nav\">\r\n                        {/* <li className=\"dropdown dropdown-hover dropdown-keep-open dropdown-triangle\"><a href=\"#actions\"\r\n                                className=\"dropdown-item\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"><span data-feather=\"layers\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Actions</span> <span\r\n                                    className=\"rui-dropdown-circle\"></span></a>\r\n                            \r\n                            <ul className=\"nav dropdown-menu\">\r\n                                <li><a href=\"#create-post\" className=\"nav-link\"><span data-feather=\"plus-circle\"\r\n                                            className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Create Post</span> <span\r\n                                            className=\"rui-nav-circle\"></span></a></li>\r\n                                <li><a href=\"#create-page\" className=\"nav-link\"><span data-feather=\"plus-circle\"\r\n                                            className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Create Page</span> <span\r\n                                            className=\"rui-nav-circle\"></span></a></li>\r\n                                <li><a href=\"#manage-users\" className=\"nav-link\"><span data-feather=\"users\"\r\n                                            className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Manage Users</span> <span\r\n                                            className=\"rui-nav-circle\"></span></a></li>\r\n                                <li className=\"dropdown dropdown-hover dropdown-keep-open dropdown-triangle\"><a\r\n                                        href=\"#manage-sites\" className=\"dropdown-item\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" aria-expanded=\"false\"><span data-feather=\"sidebar\"\r\n                                            className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Manage Sites</span> <span\r\n                                            className=\"rui-dropdown-circle\"></span></a>\r\n                                    <ul className=\"nav dropdown-menu\">\r\n                                        <li><a href=\"#my-site-1\" className=\"nav-link\">My Site 1</a></li>\r\n                                        <li><a href=\"#my-site-2\" className=\"nav-link\">My Site 2</a></li>\r\n                                        <li><a href=\"#my-site-3\" className=\"nav-link\">My Site 3</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </li> */}\r\n                    </ul>\r\n\r\n                    <ul className=\"nav rui-navbar-right\">\r\n                        <li className=\"nav-item\"><a className=\"d-flex\" data-fancybox data-keyboard=\"false\" data-auto-focus=\"false\"\r\n                                data-touch=\"false\" data-close-existing=\"true\" data-src=\"#messenger\"\r\n                                href=\"javascript:;\"><span className=\"btn btn-custom-round\"><span data-feather=\"message-circle\"\r\n                                        className=\"rui-icon rui-icon-stroke-1_5\"></span></span></a></li>\r\n                        \r\n                        {/* <Dropdown className=\"mt-5\" overlay={languageMenu} placement=\"bottomRight\" arrow>\r\n                            <Button>{i18n.language}</Button>\r\n                        </Dropdown> */}\r\n                        <li className=\"dropdown dropdown-hover dropdown-triangle dropdown-keep-open\">\r\n                        <Dropdown overlay={menu} placement=\"bottomRight\" arrow>\r\n                            <a className=\"dropdown-item rui-navbar-avatar mnr-6\">\r\n                                    <img src={user?.thumb_image_url || avatar1} alt=\"\" />\r\n                            </a>\r\n                        </Dropdown>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n        <div className=\"rui-navbar rui-navbar-mobile\">\r\n            <div className=\"rui-navbar-head\">\r\n                <button onClick={() => {mobileViewToggle()}} className=\"rui-yaybar-toggle rui-yaybar-toggle-inverse yay-toggle\"\r\n                    type=\"button\" aria-label=\"Toggle side navigation\"><span></span>\r\n                </button>\r\n                <a className=\"rui-navbar-logo mr-auto\" href=\"/\">\r\n                    <img src={logo} alt=\"\" width=\"95\"/>\r\n                </a>\r\n                <div className=\"dropdown dropdown-triangle\">\r\n                <Dropdown overlay={menu} trigger={['click']}>\r\n                    <a className=\"dropdown-item rui-navbar-avatar\" >\r\n                            <img src={user?.thumb_image_url || avatar1} alt=\"\"/>\r\n                    </a>\r\n                </Dropdown>,\r\n                    {/* <ul className=\"dropdown-menu nav\">\r\n                        <li><a href=\"profile.html\" className=\"nav-link\"><span data-feather=\"plus-circle\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Create new Post</span> <span\r\n                                    className=\"rui-nav-circle\"></span></a></li>\r\n                        <li><a href=\"profile.html\" className=\"nav-link\"><span data-feather=\"users\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Manage Users</span> <span\r\n                                    className=\"rui-nav-circle\"></span></a></li>\r\n                        <li><a href=\"profile.html\" className=\"nav-link\"><span data-feather=\"check-circle\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Check Updates</span> <span\r\n                                    className=\"rui-nav-circle\"></span></a></li>\r\n                        <li><a href=\"profile.html\" className=\"nav-link\"><span data-feather=\"log-out\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Exit</span> <span\r\n                                    className=\"rui-nav-circle\"></span></a></li>\r\n                    </ul> */}\r\n                </div><button className=\"navbar-toggler rui-navbar-toggle\" type=\"button\" data-toggle=\"collapse\"\r\n                    data-target=\"#navbarMobile\" aria-controls=\"navbarMobile\" aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"><span></span></button>\r\n            </div>\r\n            \r\n            <div className=\"collapse navbar-collapse rui-navbar-collapse\" id=\"navbarMobile\">\r\n                <div className=\"rui-navbar-content\">\r\n                    <ul className=\"nav\">\r\n                        \r\n                    <Dropdown className=\"mt-5 w-100\" overlay={languageMenu} placement=\"bottomRight\" arrow>\r\n                        <Button>{i18n.language}</Button>\r\n                    </Dropdown>\r\n                        {/* <li className=\"dropdown dropdown-keep-open\"><a className=\"dropdown-item\" href=\"#\" data-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\" aria-expanded=\"false\"><span data-feather=\"flag\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Language</span> <span\r\n                                    className=\"rui-dropdown-circle\"></span></a>\r\n                            <ul className=\"nav dropdown-menu rui-navbar-dropdown-language\">\r\n                                <li><a href=\"#\" className=\"rui-navbar-language active\"><span\r\n                                            className=\"rui-navbar-language-img\"><img\r\n                                                src=\"assets/images/united-states-of-america.svg\" alt=\"\"/></span>USA</a></li>\r\n                                <li><a href=\"#\" className=\"rui-navbar-language\"><span className=\"rui-navbar-language-img\"><img\r\n                                                src=\"assets/images/china.svg\" alt=\"\"/></span>China</a></li>\r\n                                <li><a href=\"#\" className=\"rui-navbar-language\"><span className=\"rui-navbar-language-img\"><img\r\n                                                src=\"assets/images/germany.svg\" alt=\"\"/></span>Germany</a></li>\r\n                                <li><a href=\"#\" className=\"rui-navbar-language\"><span className=\"rui-navbar-language-img\"><img\r\n                                                src=\"assets/images/japan.svg\" alt=\"\"/></span>Japan</a></li>\r\n                                <li><a href=\"#\" className=\"rui-navbar-language\"><span className=\"rui-navbar-language-img\"><img\r\n                                                src=\"assets/images/spain.svg\" alt=\"\"/></span>Spain</a></li>\r\n                            </ul>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <Modal title=\"Change Password\"\r\n            visible={changepassModal}\r\n            width=\"50vw\"\r\n            onCancel={() => {setChangepassModal(false);}}\r\n            footer={false}\r\n        >\r\n            <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                onFinish={onFinish}\r\n                >\r\n                <Form.Item\r\n                    name=\"old_password\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password size=\"large\" placeholder=\"Old Password\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password size=\"large\" placeholder=\"Password\"/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"password_confirmation\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password size=\"large\" placeholder=\"Confirm Password\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                        Save\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\components\\icons\\index.js",[],"E:\\react\\canpac\\src\\pages\\Auth\\SignUp\\index.js",["225","226","227","228","229","230","231","232","233","234"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { MERCHENT_SELT_SIGNUP } from '../../../scripts/api';\r\nimport { alertPop } from '../../../scripts/helper';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SignUp() {\r\n    const history = useHistory();\r\n\r\n    const onFinish = async (values) => {\r\n        let res = await postData(MERCHENT_SELT_SIGNUP, values);\r\n\r\n        if (res) {\r\n            alertPop('success', res?.data?.message);\r\n            history.push('/auth/login');\r\n        }\r\n    };\r\n\r\n    return (    \r\n        <div className=\"rui-main\">\r\n            <div className=\"rui-sign align-items-center justify-content-center\">\r\n            <div className=\"bg-image\">\r\n                    <div className=\"bg-grey-1\" />\r\n                </div>\r\n                <div className=\"form rui-sign-form rui-sign-form-cloud\">\r\n                    <div className=\"row vertical-gap sm-gap justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            <h1 className=\"display-4 mb-10 text-center\">Sign Up</h1>\r\n                        </div>\r\n\r\n                        <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                            onFinish={onFinish}\r\n                            >\r\n                            <Form.Item\r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: 'Please input your Name!' }]}\r\n                            >\r\n                                <Input size=\"large\" placeholder=\"Enter Name\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                rules={[{ required: true, message: 'Please input email!' },\r\n                                    {\r\n                                        pattern: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n                                        message: \"Please enter a valid email address\",\r\n                                    }]}\r\n                            >\r\n                                <Input size=\"large\" placeholder=\"Enter email\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"phone\"\r\n                                rules={[{ required: true, message: 'Please input Phone!' }]}\r\n                            >\r\n                                <Input size=\"large\" placeholder=\"Enter Phone\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"company_name\"\r\n                                rules={[{ required: true, message: 'Please input company name!' }]}\r\n                            >\r\n                                <Input size=\"large\" placeholder=\"Enter company name\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: 'Please input your password!' }]}\r\n                            >\r\n                                <Input.Password size=\"large\" placeholder=\"password\"/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"password_confirmation\"\r\n                                rules={[{ required: true, message: 'Please input your Confirm password!' }]}\r\n                            >\r\n                                <Input.Password size=\"large\" placeholder=\"Confirm Password\" />\r\n                            </Form.Item>\r\n\r\n\r\n                            <Form.Item>\r\n                                <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                Sign up\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n\r\n                        <div className=\"col-12\">\r\n                            <div className=\"rui-sign-or\">or</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-20 text-grey-5\">\r\n                    Already have an account <Link to=\"/auth/login\" className=\"text-2\">Sign In</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\Auth\\Forget-Password\\index.js",["235","236","237","238","239","240","241","242","243","244","245","246"],"import React, { Fragment, useState } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport {postData} from \"../../../scripts/api-service\";\r\nimport {FORGET_PASSWORD_EMAIL} from \"../../../scripts/api\";\r\n\r\nexport default function ForgetPassword() {\r\n    const [isresetpassword, setResetPassword] = useState(1);\r\n    const [isLoading, setIsLoading] = useState();\r\n\r\n    const onFinish = async (values) => {\r\n        console.log('Success:', values);\r\n        // setResetPassword(0);\r\n        let res = await postData(FORGET_PASSWORD_EMAIL, values);\r\n\r\n        if (res) {\r\n            setIsLoading(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"rui-main\">\r\n            <div className=\"rui-sign align-items-center justify-content-center\">\r\n            <div className=\"bg-image\">\r\n                    <div className=\"bg-grey-1\" />\r\n                </div>\r\n                <div className=\"form rui-sign-form rui-sign-form-cloud\">\r\n                    <div className=\"row vertical-gap sm-gap justify-content-center\">\r\n                        {\r\n                            isresetpassword ? <Fragment>\r\n                                <div className=\"col-12\">\r\n                                    <h1 className=\"display-4 mb-10 text-center\">Forget Password</h1>\r\n                                </div>\r\n                                <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                                    onFinish={onFinish}\r\n                                    >\r\n                                    <Form.Item\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: 'Please input email!' },\r\n                                            {\r\n                                                pattern: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n                                                message: \"Please enter a valid email address\",\r\n                                            }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Email\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item>\r\n                                        <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                        Submit\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Fragment> : <Fragment>\r\n                                <div className=\"col-12\">\r\n                                    <h1 className=\"display-4 mb-10 text-center\">Reset Password</h1>\r\n                                </div>\r\n\r\n                                <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                                    // onFinish={onFinish}\r\n                                    >\r\n                                    <Form.Item\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                    >\r\n                                        <Input.Password size=\"large\" placeholder=\"password\"/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                    >\r\n                                        <Input.Password size=\"large\" placeholder=\"Confirm Password\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item>\r\n                                        <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Fragment>\r\n                        }\r\n\r\n                        <div className=\"col-12\">\r\n                            <div className=\"rui-sign-or\">or</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-20 text-grey-5\">\r\n                    Already have an account? <Link to=\"/auth/login\" className=\"text-2\">Sign In</Link>\r\n                    <br/>\r\n                    <h5 className=\"text-center mt-3 mb-3\">Or</h5>\r\n                    Don&apos;t you have an account? <Link to=\"/auth/signup\" className=\"text-2\">Sign Up</Link>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Profile\\UpdateProfile.js",["247","248","249","250"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button, Upload } from \"antd\";\r\nimport demo from \"../../../assets/images/avatar-1.png\"\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { authContext } from \"../../../context/AuthContext\";\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { USER_PROFILE } from '../../../scripts/api';\r\nimport { alertPop } from '../../../scripts/helper';\r\n\r\nexport default function UpdateProfile() {\r\n    const formRef = React.createRef();\r\n    const {user, getUserInfo, setUserInfo} = useContext(authContext);\r\n    const [file, setfile] = useState();\r\n    const [imageBase64, setImageBase64] = useState();\r\n\r\n    const onFinish = async (values) => {\r\n        let data = new FormData();\r\n        \r\n        if (file) data.append('image', file); \r\n        data.append('name', values.name);\r\n        data.append('email', values.email); \r\n        data.append('phone', values.phone); \r\n        data.append('company_name', values.company_name); \r\n\r\n        let res = await postData(USER_PROFILE, data);\r\n\r\n        if (res) {\r\n            alertPop('success', \"Profile Update Successfully!\");\r\n        }\r\n    };\r\n\r\n    const props = {\r\n        beforeUpload: file => {\r\n            // return (file.type === 'image/png' || file.type === 'image/jpg') ? true : Upload.LIST_IGNORE;\r\n        },\r\n        onChange: info => {\r\n            console.log(info.fileList);\r\n        },\r\n    };\r\n\r\n    const onFill = () => {\r\n        formRef.current.setFieldsValue({\r\n            name: user?.name,\r\n            company_name: user?.company_name,\r\n            email: user?.email,\r\n            phone: user?.phone,\r\n        });\r\n    };\r\n\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.onload = () => resolve(reader.result);\r\n          reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    const profilePreview = async ({file}) => {\r\n        setfile(file.originFileObj);\r\n        let preview = await getBase64(file.originFileObj);\r\n        setImageBase64(preview);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUserInfo();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user) onFill()\r\n    }, [user])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Update Profile</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row xs-gap\">\r\n                        <div className=\"col-sm\">\r\n                            <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                                    ref={formRef}\r\n                                    layout={'vertical'}\r\n                                    onFinish={onFinish}\r\n                                    >\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[{ required: true, message: 'Please Input Your Name!' }]}\r\n                                        // initialValue={userlogInfo?.name}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Name\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: 'Please input email!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Email\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        rules={[{ required: true, message: 'Please input phone!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Phone\" />\r\n                                    </Form.Item>\r\n                                    \r\n                                    <Form.Item\r\n                                        label=\"Company Name\"\r\n                                        name=\"company_name\"\r\n                                        rules={[{ required: false, message: 'Please input company name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Company Name\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item>\r\n                                        <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                            Update\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                <div className=\"rui-profile\">\r\n                                    <div className=\"rui-profile-img m-auto\">\r\n                                        <img src={ imageBase64 ? imageBase64 : user?.real_image_url ? user?.real_image_url : demo} alt=\"\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text-center mt-5\">\r\n                                    <Upload {...props} accept=\"image/*\" onChange={profilePreview}>\r\n                                        <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n                                    </Upload>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Dashboard\\verticalBar.js",[],"E:\\react\\canpac\\src\\pages\\private\\Dashboard\\Doughnut.js",[],"E:\\react\\canpac\\src\\pages\\private\\Product-Stock\\index.js",["251","252","253","254"],"import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Table, Space, Select, Form, Button, Input, DatePicker  } from 'antd';\r\nimport { getData, postData } from '../../../scripts/api-service';\r\nimport { PRODUCT_STOCK, PRODUCT_STOCK_EXPORT } from '../../../scripts/api';\r\nimport { checkUserPermission } from '../../../scripts/helper';\r\nimport { authContext } from '../../../context/AuthContext';\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst children = [];\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\n\r\nconst headers = [\r\n    { label: \"Product Code of SAP\", key: \"product_code_of_sap\" },\r\n    { label: \"Product name\", key: \"product_name\" },\r\n    { label: \"Quantity of Product Per Sheet\", key: \"quantity_of_product_per_sheet\" },\r\n    { label: \"Stock\", key: \"stock\" },\r\n    { label: \"Thickness\", key: \"thickness\" },\r\n    { label: \"Weight\", key: \"weight\" },\r\n];\r\n\r\nexport default function ProductDelivery() {\r\n    const { permissions } = useContext(authContext);\r\n    const [products, setProducts] = useState();\r\n    const [exportData, setExportData] = useState([]);\r\n      \r\n    const columns = [\r\n      {\r\n        title: 'Product name',\r\n        dataIndex: 'product_name',\r\n        key: 'address',\r\n      },\r\n    //   {\r\n    //     title: 'Date',\r\n    //     dataIndex: 'name',\r\n    //     key: 'name',\r\n    //   },\r\n    //   {\r\n    //     title: 'Printed Sheet (Body Blank)',\r\n    //     dataIndex: 'age',\r\n    //     key: 'age',\r\n    //   },\r\n      {\r\n          title: 'Can Stock',\r\n          dataIndex: 'stock',\r\n          key: 'stock',\r\n      },\r\n      {\r\n          title: 'Total Can Stock & Printed Sheet',\r\n          dataIndex: 'quantity_of_product_per_sheet',\r\n          key: 'quantity_of_product_per_sheet',\r\n      },\r\n      {\r\n          title: 'Weight Standard (g)',\r\n          dataIndex: 'weight',\r\n          key: 'weight',\r\n      },\r\n      {\r\n        title: 'Thickness(mm)',\r\n        dataIndex: 'thickness',\r\n        key: 'thickness',\r\n    },\r\n    ];\r\n\r\n    const getProductDetails = async () => {\r\n        let res = await postData(PRODUCT_STOCK, {});\r\n\r\n        if (res) {\r\n            setProducts(res.data.data);\r\n\r\n            getProductExportData();\r\n        }\r\n    }\r\n\r\n    const getProductExportData = async () => {\r\n        let res = await getData(PRODUCT_STOCK_EXPORT);\r\n\r\n        if (res) {\r\n            setExportData(res?.data?.data || []);\r\n        }\r\n    };\r\n\r\n    const canView = (context) => {\r\n        return checkUserPermission(context, permissions);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProductDetails();\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Product Stock</h1>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                canView('Product - Stock | Export') ? <div className=\"float-right mb-20 pt-10\">\r\n                    {/* <Button type=\"primary\" onClick={() => generateReport()} size=\"large\">Generate Report</Button> */}\r\n                    <CSVLink data={exportData} headers={headers} target=\"_blank\" filename={`Product-Stock-${moment().format('YYYY-MM-DD--HH-mm-ss')}.csv`}>\r\n                        <Button type=\"primary\" style={{width: \"300px\"}} size=\"large\" className=\"btn-brand btn-block float-right mb-20\">\r\n                            Generate Report\r\n                        </Button>\r\n                    </CSVLink>\r\n                </div> : ''\r\n            }\r\n\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"d-none\">\r\n                        <h3>Filter</h3>\r\n                        <div className=\"row xs-gap mt-10 mb-30\">\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Input size=\"large\" placeholder=\"Name\" />\r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                \r\n                                    <Select\r\n                                        size=\"large\"\r\n                                        mode=\"multiple\"\r\n                                        allowClear\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder=\"Select Status\"\r\n                                        >\r\n                                        {children}\r\n                                    </Select>\r\n                                        \r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                    <Select\r\n                                        size=\"large\"\r\n                                        mode=\"multiple\"\r\n                                        allowClear\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder=\"Select Customers\"\r\n                                        >\r\n                                        {children}\r\n                                    </Select>\r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                    <Select\r\n                                        size=\"large\"\r\n                                        // mode=\"multiple\"\r\n                                        allowClear\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder=\"Select Models\"\r\n                                        >\r\n                                        {children}\r\n                                    </Select>\r\n                            </div>\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                    <RangePicker size=\"large\" style={{width: \"100%\"}} />\r\n                            </div>\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                \r\n                            </div>\r\n                            <div className=\"col col-sm-12 col-lg-3 mb-10\">\r\n                                <Button className=\"btn-light btn-block\" size=\"large\" \r\n                                        type=\"primary\">\r\n                                        Reset Filter\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"col col-sm-12 col-lg-3 mb-10\">\r\n                                <Button className=\"btn-brand btn-block float-right\" size=\"large\" \r\n                                    type=\"primary\">\r\n                                    Filter\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Table dataSource={products} columns={columns} />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Product-Order\\index.js",["255","256"],"E:\\react\\canpac\\src\\pages\\private\\Order-Draft\\index.js",["257","258","259","260","261","262"],"E:\\react\\canpac\\src\\pages\\private\\Produect-Details\\index.js",["263","264","265"],"import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport { Select, Form, Button, InputNumber, Timeline   } from 'antd';\r\nimport { ClockCircleOutlined } from '@ant-design/icons';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport ReactQuill from 'react-quill';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { DROPDOWN_LIST, ORDER_VIEW, ORDER_UPDATE, ORDER_EMAIL } from '../../../scripts/api';\r\nimport { alertPop, checkUserPermission} from '../../../scripts/helper';\r\nimport { authContext } from '../../../context/AuthContext';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function ProductDetails() {\r\n    const { permissions } = useContext(authContext);\r\n    const [form] = Form.useForm();\r\n    let { orderId } = useParams();\r\n    const [order, setOrder] = useState();\r\n    const [orderStatus, setOrderStatus] = useState();\r\n    const [mailText, setMailText] = useState();\r\n\r\n    const canView = (context) => {\r\n        return checkUserPermission(context, permissions);\r\n    };\r\n\r\n    const onFinish = async (values) => {\r\n        let data = values;\r\n        data.id = orderId;\r\n\r\n        let res = await postData(ORDER_UPDATE, data);\r\n        if (res) {\r\n            alertPop('success', \"Updated Successfully!\");\r\n        }\r\n    };\r\n\r\n    const quillChange = (value) => {\r\n        setMailText(value);\r\n    }\r\n\r\n    const getOrderDetails = async () => {\r\n        let res = await postData(ORDER_VIEW, {\r\n            id: orderId\r\n        });\r\n\r\n        if (res) {\r\n            let masterData = res.data.data;\r\n            setOrder(masterData);\r\n            form.setFieldsValue({\r\n                status: masterData.status * 1,\r\n                ordered_quantity: masterData.ordered_quantity,\r\n            });\r\n        }\r\n    }\r\n\r\n    const getOrderStatus = async () => {\r\n        let res = await postData(DROPDOWN_LIST, {\r\n            data_type: \"order_status\"\r\n        });\r\n\r\n        if (res) setOrderStatus(res.data.data)\r\n    }\r\n\r\n    const sendMail = async () => {\r\n        let data = {\r\n            id: orderId,\r\n            text: mailText\r\n        };\r\n\r\n        let res = await postData(ORDER_EMAIL, data);\r\n        if (res) {\r\n            alertPop('success', \"Sended Successfully!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrderDetails();\r\n        getOrderStatus();\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Order Details</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"Order-info\">\r\n                        <h4><strong>Order ID: </strong>{order?.id}</h4>\r\n                        <h4><strong>Product: </strong>{order?.product?.product_name}</h4>\r\n                        <h4><strong>Order Quantity: </strong>{order?.ordered_quantity}</h4>\r\n                        <h4><strong>Remaining Quantity: </strong>{order?.remaining_quantity}</h4>\r\n                        <h4><strong>Status: </strong>{order?.status_title}</h4>\r\n                    </div>\r\n\r\n                    {\r\n                        canView('Product - Delivery | Update') ? <Fragment>\r\n                            <hr/>\r\n\r\n                            <div className=\"row\">\r\n                                {\r\n                                    canView('Order - Creat') ? <div className=\"col col-sm-12 col-lg-6 mb-10\">\r\n                                        <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                                            form={form}\r\n                                            layout={'vertical'}\r\n                                            onFinish={onFinish}\r\n                                            >\r\n                                            <Form.Item\r\n                                                label=\"Update Status\"\r\n                                                name=\"status\"\r\n                                                rules={[{ required: true, message: 'Please input status!' }]}\r\n                                            >\r\n                                                <Select\r\n                                                    size=\"large\"\r\n                                                    showSearch\r\n                                                    placeholder=\"Process\"\r\n                                                    optionFilterProp=\"children\"\r\n                                                    filterOption={(input, option) =>\r\n                                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                    }\r\n                                                >\r\n                                                    {\r\n                                                        orderStatus?.length && orderStatus.map(status => <Option value={status.value} key={status.value}>{status.title}</Option>)\r\n                                                    }\r\n                                                </Select>\r\n                                            </Form.Item>\r\n\r\n                                            <Form.Item\r\n                                                label=\"Delevary Quantity\"\r\n                                                name=\"delivered_quantity\"\r\n                                                rules={[{ required: true, message: 'Please input quantity!' }]}\r\n                                            >\r\n                                                <InputNumber placeholder=\"Select Quantity\" size=\"large\" min={1} max={order?.ordered_quantity}  style={{width: \"100%\"}}/>\r\n                                            </Form.Item>\r\n\r\n                                            <Form.Item>\r\n                                                <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                                Update Order\r\n                                                </Button>\r\n                                            </Form.Item>\r\n                                        </Form>\r\n                                    </div> : ''\r\n                                }\r\n                                \r\n                                {\r\n                                    canView(\"Order - Details | E-mail Send\") ? <div className=\"col col-sm-12 col-lg-6 mb-10\">\r\n                                        <ReactQuill  onChange={quillChange} style={{height: \"150px\"}}/>\r\n\r\n                                        <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" onClick={() => sendMail()}\r\n                                            style={{width: \"100%\", marginTop: \"6rem\"}} >\r\n                                            Send\r\n                                        </Button>\r\n                                    </div> : ''\r\n                                }\r\n                                \r\n                            </div>\r\n\r\n                        </Fragment> : ''\r\n                    }\r\n                    \r\n                    <hr/>\r\n\r\n                    {\r\n                        canView(\"Order - Details | History\") ? <div className=\"order-history mt-50\">\r\n                            <h3 className=\"text-center\">Order Histoy</h3>\r\n\r\n                            <Timeline mode=\"alternate\">\r\n                                {\r\n                                    order?.history?.length && order.history.map((his, index) => {\r\n                                        return (\r\n                                            index % 2 == 0 \r\n                                            ? <Timeline.Item \r\n                                                position='left'>\r\n                                                    {his.description_en}\r\n                                                </Timeline.Item> :\r\n                                                <Timeline.Item color=\"green\" \r\n                                                position='right'>\r\n                                                    {his.description_en}\r\n                                                </Timeline.Item>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Timeline>\r\n                        </div> : ''\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Low-stock\\index.js",["266","267"],"E:\\react\\canpac\\src\\pages\\private\\Product-Delivery\\index.js",["268"],"E:\\react\\canpac\\src\\pages\\private\\users\\index.js",["269","270","271","272","273","274","275"],"import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Table, Space, Select, Form, Button, Input, DatePicker, Avatar, Image, Modal, Tag, Switch } from 'antd';\r\nimport {USER_LIST, USER_STATUS_UPDATE, EMAIL_CONFIRMATION_RESENT, DROPDOWN_LIST} from \"../../../scripts/api\";\r\nimport {postData} from \"../../../scripts/api-service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { alertPop, checkUserPermission } from '../../../scripts/helper';\r\nimport moment from \"moment\";\r\nimport { authContext } from '../../../context/AuthContext';\r\n\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\n\r\nexport default function Users() {\r\n    const { permissions } = useContext(authContext);\r\n    const history = useHistory();\r\n    let [users, setUsers] = useState([]);\r\n    const [search, setSearch] = useState({});\r\n    const [roles, setRoles] = useState();\r\n      \r\n    const resendVerification = async (userId) => {\r\n        let res = await postData(EMAIL_CONFIRMATION_RESENT, {\r\n            id: userId\r\n        });\r\n\r\n        if (res) {\r\n            alertPop('success', \"E-mail sented Successfully\")\r\n        }\r\n    };\r\n\r\n    \r\n    const canView = (context) => {\r\n        return checkUserPermission(context, permissions);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            render: (text, record) => (\r\n                <div>\r\n                    {record?.thumb_image_url && <Avatar src={record?.thumb_image_url} />}\r\n                    <span className=\"ml-10\">{record.name}</span>\r\n                </div>\r\n              )\r\n        },\r\n        {\r\n          title: 'Email',\r\n          dataIndex: 'email',\r\n          key: 'email',\r\n        },\r\n        {\r\n          title: 'Phone',\r\n          dataIndex: 'phone',\r\n          key: 'phone',\r\n        },\r\n        {\r\n            title: 'Company Name',\r\n            dataIndex: 'company_name',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Email Verified',\r\n            key: 'id',\r\n            render: (text, record) => <>\r\n                {\r\n                    !record.email_verified_at ? \r\n                    <Button size=\"small\" type=\"primary\" className=\"btn-warning\" onClick={() => resendVerification(record.id)}>Resend</Button> : \r\n                    moment(record.email_verified_at).format(\"YYYY-MM-DD\")\r\n                }\r\n            </>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            key: 'id',\r\n            render: (text, record) => <>\r\n                {\r\n                    record.status_title === 'Inactive' ? \r\n                    <Button size=\"small\" type=\"primary\" danger disabled={!canView('User - Approval')}\r\n                        onClick={() => updateStatus(record.id, record.status)}>{record.status_title}</Button> : \r\n                    <Button size=\"small\" type=\"primary\" style={{backgroundColor: \"#2fc787\", borderColor: \"#2fc787\"}} \r\n                    onClick={() => updateStatus(record.id, record.status)} disabled={!canView('User - Approval')}>{record.status_title}</Button>\r\n                }\r\n            </>\r\n        },\r\n        {\r\n            title: 'Action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <Button type=\"link\" onClick={() => updateStatus(record.id, record.status)}>Update Status</Button> */}\r\n                    <Button type=\"primary\" className=\"btn-brand\" disabled={!canView('User - Update')}>\r\n                        <Link to={\"/update-user/\" + record.id}>Update</Link>\r\n                    </Button>\r\n                </Space>\r\n            )\r\n        },\r\n    ];\r\n\r\n    const updateStatus = (userId, statusId) => {\r\n        confirm({\r\n            title: 'Do you Want to update this user status',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: `${statusId == 1 ? \"User will Inactive after this action\" : \"User will Active after this action\" } `,\r\n            onOk() {\r\n              let res = postData(USER_STATUS_UPDATE, {\r\n                  id: userId,\r\n                  status: (statusId * 1) ? 0 : 1\r\n              });\r\n\r\n              if (res) {\r\n                  alertPop('success', 'Status updated successfull');\r\n\r\n                  getUsersList();\r\n              }\r\n            },\r\n            onCancel() {\r\n              console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n    const generateSearchObj = (name, value) => {\r\n        setSearch(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    };\r\n\r\n    const getRoles = async() => {\r\n        let res = await postData(DROPDOWN_LIST, {\r\n            data_type: \"role\"\r\n        })\r\n\r\n        if (res) {\r\n            setRoles(res.data.data);\r\n        }\r\n    }\r\n\r\n    const getUsersList = async () => {\r\n        let res = await postData(USER_LIST, search);\r\n\r\n        if (res) setUsers(res.data.data);\r\n    };\r\n\r\n    const statusSearch = (value) => {\r\n        generateSearchObj('status', value.length ? JSON.stringify(value) : null);\r\n    }\r\n    const sarchByRole = value => {\r\n        generateSearchObj('role', value.length ? JSON.stringify(value) : null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRoles();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getUsersList()\r\n    }, [search]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>User List</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"\">\r\n                        <h3>Filter</h3>\r\n                        <div className=\"row xs-gap mt-20 mb-20\">\r\n                        <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Input size=\"large\" placeholder=\"Name\" onPressEnter={(e) => generateSearchObj('name', e.target.value)} />\r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Input size=\"large\" placeholder=\"Email\" onPressEnter={(e) => generateSearchObj('email', e.target.value)} />\r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Input size=\"large\" placeholder=\"Phone\" onPressEnter={(e) => generateSearchObj('phone', e.target.value)} />\r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Select\r\n                                    size=\"large\"\r\n                                    allowClear\r\n                                    style={{ width: '100%' }}\r\n                                    placeholder=\"Search email verified\"\r\n                                    onChange={(value) => generateSearchObj('email_verified', value)}\r\n                                    >\r\n                                    <Option key={'Verifed'} value='verifed'>Verifed</Option>\r\n                                    <Option key={'not_verified'} value=\"not verified\">Not Verified</Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Select\r\n                                    size=\"large\"\r\n                                    mode=\"multiple\"\r\n                                    allowClear\r\n                                    style={{ width: '100%' }}\r\n                                    placeholder=\"Search Status\"\r\n                                    onChange={statusSearch}\r\n                                    >\r\n                                    <Option key={1} value={1}>Active</Option>\r\n                                    <Option key={0} value={0}>Inactive</Option>\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"col col-sm-12 col-lg-3 mb-10\">\r\n                                <Select\r\n                                    size=\"large\"\r\n                                    allowClear\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: '100%' }}\r\n                                    placeholder=\"Search Role\"\r\n                                    onChange={sarchByRole}\r\n                                    >\r\n                                        {\r\n                                            roles?.length && roles.map(role => <Option key={role.id} value={role.id}>{role.name}</Option>)\r\n                                        }\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"col col-sm-12 col-lg-3 mb-10\">\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr/>\r\n                    {\r\n                        canView('User - Creat') ? <div className=\"my-20\">\r\n                            <Button onClick={() => {history.push('/users-create')}} className=\"btn-brand btn-block float-right mb-20\" size=\"large\" \r\n                                type=\"primary\" style={{width: \"300px\"}}> Add User </Button>\r\n                        </div> : ''\r\n                    }\r\n                    \r\n\r\n                    <Table dataSource={users} columns={columns} />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Merchents\\index.js",["276","277","278","279"],"import React, { Fragment, useState,useEffect, useContext } from 'react';\r\nimport {Table, Space, Select, Form, Button, Input, DatePicker, Modal } from 'antd';\r\nimport { MERCHENT_LIST, USER_STATUS_UPDATE, EMAIL_CONFIRMATION_RESENT, DROPDOWN_LIST } from \"../../../scripts/api\";\r\nimport { postData } from \"../../../scripts/api-service\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { alertPop, checkUserPermission } from '../../../scripts/helper';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport moment from \"moment\";\r\nimport { authContext } from '../../../context/AuthContext';\r\n\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\n\r\nexport default function Merchents() {\r\n    const { permissions } = useContext(authContext);\r\n    const history = useHistory();\r\n    const [marchents, setMerchents ] = useState();\r\n    const [search, setSearch] = useState();\r\n    const [roles, setRoles] = useState();\r\n\r\n    const canView = (context) => {\r\n        return checkUserPermission(context, permissions);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n        },\r\n        {\r\n          title: 'Email',\r\n          dataIndex: 'email',\r\n          key: 'email',\r\n        },\r\n        {\r\n          title: 'Phone',\r\n          dataIndex: 'phone',\r\n          key: 'phone',\r\n        },\r\n        {\r\n            title: 'Email Verified',\r\n            key: 'id',\r\n            render: (text, record) => <>\r\n                {\r\n                    !record.email_verified_at ? \r\n                    <Button size=\"small\" type=\"primary\" className=\"btn-warning\" onClick={() => resendVerification(record.id)}>Resend</Button> : \r\n                    moment(record.email_verified_at).format(\"YYYY-MM-DD\")\r\n                }\r\n            </>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            key: '',\r\n            render: (text, record) => <>\r\n                {\r\n                    record.status_title === 'Inactive' ? \r\n                    <Button size=\"small\" type=\"primary\" danger disabled={!canView('Merchant - Approval')}\r\n                        onClick={() => updateStatus(record.id, record.status)}>{record.status_title}</Button> : \r\n                    <Button size=\"small\" type=\"primary\" disabled={!canView('Merchant - Approval')} \r\n                        style={{backgroundColor: \"#2fc787\", borderColor: \"#2fc787\"}} onClick={() => updateStatus(record.id, record.status)}>{record.status_title}</Button>\r\n                }\r\n            </>\r\n        },\r\n        {\r\n            title: 'Approve',\r\n            key: 'update',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <Button type=\"link\" onClick={() => updateStatus(record.id, record.status)}>Update Status</Button> */}\r\n                    <Button type=\"primary\" className=\"btn-brand\"  disabled={!canView('Merchant - Update')} >\r\n                        <Link to={`update-merchents/${record.id}`}>Update</Link>\r\n                    </Button>\r\n                </Space>\r\n              )\r\n        },\r\n    ].filter(item => !canView('Merchant - Update') ? item.key !== 'update' : item);\r\n\r\n    const resendVerification = async (userId) => {\r\n        let res = await postData(EMAIL_CONFIRMATION_RESENT, {\r\n            id: userId\r\n        });\r\n\r\n        if (res) {\r\n            alertPop('success', \"E-mail sented Successfully\")\r\n        }\r\n    };\r\n\r\n    const updateStatus = (userId, statusId) => {\r\n        confirm({\r\n            title: 'Do you Want to update this user status',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: `${statusId == 1 ? \"User will Inactive after this action\" : \"User will Active after this action\" } `,\r\n            onOk() {\r\n              let res = postData(USER_STATUS_UPDATE, {\r\n                  id: userId,\r\n                  status: (statusId * 1) ? 0 : 1\r\n              });\r\n\r\n              if (res) {\r\n                  alertPop('success', 'Status updated successfull');\r\n                  setTimeout(() => {\r\n                    getMerchents();\r\n                  }, 500)  \r\n              }\r\n            },\r\n            onCancel() {\r\n              console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n    const getMerchents = async () => {\r\n        let res = await postData(MERCHENT_LIST, search);\r\n\r\n        if (res) setMerchents(res.data.data);\r\n    }\r\n\r\n    const generateSearchObj = (name, value) => {\r\n        setSearch(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    };\r\n\r\n    const getRoles = async() => {\r\n        let res = await postData(DROPDOWN_LIST, {\r\n            data_type: \"role\"\r\n        })\r\n\r\n        if (res) {\r\n            setRoles(res.data.data);\r\n        }\r\n    }\r\n\r\n    const statusSearch = (value) => {\r\n        generateSearchObj('status', value.length ? JSON.stringify(value) : null);\r\n    }\r\n    const sarchByRole = value => {\r\n        generateSearchObj('role', value.length ? JSON.stringify(value) : null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRoles();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getMerchents()\r\n    }, [search]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Merchents</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                <div className=\"\">\r\n                        <h3>Filter</h3>\r\n                        <div className=\"row xs-gap mt-20 mb-20\">\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Input size=\"large\" placeholder=\"Name\" onPressEnter={(e) => generateSearchObj('name', e.target.value)} />\r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Input size=\"large\" placeholder=\"Email\" onPressEnter={(e) => generateSearchObj('email', e.target.value)} />\r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Input size=\"large\" placeholder=\"Phone\" onPressEnter={(e) => generateSearchObj('phone', e.target.value)} />\r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Select\r\n                                    size=\"large\"\r\n                                    allowClear\r\n                                    style={{ width: '100%' }}\r\n                                    placeholder=\"Search email verified\"\r\n                                    onChange={(value) => generateSearchObj('email_verified', value)}\r\n                                    >\r\n                                    <Option key={'Verifed'} value='verifed'>Verifed</Option>\r\n                                    <Option key={'not_verified'} value=\"not verified\">Not Verified</Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                <Select\r\n                                    size=\"large\"\r\n                                    allowClear\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: '100%' }}\r\n                                    placeholder=\"Search Status\"\r\n                                    onChange={statusSearch}\r\n                                    >\r\n                                    <Option key={1} value={\"1\"}>Active</Option>\r\n                                    <Option key={0} value={\"0\"}>Inactive</Option>\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"col col-sm-12 col-lg-3 mb-10\">\r\n                                <Select\r\n                                    size=\"large\"\r\n                                    mode=\"multiple\"\r\n                                    allowClear\r\n                                    style={{ width: '100%' }}\r\n                                    placeholder=\"Search Role\"\r\n                                    onChange={sarchByRole}\r\n                                    >\r\n                                        {\r\n                                            roles?.length && roles.map(role => <Option key={role.id} value={role.id}>{role.name}</Option>)\r\n                                        }\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"col col-sm-12 col-lg-3 mb-10\">\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"my-20\">\r\n                        {\r\n                            canView('Merchant - Creat') ? <Button onClick={() => {history.push('/create-merchents')}} className=\"btn-brand btn-block float-right mb-20\" size=\"large\" \r\n                            type=\"primary\" style={{width: \"300px\"}}> Add Merchent </Button> : ''\r\n                        }\r\n                    </div>\r\n\r\n                    <Table dataSource={marchents} columns={columns} />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Permissions\\index.js",["280","281","282"],"import React, { Fragment, useEffect, useState, useContext  } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Table, Space, Select, Form, Button, Input, DatePicker, Modal } from 'antd';\r\nimport { PERMISSION_LIST, PERMISSION_CREATE, PERMISSION_UPDATE, PERMISSION_DELETE } from \"../../../scripts/api\";\r\nimport { postData } from \"../../../scripts/api-service\";\r\nimport { alertPop, checkUserPermission } from '../../../scripts/helper';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { authContext } from '../../../context/AuthContext';\r\n\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst children = [];\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\n\r\nexport default function Permissions(permissionId) {\r\n    const { permissions } = useContext(authContext);\r\n    const formRef = React.createRef();\r\n    const [form] = Form.useForm();\r\n    // const formRefUpdate = React.createRef();\r\n    const [changepassModal, setChangepassModal] = useState(false);\r\n    const [permissionList, setPermissions]=  useState();\r\n    const [updatePermission, setUpdatePermission] = useState();\r\n    const [selectedPermission, setSelectedPermission] = useState();\r\n    const [search, setSearch] = useState({});\r\n\r\n    const showDeleteConfirm = (permissionId) => {\r\n        confirm({\r\n            title: 'Are you sure delete this permission?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'You will not get this permission back.',\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk() {\r\n              let res = postData(PERMISSION_DELETE, {id: permissionId});\r\n\r\n              if (res) {\r\n                alertPop(\"success\", \"Permission Deleted Successfully\");\r\n                setTimeout(() => {\r\n                    getPermissions();\r\n                }, 500);\r\n              }\r\n            },\r\n            onCancel() {\r\n              console.log('Cancel');\r\n            },\r\n        });\r\n    };\r\n\r\n    const updatePermis = (permiss) => {\r\n        setSelectedPermission(permiss);\r\n        setUpdatePermission(true);\r\n        \r\n        form.setFieldsValue({\r\n            name: permiss.name,\r\n        });\r\n    }\r\n\r\n    const canView = (context) => {\r\n        return checkUserPermission(context, permissions);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n        },\r\n        {\r\n          title: 'Guard Name',\r\n          dataIndex: 'guard_name',\r\n          key: 'guard_name',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button type=\"primary\" className=\"btn-brand\" disabled={!canView('Permission - Update')}\r\n                        block onClick={() => updatePermis(record)}>\r\n                        Update\r\n                    </Button>\r\n                    <Button danger onClick={() => showDeleteConfirm(record.id)} disabled={!canView('Permission - Delete')}>\r\n                        Delete\r\n                    </Button>\r\n                </Space>\r\n              )\r\n        },\r\n    ];\r\n\r\n    const onFinish = async (values) => {\r\n        let res = await postData(PERMISSION_CREATE, values)\r\n\r\n        if (res) {\r\n            alertPop('success', \"Premission Created Successfully!\");\r\n            getPermissions();\r\n            setChangepassModal(false);\r\n            formRef.current.resetFields();\r\n        }\r\n    };\r\n\r\n    const onUpdateFinish = async (values) => {\r\n        let res = await postData(PERMISSION_UPDATE, {\r\n            id: selectedPermission.id,\r\n            name: values.name\r\n        });\r\n\r\n        if (res) {\r\n            alertPop('success', \"Permission Updated Successfully!\");\r\n            setSelectedPermission(null);\r\n            setUpdatePermission(false);\r\n            form.resetFields();\r\n\r\n            setTimeout(() => {\r\n                getPermissions();\r\n            }, 500)\r\n        }\r\n    }\r\n\r\n    const getPermissions = async () => {\r\n        let res = await postData(PERMISSION_LIST, search);\r\n        if (res) setPermissions(res?.data?.data)\r\n    }\r\n    \r\n    const generateSearchObj = (name, value) => {\r\n        setSearch(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPermissions()\r\n    }, [search]) \r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Permissions</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"\">\r\n                        <h3>Filter</h3>\r\n                        <div className=\"row xs-gap mt-20 mb-20\">\r\n                            <div className=\"col  col-sm-12 col-lg-4 mb-10\">\r\n                                <Input size=\"large\" placeholder=\"Type Permission Name\" onPressEnter={(e) => generateSearchObj('name', e.target.value)}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    {\r\n                        canView('Permission - Creat') ? <div className=\"my-20\">\r\n                            <Button onClick={() => setChangepassModal(true)} className=\"btn-brand btn-block float-right mb-20\" size=\"large\" \r\n                                type=\"primary\" style={{width: \"300px\"}}>Create Permissions</Button>\r\n                        </div> : ''\r\n                    }\r\n\r\n                    <Table dataSource={permissionList} columns={columns} />\r\n                </div>\r\n            </div>\r\n\r\n            <Modal title=\"Create Permission\"\r\n                visible={changepassModal}\r\n                width=\"50vw\"\r\n                onCancel={() => {setChangepassModal(false);}}\r\n                footer={false}\r\n            >\r\n                <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                    ref={formRef}\r\n                    onFinish={onFinish}\r\n                    >\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        rules={[{ required: true, message: 'Please input name!' }]}\r\n                    >\r\n                        <Input size=\"large\" placeholder=\"Name\"/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                            Save\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Modal title=\"Update Permission\"\r\n                visible={updatePermission}\r\n                width=\"50vw\"\r\n                onCancel={() => {setUpdatePermission(false);}}\r\n                footer={false}\r\n            >\r\n                <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                    form={form}\r\n                    onFinish={onUpdateFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        rules={[{ required: true, message: 'Please input name!' }]}\r\n                    >\r\n                        <Input size=\"large\" placeholder=\"Name\"/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\"\r\n                             htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                            Update\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Roles\\index.js",["283","284","285"],"import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Table, Space, Select, Modal, Button, Input, DatePicker  } from 'antd';\r\nimport { ROLE_LIST, ROLE_DELETE } from \"../../../scripts/api\";\r\nimport {postData} from \"../../../scripts/api-service\";\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport {alertPop, checkUserPermission} from \"../../../scripts/helper\";\r\nimport { authContext } from '../../../context/AuthContext';\r\n\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst children = [];\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\n\r\nexport default function Roles() {\r\n    const { permissions } = useContext(authContext);\r\n    const [roles, setRoles] = useState([]);\r\n    const [search, setSearch] = useState({});\r\n\r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n        },\r\n        {\r\n          title: 'Gyard Name',\r\n          dataIndex: 'guard_name',\r\n          key: 'age',\r\n        },\r\n        {\r\n            title: 'Permissions',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                  <a>{record?.permissions?.length}</a>\r\n                </Space>\r\n            ),\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\" >\r\n                    <Button type=\"primary\" className=\"btn-brand\" disabled={!canView('Role - Update')}>\r\n                        <Link to={'update-role/'+ record.id}>Update</Link>\r\n                    </Button>\r\n                    <Button danger onClick={() => showDeleteConfirm(record.id)} disabled={!canView('Role - Delete')}>\r\n                        Delete\r\n                    </Button>\r\n                </Space>\r\n            )\r\n        },\r\n    ];\r\n\r\n    \r\n    const canView = (context) => {\r\n        return checkUserPermission(context, permissions);\r\n    };\r\n\r\n    const showDeleteConfirm = (roleId) => {\r\n        confirm({\r\n            title: 'Are you sure delete this role?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'You will not get this role back.',\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n            cancelText: 'No',\r\n            onOk() {\r\n              let res = postData(ROLE_DELETE, {id: roleId});\r\n\r\n              if (res) {\r\n                alertPop(\"success\", \"Role Deleted Successfully\");\r\n                setTimeout(() => {\r\n                    getRoles();\r\n                }, 500);\r\n              }\r\n            },\r\n            onCancel() {\r\n              console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n    const getRoles = async () => {\r\n        let res = await postData(ROLE_LIST, search);\r\n\r\n        if (res) {\r\n            setRoles(res.data.data);\r\n        }\r\n    };\r\n\r\n    const generateSearchObj = (name, value) => {\r\n        setSearch(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRoles()\r\n    }, [search])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Roles</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"\">\r\n                        <h3>Filter</h3>\r\n                        <div className=\"row xs-gap mt-20 mb-20\">\r\n                            <div className=\"col  col-sm-12 col-lg-4 mb-10\">\r\n                                <Input size=\"large\" placeholder=\"Type Role Name\" onPressEnter={(e) => generateSearchObj('name', e.target.value)}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    {\r\n                        canView(\"Role - Creat\") ? <div className=\"my-20\">\r\n                            <Link to=\"/create-role\">\r\n                                <Button className=\"btn-brand btn-block float-right mb-20\" size=\"large\" \r\n                                    type=\"primary\" style={{width: \"300px\"}}>Create Role</Button>\r\n                            </Link>\r\n                        </div> : ''\r\n                    }\r\n                    \r\n                    <Table dataSource={roles} columns={columns} />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Roles\\Create-Role.js",["286","287","288"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport {Table, Space, Select, Form, Button, Input, Checkbox , Row, Col } from 'antd';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { PERMISSION_LIST, ROLE_CREATE } from '../../../scripts/api';\r\nimport { alertPop } from '../../../scripts/helper';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function CreateRole() {\r\n    const history = useHistory();\r\n    const [permissions, setPermissions] = useState([]);\r\n\r\n    const onFinish = async (values) => {\r\n        let {name, permissions} = values;\r\n\r\n        let data = {\r\n            name: name,\r\n            permissions: JSON.stringify(permissions)\r\n        }\r\n\r\n        let res = await postData(ROLE_CREATE, data);\r\n        if (res) {\r\n            alertPop('success', \"Role Created Successfully!\");\r\n            history.push('/roles');\r\n        }\r\n    };\r\n\r\n    const getPermissions = async () => {\r\n        let res = await postData(PERMISSION_LIST, {});\r\n        if (res) setPermissions(res.data.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPermissions()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Create Role</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\"}}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                        >\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col  col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    rules={[{ required: true, message: 'Please input role name' }]}\r\n                                >\r\n                                    <Input size=\"large\" placeholder=\"Name\" />   \r\n                                </Form.Item>\r\n                            </div>\r\n\r\n                            <div className=\"col col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item\r\n                                    label=\"Permissions\"\r\n                                    name=\"permissions\"\r\n                                    rules={[{ required: true, message: \"Required*\" }]}\r\n                                >\r\n                                    <Checkbox.Group style={{ width: '100%', height: \"350px\", \"overflowY\": \"scroll\" }}>\r\n                                        <Row>\r\n                                            {\r\n                                                permissions.length && permissions.map(per => <Col span={24}>\r\n                                                    <Checkbox value={per.id} key={per.id}>{per.name}</Checkbox>\r\n                                                </Col>)\r\n                                            }\r\n                                        </Row>\r\n                                    </Checkbox.Group>  \r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col  col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block float-right\" size=\"large\" \r\n                                        type=\"primary\" htmlType=\"submit\">\r\n                                        Create Role\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\scripts\\api.js",[],"E:\\react\\canpac\\src\\scripts\\api-service.js",["289","290"],"import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {checkRes, alertPop} from \"./helper\";\r\nimport i18n from 'i18next'\r\n\r\nconst base_url = process.env.REACT_APP_BASE;\r\nconst token = Cookies.get(\"canpacToken\") || \"\";\r\n\r\naxios.defaults.headers.post['Accept'] = 'application/json';\r\n\r\nconst alert = (messages) => {\r\n  alertPop(\"error\", messages ? messages : \"Something went wrong\");\r\n};\r\n\r\n/* query ---> api url to query with\r\n   no_token ---> acts as a flag for no need to use token */\r\nexport const getData = async (query, no_token) => {\r\n  try {\r\n    let data = await axios.get(`${base_url}${query}`, {\r\n      headers: no_token ? {} : {\r\n        'Authorization': `Bearer ${token}`,\r\n        \"lang\": i18n?.language || 'en',\r\n        \"responseType\": \"arraybuffer\"\r\n      },\r\n    });\r\n    return data;\r\n    // if (checkRes(data.status)) {\r\n    //     // setUserProfile();\r\n    //     return data;\r\n    // } else {\r\n    //     toast.error(msg_undefined);\r\n    // }\r\n  } catch (error) {\r\n    // checkRes(error?.response?.status);\r\n    // error.response?.data?.messages &&\r\n    // typeof error.response?.data?.messages === \"object\"\r\n    // ? error.response.data.messages.map((err) => {\r\n    //     alertPop(error_status, err);\r\n    //     })\r\n    // : errorHandle(error);\r\n    // return false;\r\n  }\r\n};\r\n\r\n/* query ---> api url to query with\r\n     data ---> data to be posted\r\n     no_token ---> acts as a flag for no need to use token */\r\nexport const postData = async (query, data, no_token) => {\r\n  try {\r\n    let res = await axios({\r\n      method: \"post\",\r\n      url: `${base_url}${query}`,\r\n      headers: no_token ? {} : {\r\n            'Authorization': `Bearer ${token}`,\r\n            \"lang\": i18n?.language || 'en'\r\n          },\r\n      data: data,\r\n    });\r\n    if (checkRes(res?.data.code)) {\r\n      return res;\r\n    } else {\r\n      alert(res?.data?.message);\r\n      \r\n      if (res?.data?.errors && Object.keys(res.data.errors).length !== 0) {\r\n        let error = res.data.errors;\r\n\r\n        for (const prop in error) {\r\n          if (error[prop][0]) alert(error[prop][0])\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    checkRes(error?.response?.status);\r\n    Array.isArray(error?.response?.data?.messages)\r\n      ? error.response.data.messages.map((err) => {\r\n          alertPop(\"error\", err);\r\n          console.log(\"err\", err);\r\n        })\r\n      : console.log(\"error\", error); //errorHandle(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const putData = async (query, data, no_token) => {\r\n  try {\r\n    console.log(`${base_url}${query}`);\r\n    let res = await axios({\r\n      method: \"put\",\r\n      url: `${base_url}${query}`,\r\n      headers: no_token\r\n        ? {}\r\n        : {\r\n            'x-auth-token': `${token}`,\r\n          },\r\n      data: data,\r\n    });\r\n\r\n    return res;\r\n    // if (checkRes(res?.data.status)) {\r\n    //     // setUserProfile();\r\n    //     return res;\r\n    // } else {\r\n    //     toast.error(msg_undefined);\r\n    // }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    // checkRes(error.response.status);\r\n    // error.response && error.response.data && error.response.data.messages\r\n    //   ? error.response.data.messages.map((err) => {\r\n    //       // alertPop(error_status, err);\r\n    //       console.log(\"err\", err);\r\n    //     })\r\n    //   : console.log(\"error\", error); //errorHandle(error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// const setUserProfile = async () => {\r\n//   try {\r\n//     let res = await axios({\r\n//       method: \"post\",\r\n//       url: `${base_url}${ME}`,\r\n//       headers: {\r\n//         Authorization: `bearer ${token}`,\r\n//       },\r\n//       data: {},\r\n//     });\r\n\r\n//     if (res?.data?.status_code && checkRes(res.data.status_code)) {\r\n//       window.localStorage.setItem(\"profile\", JSON.stringify(res.data));\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(\"error\", error);\r\n//   }\r\n// };\r\n\r\nexport const deleteData = async (query, no_token) => {\r\n  try {\r\n    let data = await axios.delete(`${base_url}${query}`, {\r\n      headers: no_token\r\n        ? {}\r\n        : {\r\n          'x-auth-token': `${token}`,\r\n          },\r\n    });\r\n    return data;\r\n    // if (checkRes(data.status)) {\r\n    //     // setUserProfile();\r\n    //     return data;\r\n    // } else {\r\n    //     toast.error(msg_undefined);\r\n    // }\r\n  } catch (error) {\r\n    // checkRes(error?.response?.status);\r\n    // error.response?.data?.messages &&\r\n    // typeof error.response?.data?.messages === \"object\"\r\n    // ? error.response.data.messages.map((err) => {\r\n    //     alertPop(error_status, err);\r\n    //     })\r\n    // : errorHandle(error);\r\n    // return false;\r\n  }\r\n};\r\n\r\n\r\nexport const postDataProfile = async (query, data, token) => {\r\n  try {\r\n    let res = await axios({\r\n      method: \"post\",\r\n      url: `${base_url}${query}`,\r\n      headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            \"lang\": i18n?.language || 'en'\r\n          },\r\n      data: data,\r\n    });\r\n    if (checkRes(res?.data.code)) {\r\n      return res;\r\n    } else {\r\n      alert(res?.data?.message);\r\n      \r\n      if (res?.data?.errors && Object.keys(res.data.errors).length !== 0) {\r\n        let error = res.data.errors;\r\n\r\n        for (const prop in error) {\r\n          if (error[prop][0]) alert(error[prop][0])\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    checkRes(error?.response?.status);\r\n    Array.isArray(error?.response?.data?.messages)\r\n      ? error.response.data.messages.map((err) => {\r\n          alertPop(\"error\", err);\r\n          console.log(\"err\", err);\r\n        })\r\n      : console.log(\"error\", error); //errorHandle(error);\r\n    return false;\r\n  }\r\n};\r\n","E:\\react\\canpac\\src\\scripts\\helper.js",[],"E:\\react\\canpac\\src\\context\\AuthContext.js",["291"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { USER_PROFILE, ROLE_LIST } from \"../scripts/api\";\r\nimport { postData } from '../scripts/api-service';\r\n\r\nexport const authContext = createContext();\r\n\r\nconst AuthContext = props => {\r\n    const [user, setUser] = useState();\r\n    const [permissions, setPermissions] = useState();\r\n\r\n    useEffect(() => {\r\n        setUser();\r\n    }, []);\r\n\r\n    const setUserInfo = async () => {\r\n        let res = await postData(USER_PROFILE, {});\r\n        if (res) {\r\n            let masterData = res?.data?.data;\r\n            setUser(masterData);\r\n            setPermissions(masterData?.roles[0].permissions);\r\n            localStorage.setItem(\"canpacPermissions\", JSON.stringify(masterData?.roles[0].permissions));\r\n        }\r\n    }\r\n\r\n    const getUserInfo = () => {\r\n        return user;\r\n    }\r\n\r\n    const DeleteUserInfo = () => {\r\n        setUser(null);\r\n    }\r\n\r\n    return (\r\n        <authContext.Provider\r\n            value={{\r\n                user,\r\n                setUserInfo,\r\n                getUserInfo,\r\n                DeleteUserInfo,\r\n                permissions\r\n            }}>\r\n            {props.children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext;\r\n","E:\\react\\canpac\\src\\pages\\private\\Report\\WeeklyReport.js",["292","293","294","295","296","297","298","299","300","301","302","303","304"],"import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Table, Space, Select, Form, Button, Input, DatePicker  } from 'antd';\r\nimport { postData, getData} from '../../../scripts/api-service';\r\nimport { WEEK_REPORT, WEEKLY_REPORT_EXPORT, draft_report, DROPDOWN_LIST } from '../../../scripts/api';\r\nimport moment from \"moment\";\r\nimport { saveAs } from 'file-saver';\r\nimport Cookies from \"js-cookie\";\r\nimport { buildSearchQuery, checkUserPermission } from '../../../scripts/helper';\r\nimport { authContext } from '../../../context/AuthContext';\r\nimport jsPDF from 'jspdf';\r\nimport pdfMake from 'pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport htmlToPdfmake from 'html-to-pdfmake';\r\nimport TableToExcel from \"@linways/table-to-excel\";\r\nimport reportData from \"./week.json\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function WeeklyReport() {\r\n    const { permissions } = useContext(authContext);\r\n\r\n    const token = Cookies.get(\"canpacToken\") || \"\";\r\n    \r\n    const [report, setReport] = useState();\r\n    const [dateRange, setDateRange] = useState({\r\n      start_date: moment().startOf('week').format('YYYY-MM-DD'),\r\n      end_date: moment().endOf('week').format('YYYY-MM-DD')\r\n    });\r\n    const [exportData, setExportData] = useState([]);\r\n    const [customer, setCustomer] = useState();\r\n\r\n    const columns = [\r\n        {\r\n          title: 'Order NO',\r\n          dataIndex: 'OriginNum',\r\n          key: 'OriginNum',\r\n        },\r\n        {\r\n          title: 'Customer',\r\n          key: 'CardName',\r\n          render: (text, record) => (\r\n            <span>\r\n                {record.CardName} - {record.CardCode}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Product',\r\n          key: 'Product Code',\r\n          render: (text, record) => (\r\n            <span>\r\n                {record.ItemName} - {record.ItemCode}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n            title: 'Production Due Date',\r\n            dataIndex: 'DueDate',\r\n            key: 'DueDate',\r\n        },\r\n        {\r\n            title: 'Product Order',\r\n            dataIndex: 'PlannedQty',\r\n            key: 'PlannedQty',\r\n        },\r\n        {\r\n            title: 'Stock',\r\n            dataIndex: 'CmpltQty',\r\n            key: 'CmpltQty',\r\n        },\r\n        {\r\n          title: 'Weight',\r\n          dataIndex: 'SWeight1',\r\n          key: 'SWeight1',\r\n        },\r\n        {\r\n          title: 'Thickness',\r\n          dataIndex: 'SWidth1',\r\n          key: 'SWidth1',\r\n        },\r\n    ];\r\n\r\n    function onChange(data) {\r\n      if (data && data._d) {\r\n        setDateRange({\r\n          start_date: moment(data._d).startOf('week').format('YYYY-MM-DD'),\r\n          end_date: moment(data._d).endOf('week').format('YYYY-MM-DD')\r\n        })\r\n      }\r\n    }\r\n\r\n    const canView = (context) => {\r\n      return checkUserPermission(context, permissions);\r\n    };\r\n\r\n    const getReport = async () => {\r\n      let res = await postData(WEEK_REPORT, dateRange);\r\n\r\n      if (res) {\r\n        // setReport(res.data.data);\r\n        // let masterData = reportData.data;\r\n        let masterData = res.data.data;\r\n\r\n        let printed_sheet = masterData.printed_sheet;\r\n        let can_stock = masterData.can_stock;\r\n\r\n        console.log(\"printed_sheet\", [...printed_sheet, ...can_stock]);\r\n\r\n        setReport([...printed_sheet, ...can_stock]); \r\n        getReportData()\r\n      }\r\n    }\r\n\r\n    const getReportData = async () => {\r\n      let query = buildSearchQuery(dateRange);\r\n      let url = WEEKLY_REPORT_EXPORT + `?${query}`;\r\n      let res = await getData( url );\r\n\r\n      if (res) {\r\n        let masterData = res.data.data;\r\n\r\n        console.log(\"masterData\", masterData);\r\n        console.log(\"reportData\", reportData);\r\n      \r\n        setExportData(masterData || [])\r\n      }\r\n    }\r\n\r\n    const generateReport = async () => {\r\n// =======================================================================================================\r\n      // const doc = new jsPDF();\r\n         \r\n      // //get table html\r\n      // const pdfTable = document.getElementById('divToPrint');\r\n      // //html to pdf format\r\n      // var html = htmlToPdfmake(pdfTable.innerHTML);\r\n    \r\n      // const documentDefinition = { content: html };\r\n      // pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n      // pdfMake.createPdf(documentDefinition).open();\r\n\r\n      // ===================================================================================================\r\n      // let filename =\"hello\",\r\n      //     tableID = \"divToPrint\";\r\n\r\n      // var downloadLink;\r\n      // var dataType = 'application/vnd.ms-excel';\r\n      // var tableSelect = document.getElementById(tableID);\r\n      // var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');\r\n      \r\n      // // Specify file name\r\n      // filename = filename?filename+'.xlsx':'excel_data.xls';\r\n      \r\n      // // Create download link element\r\n      // downloadLink = document.createElement(\"a\");\r\n      \r\n      // document.body.appendChild(downloadLink);\r\n      \r\n      // if(navigator.msSaveOrOpenBlob){\r\n      //     var blob = new Blob(['\\ufeff', tableHTML], {\r\n      //         type: dataType\r\n      //     });\r\n      //     navigator.msSaveOrOpenBlob( blob, filename);\r\n      // }else{\r\n      //     // Create a link to the file\r\n      //     downloadLink.href = 'data:' + dataType + ', ' + tableHTML;\r\n      \r\n      //     // Setting the file name\r\n      //     downloadLink.download = filename;\r\n          \r\n      //     //triggering the function\r\n      //     downloadLink.click();\r\n      // }\r\n\r\n      // ========================================================================================\r\n\r\n      TableToExcel.convert(document.getElementById(\"divToPrint\"), {\r\n        name: `Weekly-report-${moment().format('YYYY-MM-DD--HH-mm-ss')}.xlsx`,\r\n        sheet: {\r\n          name: \"Sheet 1\"\r\n        }\r\n      });\r\n    }\r\n\r\n    const sarchByCustomer = () => {\r\n\r\n    }\r\n\r\n    const getCustomer = async() => {\r\n      let res = await postData(DROPDOWN_LIST, {\r\n          data_type: \"customer\"\r\n      })\r\n\r\n      if (res) {\r\n        setCustomer(res.data.data);\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      getReport();\r\n      getCustomer();\r\n    }, [dateRange])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Weekly Report</h1>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"mb-20\">\r\n                      <span>\r\n                        <DatePicker size=\"large\" onChange={onChange} defaultValue={moment()} className=\"mr-20\" \r\n                          allowClear={false} picker=\"week\" style={{width: \"300px\"}} />\r\n                      </span>\r\n                        \r\n                      <span className=\"\">\r\n                            <Select\r\n                                size=\"large\"\r\n                                allowClear\r\n                                mode=\"multiple\"\r\n                                style={{ width: '300px' }}\r\n                                placeholder=\"Search Customer\"\r\n                                onChange={sarchByCustomer}\r\n                                >\r\n                                    {\r\n                                        customer?.length && customer.map(role => <Option key={role.id} value={role.id}>{role.name}</Option>)\r\n                                    }\r\n                            </Select>\r\n                        </span>\r\n                        {\r\n                          canView('Weekly Report | Export') ? <div className=\"float-right\">\r\n                            <Button type=\"primary\" className=\"btn-brand btn-block float-right mb-20\" \r\n                            onClick={() => generateReport()} size=\"large\">Generate Report</Button>\r\n                          </div> : null\r\n                        }    \r\n\r\n\r\n                    </div>\r\n                    <Table dataSource={report} columns={columns} />\r\n                </div>\r\n            </div>\r\n            \r\n            <div id=\"divToPrint\" className=\"export-weekreprot d-none\" data-cols-width=\"10, 30, 20, 20, 30, 20\">\r\n              <table style={{border: \"3px\"}}>\r\n                  <tr>\r\n                      <td class=\"text-center font12\" data-a-h=\"center\" data-f-bold=\"true\"\r\n                        style={{textAlign: \"center\", border: \"none\", width: \"475.50pt\" }} colspan=\"6\">\r\n                          <h3>CANPAC VIETNAM Co.,LTD.</h3>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td colspan=\"6\" data-a-h=\"center\">\r\n                      <p>Address (Địa chỉ): No.09, Vsip II-A, 15 road, Viet Nam -Singapore Industrial Park II-A, Tan Uyen Town, Binh Duong Provine</p>\r\n                      </td>\r\n                      </tr>\r\n                      <tr>\r\n                      <td data-a-h=\"center\" colspan=\"6\">\r\n                      <p>Tel (ĐT): 0650 380 1166 Fax: 0650.380 1169</p>\r\n                      </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                  </tr>\r\n                  <tr>\r\n                      <td data-f-bold=\"true\" data-f-sz=\"14\" colspan=\"7\" data-a-h=\"center\" class=\"text-center\" style={{textAlign: \"center\", border: \"none\" }}>\r\n                          <br/>\r\n                            <h1>WEEKLY STOCK ADVICE</h1>\r\n                          <br/>\r\n                      </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td></td>\r\n                  </tr>\r\n              </table>\r\n\r\n              <table>\r\n                <tr>\r\n                  <th>To:</th>\r\n                  <th colspan=\"3\">{exportData?.customer?.name}</th>\r\n                </tr>\r\n                <tr>\r\n                  <th>Phone:</th>\r\n                  <th colspan=\"3\">{exportData?.customer?.phone}</th>\r\n                </tr>\r\n                <tr>\r\n                  <th>Date:</th>\r\n                  <th colspan=\"3\">{moment(exportData?.customer?.report_print_date).format(\"DD/MM/YYYY\")}</th>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                </tr>\r\n              </table>\r\n              <br/>\r\n\r\n              <table  class=\"table-border\" border=\"0\" cellspacing=\"0\">\r\n                  <tr data-height=\"60\" data-b-a-s=\"BORDER_STYLES\">\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">No.</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\" rowspan=\"1\">Description</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Pending Printing order</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Can Stock</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Weight Standard(+5g)</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Thickness(mm)</th>\r\n                  </tr>\r\n                  <tr data-height=\"60\" data-b-a-s=\"BORDER_STYLES\">\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Stt</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Diễn Giải</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">SL Đơn hàng in</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">SL Lon TP</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Trọng Lượng chuẩn(+5g)</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Độ dày</th>\r\n                  </tr>\r\n                  {\r\n                    exportData?.can_stock?.map((data, i) => <> \r\n                      <tr key={'first-' + i}>\r\n                        <td>{i + 1}</td>\r\n                        <td>\r\n                          {data.ItemName} - {data.ItemCode} \r\n                        </td>\r\n                        <td></td>\r\n                        <td>{data.CmpltQty}</td>\r\n                        <td>{data.SWeight1}</td>\r\n                        <td>{data.SWidth1}</td>\r\n                      </tr>\r\n                    </>)\r\n                  }\r\n\r\n                  <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                  </tr>\r\n              </table>\r\n              \r\n              <br/>\r\n              <br/>\r\n\r\n              <table class=\"table-border\" border=\"0\" data-b-r-s=\"medium\">\r\n                  <tr data-height=\"60\" data-b-r-s=\"medium\">\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">No.</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Description</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Printed Sheet (Body Blank)</th>\r\n                      <th data-b-a-s=\"medium\" data-b-r-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Total of body blank & can stock</th>\r\n                  </tr>\r\n                  <tr data-height=\"60\">\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Stt</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Diễn Giải</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">SL Tấm Thép đã in</th>\r\n                      <th data-b-a-s=\"medium\" data-f-bold=\"true\" data-a-v=\"middle\">Tổng SL tấm thép đã in & lon TP</th>\r\n                  </tr>\r\n                  {\r\n                    exportData?.printed_sheet?.map((data, i) => <tr key={i} style={{border: \".5px solid black\", borderCollapse: \"collapse\"}}>\r\n                        <td class=\"xl89\">{i + 1}</td>\r\n                        <td className=\"xl88\" width=\"500\" style={{width: \"500px\"}}>\r\n                          {data.ItemName} - {data.ItemCode} \r\n                        </td>\r\n                        <td>{data.CmpltQty}</td>\r\n                        <td></td>\r\n                    </tr>)\r\n                  }\r\n              </table>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Roles\\Update-role.js",["305","306","307","308","309","310"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport {Table, Space, Select, Form, Button, Input, Checkbox , Row, Col } from 'antd';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { PERMISSION_LIST, ROLE_UPDATE, ROLE_LIST } from '../../../scripts/api';\r\nimport { alertPop } from '../../../scripts/helper';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport default function UpdateRole() {\r\n    const formRef = React.createRef();\r\n    const history = useHistory();\r\n    let { roleId } = useParams();\r\n    const [permissions, setPermissions] = useState([]);\r\n    const [role, setRole] = useState();\r\n\r\n    const onFinish = async (values) => {\r\n        let {name, permissions} = values;\r\n\r\n        let data = {\r\n            id: roleId,\r\n            name: name,\r\n            permissions: JSON.stringify(permissions)\r\n        }\r\n\r\n        let res = await postData(ROLE_UPDATE, data);\r\n        if (res) {\r\n            alertPop('success', \"Role Updated Successfully!\");\r\n            history.push('/roles');\r\n        }\r\n    };\r\n\r\n    const getPermissions = async () => {\r\n        let res = await postData(PERMISSION_LIST, {});\r\n        if (res) setPermissions(res.data.data);\r\n    }\r\n\r\n    const getRoles = async () => {\r\n        let res = await postData(ROLE_LIST, {});\r\n\r\n        if (res) {\r\n            let masterData = res?.data?.data || [];\r\n            let role = masterData.find(e => e.id == roleId);\r\n            setRole(role);\r\n        }\r\n    }\r\n\r\n    const onFill = () => {\r\n        formRef.current.setFieldsValue({\r\n            name: role?.name,\r\n            permissions: role.permissions.map(e => e.id),\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPermissions();\r\n        getRoles();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (role) onFill()\r\n    }, [role])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Update Role</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\"}}\r\n                        ref={formRef}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                        >\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col  col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    rules={[{ required: true, message: 'Please input role name' }]}\r\n                                >\r\n                                    <Input size=\"large\" placeholder=\"Name\" />   \r\n                                </Form.Item>\r\n                            </div>\r\n\r\n                            <div className=\"col col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item\r\n                                    label=\"Permissions\"\r\n                                    name=\"permissions\"\r\n                                    rules={[{ required: false }]}\r\n                                >\r\n                                    <Checkbox.Group style={{ width: '100%', height: \"350px\", \"overflowY\": \"scroll\" }}>\r\n                                        <Row>\r\n                                            {\r\n                                                permissions.length && permissions.map(per => <Col span={24}>\r\n                                                    <Checkbox value={per.id} key={per.id}>{per.name}</Checkbox>\r\n                                                </Col>)\r\n                                            }\r\n                                        </Row>\r\n                                    </Checkbox.Group>  \r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col  col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block float-right\" size=\"large\" \r\n                                        type=\"primary\" htmlType=\"submit\">\r\n                                        Update Role\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\users\\CreateUser.js",["311","312","313","314","315","316","317","318","319","320"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Form, Input, Button, Upload, Select } from \"antd\";\r\nimport { alertPop, getBase64 } from '../../../scripts/helper';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { ROLE_LIST, USER_CREATE } from '../../../scripts/api';\r\nimport demo from \"../../../assets/images/avatar-1.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function CreateUser() {\r\n    const history = useHistory();\r\n    const [file, setfile] = useState();\r\n    const [imageBase64, setImageBase64] = useState();\r\n    const [roles, setRoles] = useState();\r\n\r\n    const onFinish = async (values) => {\r\n        console.log(\"value\", values);\r\n        let data = new FormData();\r\n        \r\n        if (file) data.append('image', file); \r\n        data.append('name', values.name);\r\n        data.append('email', values.email); \r\n        data.append('phone', values.phone); \r\n        data.append('company_name', values.company_name); \r\n        data.append('role', values.role); \r\n        data.append('password', values.password); \r\n        data.append('password_confirmation', values.password_confirmation);\r\n\r\n        let res = await postData(USER_CREATE, data);\r\n\r\n        if (res) {\r\n            alertPop('success', \"User Added Successfully!\")\r\n            history.push('/users');\r\n        }\r\n    };\r\n\r\n    const profilePreview = async ({file}) => {\r\n        setfile(file.originFileObj);\r\n        let preview = await getBase64(file.originFileObj);\r\n        setImageBase64(preview);\r\n    }\r\n\r\n    const getRoles = async () => {\r\n        let res = await postData(ROLE_LIST, {});\r\n        \r\n        if (res) {\r\n            let masterData = res.data.data.filter(val => (val.name !== 'Merchant' && val.name !== \"Premium Merchant\"));\r\n            setRoles(masterData);\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        getRoles()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Add User</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[{ required: true, message: 'Please Input Your Name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Name\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: 'Please input email!' },\r\n                                            {\r\n                                                pattern: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n                                                message: \"Please enter a valid email address\",\r\n                                            }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Email\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        rules={[{ required: true, message: 'Please input phone!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Phone\" />\r\n                                    </Form.Item>\r\n                                    \r\n                                    <Form.Item\r\n                                        label=\"Company Name\"\r\n                                        name=\"company_name\"\r\n                                        rules={[{ required: false, message: 'Please input company name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Company Name\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                            label=\"Role\"\r\n                                            name=\"role\"\r\n                                            rules={[{ required: true, message: 'Please input company name!' }]}\r\n                                        >\r\n                                            <Select\r\n                                                size=\"large\"\r\n                                                showSearch\r\n                                                placeholder=\"Select a role\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {roles && roles.map(per => <Option key={per.id} value={per.name}>{per.name}</Option>)}\r\n                                            </Select>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: 'Please input password' }]}\r\n                                    >\r\n                                        <Input.Password size=\"large\" placeholder=\"Enter password\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Confirm Password\"\r\n                                        name=\"password_confirmation\"\r\n                                        rules={[{ required: true, message: 'Please input confirm password' }]}\r\n                                    >\r\n                                        <Input.Password size=\"large\" placeholder=\"Enter confirm password\" />\r\n                                    </Form.Item>\r\n                                    <hr/>\r\n\r\n                                    <div className=\"rui-profile mt-10\">\r\n                                        <div className=\"rui-profile-img m-auto\">\r\n                                            <img src={ imageBase64 ? imageBase64 : demo} alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-center mt-5\">\r\n                                        <Upload accept=\"image/*\" onChange={profilePreview}>\r\n                                            <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n                                        </Upload>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                        Add User\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"col-sm\"></div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\users\\UpdateUser.js",["321","322","323","324","325","326","327","328","329","330","331","332","333","334"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Form, Input, Button, Upload, Select } from \"antd\";\r\nimport { alertPop, getBase64 } from '../../../scripts/helper';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { ROLE_LIST, USER_CREATE, USER_LIST, USER_UPDATE } from '../../../scripts/api';\r\nimport demo from \"../../../assets/images/avatar-1.png\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function UpdateUser() {\r\n    const history = useHistory();\r\n    let { userId } = useParams();\r\n    const [form] = Form.useForm();\r\n    const [file, setfile] = useState();\r\n    const [imageBase64, setImageBase64] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const [ userInfo, setUserInfo ] = useState();\r\n\r\n\r\n    const profilePreview = async ({file}) => {\r\n        setfile(file.originFileObj);\r\n        let preview = await getBase64(file.originFileObj);\r\n        setImageBase64(preview);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        console.log(\"value\", values);\r\n        let data = new FormData();\r\n        \r\n        if (file) data.append('image', file); \r\n        data.append('name', values.name);\r\n        data.append('email', values.email); \r\n        data.append('phone', values.phone); \r\n        data.append('company_name', values.company_name); \r\n        data.append('role', values.role);\r\n\r\n        data.append('id', userId);\r\n\r\n        let res = await postData(USER_UPDATE, data);\r\n\r\n        if (res) {\r\n            alertPop('success', \"User Updated Successfully!\");\r\n            history.push('/users');\r\n        }\r\n    };\r\n\r\n    const getRoles = async () => {\r\n        let res = await postData(ROLE_LIST, {});\r\n        \r\n        if (res) {\r\n            let masterData = res.data.data.filter(val => (val.name !== 'Merchant' && val.name !== \"Premium Merchant\"));\r\n            setRoles(masterData);\r\n        }\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        let res = await postData(USER_LIST, {});\r\n\r\n        if (res) {\r\n            let masterData = res.data.data || [];\r\n            let user = masterData.find(use => use.id == userId);\r\n            setUserInfo(user);\r\n            form.setFieldsValue({\r\n                company_name: user.company_name,\r\n                email: user.email,\r\n                name: user.name,\r\n                phone: user.phone,\r\n                email: user.email,\r\n                role: user.roles[0].name,\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRoles();\r\n        getUsers()\r\n    }, [])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Update User</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                        form={form}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[{ required: true, message: 'Please Input Your Name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Name\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: 'Please input email!' },\r\n                                                {\r\n                                                    pattern: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n                                                    message: \"Please enter a valid email address\",\r\n                                            }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Email\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        rules={[{ required: true, message: 'Please input phone!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Phone\" />\r\n                                    </Form.Item>\r\n                                    \r\n                                    <Form.Item\r\n                                        label=\"Company Name\"\r\n                                        name=\"company_name\"\r\n                                        rules={[{ required: false, message: 'Please input company name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Company Name\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                            label=\"Role\"\r\n                                            name=\"role\"\r\n                                            rules={[{ required: true, message: 'Please input company name!' }]}\r\n                                        >\r\n                                            <Select\r\n                                                size=\"large\"\r\n                                                showSearch\r\n                                                placeholder=\"Select a role\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {roles && roles.map(per => <Option key={per.id} value={per.name}>{per.name}</Option>)}\r\n                                            </Select>\r\n                                    </Form.Item>\r\n                                    <hr/>\r\n\r\n                                    <div className=\"rui-profile mt-10\">\r\n                                        <div className=\"rui-profile-img m-auto\">\r\n                                            <img src={ imageBase64 ? imageBase64 : userInfo?.thumb_image_url ? userInfo?.thumb_image_url : demo} alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-center mt-5\">\r\n                                        <Upload accept=\"image/*\" onChange={profilePreview}>\r\n                                            <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n                                        </Upload>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                        Update\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"col-sm\"></div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Merchents\\UpdateMarchent.js",["335","336","337","338","339","340","341","342"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Form, Input, Button, Upload, Select } from \"antd\";\r\nimport { alertPop, getBase64 } from '../../../scripts/helper';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { MERCHENT_LIST, ROLE_LIST, USER_CREATE, USER_LIST, USER_UPDATE } from '../../../scripts/api';\r\nimport demo from \"../../../assets/images/avatar-1.png\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function UpdateMarchent() {\r\n    const history = useHistory();\r\n    let { marchentId } = useParams();\r\n    const [form] = Form.useForm();\r\n    const [file, setfile] = useState();\r\n    const [imageBase64, setImageBase64] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const [ userInfo, setUserInfo ] = useState();\r\n\r\n\r\n    const profilePreview = async ({file}) => {\r\n        setfile(file.originFileObj);\r\n        let preview = await getBase64(file.originFileObj);\r\n        setImageBase64(preview);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        let data = new FormData();\r\n        \r\n        if (file) data.append('image', file); \r\n        data.append('name', values.name);\r\n        data.append('email', values.email); \r\n        data.append('phone', values.phone); \r\n        data.append('company_name', values.company_name); \r\n        data.append('role', values.role);\r\n        \r\n        data.append('sap_id', 1);\r\n\r\n        data.append('id', marchentId);\r\n\r\n        let res = await postData(USER_UPDATE, data);\r\n\r\n        if (res) {\r\n            alertPop('success', \"User Updated Successfully!\");\r\n            history.push('/users');\r\n        }\r\n    };\r\n\r\n    const getMerchentss = async () => {\r\n        let res = await postData(MERCHENT_LIST, {});\r\n\r\n        if (res) {\r\n            let masterData = res.data.data || [];\r\n            let user = masterData.find(use => use.id == marchentId);\r\n            if (user) {\r\n                setUserInfo(user);\r\n\r\n                form.setFieldsValue({\r\n                    company_name: user.company_name,\r\n                    email: user.email,\r\n                    name: user.name,\r\n                    phone: user.phone,\r\n                    email: user.email,\r\n                    role: user.roles[0].name,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMerchentss()\r\n    }, [])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Update Merchant</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                        form={form}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[{ required: true, message: 'Please Input Your Name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Name\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: 'Please input email!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Email\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        rules={[{ required: true, message: 'Please input phone!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Phone\" />\r\n                                    </Form.Item>\r\n                                    \r\n                                    <Form.Item\r\n                                        label=\"Company Name\"\r\n                                        name=\"company_name\"\r\n                                        rules={[{ required: true, message: 'Please input company name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Company Name\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                            label=\"Role\"\r\n                                            name=\"role\"\r\n                                            rules={[{ required: true, message: 'Please input company name!' }]}\r\n                                        >\r\n                                            <Select\r\n                                                size=\"large\"\r\n                                                showSearch\r\n                                                placeholder=\"Select a role\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                <Option key={1} value=\"Merchant\">Merchant</Option>\r\n                                                <Option key={2} value=\"Premium Merchant\">Premium Merchant</Option>\r\n                                            </Select>\r\n                                    </Form.Item>\r\n                                    <hr/>\r\n\r\n                                    <div className=\"rui-profile mt-10\">\r\n                                        <div className=\"rui-profile-img m-auto\">\r\n                                            <img src={ imageBase64 ? imageBase64 : userInfo?.thumb_image_url ? userInfo?.thumb_image_url : demo} alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-center mt-5\">\r\n                                        <Upload accept=\"image/*\" onChange={profilePreview}>\r\n                                            <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n                                        </Upload>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                        Update\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"col-sm\"></div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Merchents\\CreateMarchent.js",["343"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Form, Input, Button, Upload, Select } from \"antd\";\r\nimport { alertPop, getBase64 } from '../../../scripts/helper';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { MERCHENT_CREATE } from '../../../scripts/api';\r\nimport demo from \"../../../assets/images/avatar-1.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function CreateMarchent() {\r\n    const history = useHistory();\r\n    const [file, setfile] = useState();\r\n    const [imageBase64, setImageBase64] = useState();\r\n\r\n    const onFinish = async (values) => {\r\n        let data = new FormData();\r\n        \r\n        if (file) data.append('image', file); \r\n        data.append('name', values.name);\r\n        data.append('email', values.email); \r\n        data.append('phone', values.phone); \r\n        data.append('company_name', values.company_name); \r\n        data.append('role', values.role); \r\n        data.append('password', values.password); \r\n        data.append('password_confirmation', values.password_confirmation);\r\n\r\n        data.append('sap_id', 1);\r\n\r\n        let res = await postData(MERCHENT_CREATE, data);\r\n\r\n        if (res) {\r\n            alertPop('success', \"Merchant Added Successfully!\")\r\n            history.push('/merchents');\r\n        }\r\n    };\r\n\r\n    const profilePreview = async ({file}) => {\r\n        setfile(file.originFileObj);\r\n        let preview = await getBase64(file.originFileObj);\r\n        setImageBase64(preview);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Add Merchant</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[{ required: true, message: 'Please Input Your Name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Name\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: 'Please input email!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Email\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        rules={[{ required: true, message: 'Please input phone!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Phone\" />\r\n                                    </Form.Item>\r\n                                    \r\n                                    <Form.Item\r\n                                        label=\"Company Name\"\r\n                                        name=\"company_name\"\r\n                                        rules={[{ required: true, message: 'Please input company name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Company Name\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                            label=\"Role\"\r\n                                            name=\"role\"\r\n                                            rules={[{ required: true, message: 'Please input company name!' }]}\r\n                                        >\r\n                                            <Select\r\n                                                size=\"large\"\r\n                                                showSearch\r\n                                                placeholder=\"Select a role\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >   \r\n                                                <Option key={1} value=\"Merchant\">Merchant</Option>\r\n                                                <Option key={2} value=\"Premium Merchant\">Premium Merchant</Option>\r\n                                            </Select>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: 'Please input password' }]}\r\n                                    >\r\n                                        <Input.Password size=\"large\" placeholder=\"Enter password\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Confirm Password\"\r\n                                        name=\"password_confirmation\"\r\n                                        rules={[{ required: true, message: 'Please input confirm password' }]}\r\n                                    >\r\n                                        <Input.Password size=\"large\" placeholder=\"Enter confirm password\" />\r\n                                    </Form.Item>\r\n                                    <hr/>\r\n\r\n                                    <div className=\"rui-profile mt-10\">\r\n                                        <div className=\"rui-profile-img m-auto\">\r\n                                            <img src={ imageBase64 ? imageBase64 : demo} alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-center mt-5\">\r\n                                        <Upload accept=\"image/*\" onChange={profilePreview}>\r\n                                            <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n                                        </Upload>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                        Add Merchant\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"col-sm\"></div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\Auth\\Forget-Password\\passwordSet.js",["344","345"],"import React, { Fragment, useState } from 'react'\r\nimport { Form, Input, Button } from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function passwordSet() {\r\n    const onFinish = async (values) => {\r\n        console.log('Success:', values);\r\n        // // setResetPassword(0);\r\n        // let res = await postData(FORGET_PASSWORD_EMAIL, values);\r\n\r\n        // if (res) {\r\n        //     setIsLoading(true);\r\n        // }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"rui-main\">\r\n            <div className=\"rui-sign align-items-center justify-content-center\">\r\n            <div className=\"bg-image\">\r\n                    <div className=\"bg-grey-1\" />\r\n                </div>\r\n                <div className=\"form rui-sign-form rui-sign-form-cloud\">\r\n                    <div className=\"row vertical-gap sm-gap justify-content-center\">\r\n                        <Fragment>\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"display-4 mb-10 text-center\">Reset Password</h1>\r\n                            </div>\r\n\r\n                            <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                                onFinish={onFinish}\r\n                                >\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                >\r\n                                    <Input.Password size=\"large\" placeholder=\"password\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                >\r\n                                    <Input.Password size=\"large\" placeholder=\"Confirm Password\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                        Save\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Fragment>\r\n\r\n                <div className=\"col-12\">\r\n                            {/* <div className=\"rui-sign-or\">or</div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"mt-20 text-grey-5\">\r\n                    Already have an account? <Link to=\"/auth/login\" className=\"text-2\">Sign In</Link>\r\n                    <br/>\r\n                    <h5 className=\"text-center mt-3 mb-3\">Or</h5>\r\n                    Don&apos;t you have an account? <Link to=\"/auth/signup\" className=\"text-2\">Sign Up</Link>\r\n                </div>*/}\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\Auth\\VerifyEmail\\index.js",["346"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport tick from \"../../../assets/images/progress-and-tick-icon-animation.gif\";\r\n\r\nexport default function VerifyEmail() {\r\n    return (\r\n        <div className=\"rui-main\">\r\n            <div className=\"rui-sign align-items-center justify-content-center\">\r\n            <div className=\"bg-image\">\r\n                    <div className=\"bg-grey-1\" />\r\n                </div>\r\n                <div className=\"form rui-sign-form rui-sign-form-cloud\">\r\n                    <div className=\"row vertical-gap sm-gap justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            <h1 className=\"display-4 mb-10 text-center\">Email Verified</h1>\r\n                            <hr/>\r\n                            <img src={tick} style={{width: \"100%\"}} />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"rui-sign-or\">or</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-20 text-grey-5\">\r\n                    Move to <Link to=\"/auth/login\" className=\"text-2\">Sign In</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\i18n.js",[],"E:\\react\\canpac\\src\\pages\\private\\404.js",[],{"ruleId":"347","severity":1,"message":"348","line":2,"column":9,"nodeType":"349","messageId":"350","endLine":2,"endColumn":13},{"ruleId":"347","severity":1,"message":"351","line":6,"column":10,"nodeType":"349","messageId":"350","endLine":6,"endColumn":15},{"ruleId":"347","severity":1,"message":"352","line":15,"column":15,"nodeType":"349","messageId":"350","endLine":15,"endColumn":19},{"ruleId":"347","severity":1,"message":"353","line":16,"column":18,"nodeType":"349","messageId":"350","endLine":16,"endColumn":29},{"ruleId":"347","severity":1,"message":"354","line":16,"column":31,"nodeType":"349","messageId":"350","endLine":16,"endColumn":42},{"ruleId":"355","severity":1,"message":"356","line":48,"column":63,"nodeType":"357","messageId":"358","endLine":48,"endColumn":64,"suggestions":"359"},{"ruleId":"355","severity":1,"message":"360","line":48,"column":71,"nodeType":"357","messageId":"358","endLine":48,"endColumn":72,"suggestions":"361"},{"ruleId":"355","severity":1,"message":"356","line":48,"column":87,"nodeType":"357","messageId":"358","endLine":48,"endColumn":88,"suggestions":"362"},{"ruleId":"355","severity":1,"message":"360","line":48,"column":95,"nodeType":"357","messageId":"358","endLine":48,"endColumn":96,"suggestions":"363"},{"ruleId":"355","severity":1,"message":"360","line":48,"column":104,"nodeType":"357","messageId":"358","endLine":48,"endColumn":105,"suggestions":"364"},{"ruleId":"355","severity":1,"message":"360","line":48,"column":108,"nodeType":"357","messageId":"358","endLine":48,"endColumn":109,"suggestions":"365"},{"ruleId":"355","severity":1,"message":"356","line":48,"column":124,"nodeType":"357","messageId":"358","endLine":48,"endColumn":125,"suggestions":"366"},{"ruleId":"355","severity":1,"message":"360","line":48,"column":132,"nodeType":"357","messageId":"358","endLine":48,"endColumn":133,"suggestions":"367"},{"ruleId":"355","severity":1,"message":"356","line":48,"column":149,"nodeType":"357","messageId":"358","endLine":48,"endColumn":150,"suggestions":"368"},{"ruleId":"355","severity":1,"message":"360","line":48,"column":157,"nodeType":"357","messageId":"358","endLine":48,"endColumn":158,"suggestions":"369"},{"ruleId":"347","severity":1,"message":"370","line":28,"column":12,"nodeType":"349","messageId":"350","endLine":28,"endColumn":13},{"ruleId":"347","severity":1,"message":"353","line":30,"column":18,"nodeType":"349","messageId":"350","endLine":30,"endColumn":29},{"ruleId":"371","severity":1,"message":"372","line":71,"column":8,"nodeType":"373","endLine":71,"endColumn":27,"suggestions":"374"},{"ruleId":"375","severity":1,"message":"376","line":76,"column":13,"nodeType":"377","endLine":76,"endColumn":85},{"ruleId":"375","severity":1,"message":"376","line":86,"column":13,"nodeType":"377","endLine":86,"endColumn":67},{"ruleId":"375","severity":1,"message":"376","line":96,"column":13,"nodeType":"377","endLine":96,"endColumn":79},{"ruleId":"375","severity":1,"message":"376","line":101,"column":13,"nodeType":"377","endLine":101,"endColumn":53},{"ruleId":"371","severity":1,"message":"378","line":114,"column":8,"nodeType":"373","endLine":114,"endColumn":10,"suggestions":"379"},{"ruleId":"375","severity":1,"message":"380","line":190,"column":50,"nodeType":"377","endLine":192,"endColumn":53},{"ruleId":"381","severity":1,"message":"382","line":192,"column":38,"nodeType":"357","messageId":"383","endLine":192,"endColumn":52},{"ruleId":"375","severity":1,"message":"376","line":200,"column":29,"nodeType":"377","endLine":200,"endColumn":82},{"ruleId":"375","severity":1,"message":"376","line":220,"column":21,"nodeType":"377","endLine":220,"endColumn":69},{"ruleId":"355","severity":1,"message":"356","line":47,"column":63,"nodeType":"357","messageId":"358","endLine":47,"endColumn":64,"suggestions":"384"},{"ruleId":"355","severity":1,"message":"360","line":47,"column":71,"nodeType":"357","messageId":"358","endLine":47,"endColumn":72,"suggestions":"385"},{"ruleId":"355","severity":1,"message":"356","line":47,"column":87,"nodeType":"357","messageId":"358","endLine":47,"endColumn":88,"suggestions":"386"},{"ruleId":"355","severity":1,"message":"360","line":47,"column":95,"nodeType":"357","messageId":"358","endLine":47,"endColumn":96,"suggestions":"387"},{"ruleId":"355","severity":1,"message":"360","line":47,"column":104,"nodeType":"357","messageId":"358","endLine":47,"endColumn":105,"suggestions":"388"},{"ruleId":"355","severity":1,"message":"360","line":47,"column":108,"nodeType":"357","messageId":"358","endLine":47,"endColumn":109,"suggestions":"389"},{"ruleId":"355","severity":1,"message":"356","line":47,"column":124,"nodeType":"357","messageId":"358","endLine":47,"endColumn":125,"suggestions":"390"},{"ruleId":"355","severity":1,"message":"360","line":47,"column":132,"nodeType":"357","messageId":"358","endLine":47,"endColumn":133,"suggestions":"391"},{"ruleId":"355","severity":1,"message":"356","line":47,"column":149,"nodeType":"357","messageId":"358","endLine":47,"endColumn":150,"suggestions":"392"},{"ruleId":"355","severity":1,"message":"360","line":47,"column":157,"nodeType":"357","messageId":"358","endLine":47,"endColumn":158,"suggestions":"393"},{"ruleId":"347","severity":1,"message":"394","line":8,"column":29,"nodeType":"349","messageId":"350","endLine":8,"endColumn":45},{"ruleId":"347","severity":1,"message":"395","line":9,"column":12,"nodeType":"349","messageId":"350","endLine":9,"endColumn":21},{"ruleId":"355","severity":1,"message":"356","line":41,"column":71,"nodeType":"357","messageId":"358","endLine":41,"endColumn":72,"suggestions":"396"},{"ruleId":"355","severity":1,"message":"360","line":41,"column":79,"nodeType":"357","messageId":"358","endLine":41,"endColumn":80,"suggestions":"397"},{"ruleId":"355","severity":1,"message":"356","line":41,"column":95,"nodeType":"357","messageId":"358","endLine":41,"endColumn":96,"suggestions":"398"},{"ruleId":"355","severity":1,"message":"360","line":41,"column":103,"nodeType":"357","messageId":"358","endLine":41,"endColumn":104,"suggestions":"399"},{"ruleId":"355","severity":1,"message":"360","line":41,"column":112,"nodeType":"357","messageId":"358","endLine":41,"endColumn":113,"suggestions":"400"},{"ruleId":"355","severity":1,"message":"360","line":41,"column":116,"nodeType":"357","messageId":"358","endLine":41,"endColumn":117,"suggestions":"401"},{"ruleId":"355","severity":1,"message":"356","line":41,"column":132,"nodeType":"357","messageId":"358","endLine":41,"endColumn":133,"suggestions":"402"},{"ruleId":"355","severity":1,"message":"360","line":41,"column":140,"nodeType":"357","messageId":"358","endLine":41,"endColumn":141,"suggestions":"403"},{"ruleId":"355","severity":1,"message":"356","line":41,"column":157,"nodeType":"357","messageId":"358","endLine":41,"endColumn":158,"suggestions":"404"},{"ruleId":"355","severity":1,"message":"360","line":41,"column":165,"nodeType":"357","messageId":"358","endLine":41,"endColumn":166,"suggestions":"405"},{"ruleId":"347","severity":1,"message":"348","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":14},{"ruleId":"347","severity":1,"message":"353","line":13,"column":18,"nodeType":"349","messageId":"350","endLine":13,"endColumn":29},{"ruleId":"371","severity":1,"message":"378","line":68,"column":8,"nodeType":"373","endLine":68,"endColumn":10,"suggestions":"406"},{"ruleId":"371","severity":1,"message":"407","line":72,"column":8,"nodeType":"373","endLine":72,"endColumn":14,"suggestions":"408"},{"ruleId":"347","severity":1,"message":"348","line":2,"column":9,"nodeType":"349","messageId":"350","endLine":2,"endColumn":13},{"ruleId":"347","severity":1,"message":"409","line":3,"column":16,"nodeType":"349","messageId":"350","endLine":3,"endColumn":21},{"ruleId":"347","severity":1,"message":"410","line":3,"column":31,"nodeType":"349","messageId":"350","endLine":3,"endColumn":35},{"ruleId":"371","severity":1,"message":"411","line":95,"column":8,"nodeType":"373","endLine":95,"endColumn":10,"suggestions":"412"},{"ruleId":"347","severity":1,"message":"410","line":3,"column":31,"nodeType":"349","messageId":"350","endLine":3,"endColumn":35},{"ruleId":"371","severity":1,"message":"413","line":209,"column":8,"nodeType":"373","endLine":209,"endColumn":16,"suggestions":"414"},{"ruleId":"347","severity":1,"message":"348","line":2,"column":9,"nodeType":"349","messageId":"350","endLine":2,"endColumn":13},{"ruleId":"347","severity":1,"message":"415","line":39,"column":12,"nodeType":"349","messageId":"350","endLine":39,"endColumn":23},{"ruleId":"347","severity":1,"message":"416","line":39,"column":25,"nodeType":"349","messageId":"350","endLine":39,"endColumn":39},{"ruleId":"347","severity":1,"message":"417","line":173,"column":11,"nodeType":"349","messageId":"350","endLine":173,"endColumn":22},{"ruleId":"347","severity":1,"message":"418","line":180,"column":11,"nodeType":"349","messageId":"350","endLine":180,"endColumn":28},{"ruleId":"371","severity":1,"message":"419","line":235,"column":8,"nodeType":"373","endLine":235,"endColumn":16,"suggestions":"420"},{"ruleId":"347","severity":1,"message":"421","line":3,"column":10,"nodeType":"349","messageId":"350","endLine":3,"endColumn":29},{"ruleId":"371","severity":1,"message":"422","line":79,"column":8,"nodeType":"373","endLine":79,"endColumn":10,"suggestions":"423"},{"ruleId":"424","severity":1,"message":"425","line":173,"column":55,"nodeType":"426","messageId":"427","endLine":173,"endColumn":57},{"ruleId":"347","severity":1,"message":"348","line":2,"column":9,"nodeType":"349","messageId":"350","endLine":2,"endColumn":13},{"ruleId":"371","severity":1,"message":"428","line":69,"column":8,"nodeType":"373","endLine":69,"endColumn":10,"suggestions":"429"},{"ruleId":"371","severity":1,"message":"411","line":213,"column":8,"nodeType":"373","endLine":213,"endColumn":16,"suggestions":"430"},{"ruleId":"347","severity":1,"message":"410","line":3,"column":31,"nodeType":"349","messageId":"350","endLine":3,"endColumn":35},{"ruleId":"347","severity":1,"message":"431","line":3,"column":52,"nodeType":"349","messageId":"350","endLine":3,"endColumn":62},{"ruleId":"347","severity":1,"message":"432","line":3,"column":72,"nodeType":"349","messageId":"350","endLine":3,"endColumn":77},{"ruleId":"347","severity":1,"message":"433","line":3,"column":86,"nodeType":"349","messageId":"350","endLine":3,"endColumn":89},{"ruleId":"347","severity":1,"message":"434","line":3,"column":91,"nodeType":"349","messageId":"350","endLine":3,"endColumn":97},{"ruleId":"424","severity":1,"message":"425","line":103,"column":34,"nodeType":"426","messageId":"427","endLine":103,"endColumn":36},{"ruleId":"371","severity":1,"message":"435","line":158,"column":8,"nodeType":"373","endLine":158,"endColumn":16,"suggestions":"436"},{"ruleId":"347","severity":1,"message":"410","line":2,"column":31,"nodeType":"349","messageId":"350","endLine":2,"endColumn":35},{"ruleId":"347","severity":1,"message":"431","line":2,"column":52,"nodeType":"349","messageId":"350","endLine":2,"endColumn":62},{"ruleId":"424","severity":1,"message":"425","line":93,"column":34,"nodeType":"426","messageId":"427","endLine":93,"endColumn":36},{"ruleId":"371","severity":1,"message":"437","line":149,"column":8,"nodeType":"373","endLine":149,"endColumn":16,"suggestions":"438"},{"ruleId":"347","severity":1,"message":"348","line":2,"column":9,"nodeType":"349","messageId":"350","endLine":2,"endColumn":13},{"ruleId":"347","severity":1,"message":"439","line":12,"column":9,"nodeType":"349","messageId":"350","endLine":12,"endColumn":20},{"ruleId":"371","severity":1,"message":"440","line":137,"column":8,"nodeType":"373","endLine":137,"endColumn":16,"suggestions":"441"},{"ruleId":"347","severity":1,"message":"439","line":12,"column":9,"nodeType":"349","messageId":"350","endLine":12,"endColumn":20},{"ruleId":"375","severity":1,"message":"376","line":39,"column":19,"nodeType":"377","endLine":39,"endColumn":22},{"ruleId":"371","severity":1,"message":"442","line":105,"column":8,"nodeType":"373","endLine":105,"endColumn":16,"suggestions":"443"},{"ruleId":"347","severity":1,"message":"444","line":2,"column":9,"nodeType":"349","messageId":"350","endLine":2,"endColumn":14},{"ruleId":"347","severity":1,"message":"409","line":2,"column":16,"nodeType":"349","messageId":"350","endLine":2,"endColumn":21},{"ruleId":"347","severity":1,"message":"445","line":2,"column":23,"nodeType":"349","messageId":"350","endLine":2,"endColumn":29},{"ruleId":"446","severity":1,"message":"447","line":75,"column":48,"nodeType":"448","messageId":"449","endLine":75,"endColumn":50},{"ruleId":"446","severity":1,"message":"447","line":193,"column":48,"nodeType":"448","messageId":"449","endLine":193,"endColumn":50},{"ruleId":"347","severity":1,"message":"450","line":2,"column":24,"nodeType":"349","messageId":"350","endLine":2,"endColumn":33},{"ruleId":"347","severity":1,"message":"348","line":2,"column":9,"nodeType":"349","messageId":"350","endLine":2,"endColumn":13},{"ruleId":"347","severity":1,"message":"409","line":3,"column":16,"nodeType":"349","messageId":"350","endLine":3,"endColumn":21},{"ruleId":"347","severity":1,"message":"410","line":3,"column":31,"nodeType":"349","messageId":"350","endLine":3,"endColumn":35},{"ruleId":"347","severity":1,"message":"451","line":3,"column":45,"nodeType":"349","messageId":"350","endLine":3,"endColumn":50},{"ruleId":"347","severity":1,"message":"452","line":5,"column":45,"nodeType":"349","messageId":"350","endLine":5,"endColumn":57},{"ruleId":"347","severity":1,"message":"453","line":7,"column":10,"nodeType":"349","messageId":"350","endLine":7,"endColumn":16},{"ruleId":"347","severity":1,"message":"454","line":11,"column":8,"nodeType":"349","messageId":"350","endLine":11,"endColumn":13},{"ruleId":"347","severity":1,"message":"455","line":12,"column":8,"nodeType":"349","messageId":"350","endLine":12,"endColumn":15},{"ruleId":"347","severity":1,"message":"456","line":13,"column":8,"nodeType":"349","messageId":"350","endLine":13,"endColumn":16},{"ruleId":"347","severity":1,"message":"457","line":14,"column":8,"nodeType":"349","messageId":"350","endLine":14,"endColumn":21},{"ruleId":"347","severity":1,"message":"439","line":18,"column":9,"nodeType":"349","messageId":"350","endLine":18,"endColumn":20},{"ruleId":"347","severity":1,"message":"458","line":25,"column":11,"nodeType":"349","messageId":"350","endLine":25,"endColumn":16},{"ruleId":"371","severity":1,"message":"459","line":205,"column":8,"nodeType":"373","endLine":205,"endColumn":19,"suggestions":"460"},{"ruleId":"347","severity":1,"message":"444","line":2,"column":9,"nodeType":"349","messageId":"350","endLine":2,"endColumn":14},{"ruleId":"347","severity":1,"message":"409","line":2,"column":16,"nodeType":"349","messageId":"350","endLine":2,"endColumn":21},{"ruleId":"347","severity":1,"message":"445","line":2,"column":23,"nodeType":"349","messageId":"350","endLine":2,"endColumn":29},{"ruleId":"424","severity":1,"message":"425","line":41,"column":50,"nodeType":"426","messageId":"427","endLine":41,"endColumn":52},{"ruleId":"371","severity":1,"message":"442","line":56,"column":8,"nodeType":"373","endLine":56,"endColumn":10,"suggestions":"461"},{"ruleId":"371","severity":1,"message":"407","line":60,"column":8,"nodeType":"373","endLine":60,"endColumn":14,"suggestions":"462"},{"ruleId":"355","severity":1,"message":"356","line":87,"column":71,"nodeType":"357","messageId":"358","endLine":87,"endColumn":72,"suggestions":"463"},{"ruleId":"355","severity":1,"message":"360","line":87,"column":79,"nodeType":"357","messageId":"358","endLine":87,"endColumn":80,"suggestions":"464"},{"ruleId":"355","severity":1,"message":"356","line":87,"column":95,"nodeType":"357","messageId":"358","endLine":87,"endColumn":96,"suggestions":"465"},{"ruleId":"355","severity":1,"message":"360","line":87,"column":103,"nodeType":"357","messageId":"358","endLine":87,"endColumn":104,"suggestions":"466"},{"ruleId":"355","severity":1,"message":"360","line":87,"column":112,"nodeType":"357","messageId":"358","endLine":87,"endColumn":113,"suggestions":"467"},{"ruleId":"355","severity":1,"message":"360","line":87,"column":116,"nodeType":"357","messageId":"358","endLine":87,"endColumn":117,"suggestions":"468"},{"ruleId":"355","severity":1,"message":"356","line":87,"column":132,"nodeType":"357","messageId":"358","endLine":87,"endColumn":133,"suggestions":"469"},{"ruleId":"355","severity":1,"message":"360","line":87,"column":140,"nodeType":"357","messageId":"358","endLine":87,"endColumn":141,"suggestions":"470"},{"ruleId":"355","severity":1,"message":"356","line":87,"column":157,"nodeType":"357","messageId":"358","endLine":87,"endColumn":158,"suggestions":"471"},{"ruleId":"355","severity":1,"message":"360","line":87,"column":165,"nodeType":"357","messageId":"358","endLine":87,"endColumn":166,"suggestions":"472"},{"ruleId":"347","severity":1,"message":"473","line":6,"column":21,"nodeType":"349","messageId":"350","endLine":6,"endColumn":32},{"ruleId":"424","severity":1,"message":"425","line":63,"column":54,"nodeType":"426","messageId":"427","endLine":63,"endColumn":56},{"ruleId":"474","severity":1,"message":"475","line":70,"column":17,"nodeType":"476","messageId":"427","endLine":70,"endColumn":22},{"ruleId":"371","severity":1,"message":"477","line":79,"column":8,"nodeType":"373","endLine":79,"endColumn":10,"suggestions":"478"},{"ruleId":"355","severity":1,"message":"356","line":111,"column":75,"nodeType":"357","messageId":"358","endLine":111,"endColumn":76,"suggestions":"479"},{"ruleId":"355","severity":1,"message":"360","line":111,"column":83,"nodeType":"357","messageId":"358","endLine":111,"endColumn":84,"suggestions":"480"},{"ruleId":"355","severity":1,"message":"356","line":111,"column":99,"nodeType":"357","messageId":"358","endLine":111,"endColumn":100,"suggestions":"481"},{"ruleId":"355","severity":1,"message":"360","line":111,"column":107,"nodeType":"357","messageId":"358","endLine":111,"endColumn":108,"suggestions":"482"},{"ruleId":"355","severity":1,"message":"360","line":111,"column":116,"nodeType":"357","messageId":"358","endLine":111,"endColumn":117,"suggestions":"483"},{"ruleId":"355","severity":1,"message":"360","line":111,"column":120,"nodeType":"357","messageId":"358","endLine":111,"endColumn":121,"suggestions":"484"},{"ruleId":"355","severity":1,"message":"356","line":111,"column":136,"nodeType":"357","messageId":"358","endLine":111,"endColumn":137,"suggestions":"485"},{"ruleId":"355","severity":1,"message":"360","line":111,"column":144,"nodeType":"357","messageId":"358","endLine":111,"endColumn":145,"suggestions":"486"},{"ruleId":"355","severity":1,"message":"356","line":111,"column":161,"nodeType":"357","messageId":"358","endLine":111,"endColumn":162,"suggestions":"487"},{"ruleId":"355","severity":1,"message":"360","line":111,"column":169,"nodeType":"357","messageId":"358","endLine":111,"endColumn":170,"suggestions":"488"},{"ruleId":"347","severity":1,"message":"450","line":6,"column":25,"nodeType":"349","messageId":"350","endLine":6,"endColumn":34},{"ruleId":"347","severity":1,"message":"473","line":6,"column":36,"nodeType":"349","messageId":"350","endLine":6,"endColumn":47},{"ruleId":"347","severity":1,"message":"489","line":6,"column":49,"nodeType":"349","messageId":"350","endLine":6,"endColumn":58},{"ruleId":"347","severity":1,"message":"490","line":18,"column":12,"nodeType":"349","messageId":"350","endLine":18,"endColumn":17},{"ruleId":"347","severity":1,"message":"491","line":18,"column":19,"nodeType":"349","messageId":"350","endLine":18,"endColumn":27},{"ruleId":"424","severity":1,"message":"425","line":55,"column":54,"nodeType":"426","messageId":"427","endLine":55,"endColumn":56},{"ruleId":"474","severity":1,"message":"475","line":64,"column":21,"nodeType":"476","messageId":"427","endLine":64,"endColumn":26},{"ruleId":"371","severity":1,"message":"492","line":73,"column":8,"nodeType":"373","endLine":73,"endColumn":10,"suggestions":"493"},{"ruleId":"347","severity":1,"message":"494","line":1,"column":27,"nodeType":"349","messageId":"350","endLine":1,"endColumn":36},{"ruleId":"347","severity":1,"message":"495","line":1,"column":27,"nodeType":"349","messageId":"350","endLine":1,"endColumn":35},{"ruleId":"347","severity":1,"message":"348","line":3,"column":9,"nodeType":"349","messageId":"350","endLine":3,"endColumn":13},{"ruleId":"496","severity":1,"message":"497","line":17,"column":29,"nodeType":"377","endLine":17,"endColumn":71},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Trans' is defined but never used.","'i18n' is assigned a value but never used.","'getUserInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["498","499"],"Unnecessary escape character: \\\".",["500","501"],["502","503"],["504","505"],["506","507"],["508","509"],["510","511"],["512","513"],["514","515"],["516","517"],"'t' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showNav'. Either include it or remove the dependency array.","ArrayExpression",["518"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setUserInfo'. Either include it or remove the dependency array.",["519"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","unexpectedScriptURL",["520","521"],["522","523"],["524","525"],["526","527"],["528","529"],["530","531"],["532","533"],["534","535"],["536","537"],["538","539"],"'setResetPassword' is assigned a value but never used.","'isLoading' is assigned a value but never used.",["540","541"],["542","543"],["544","545"],["546","547"],["548","549"],["550","551"],["552","553"],["554","555"],["556","557"],["558","559"],["560"],"React Hook useEffect has a missing dependency: 'onFill'. Either include it or remove the dependency array.",["561"],"'Space' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'getProductDetails'. Either include it or remove the dependency array.",["562"],"React Hook useEffect has a missing dependency: 'getProductOrder'. Either include it or remove the dependency array.",["563"],"'orderStatus' is assigned a value but never used.","'setOrderStatus' is assigned a value but never used.","'searchOrder' is assigned a value but never used.","'searchOrderStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrderDraft'. Either include it or remove the dependency array.",["564"],"'ClockCircleOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'getOrderDetails'. Either include it or remove the dependency array.",["565"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["566"],["567"],"'DatePicker' is defined but never used.","'Image' is defined but never used.","'Tag' is defined but never used.","'Switch' is defined but never used.","React Hook useEffect has a missing dependency: 'getUsersList'. Either include it or remove the dependency array.",["568"],"React Hook useEffect has a missing dependency: 'getMerchents'. Either include it or remove the dependency array.",["569"],"'RangePicker' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPermissions'. Either include it or remove the dependency array.",["570"],"React Hook useEffect has a missing dependency: 'getRoles'. Either include it or remove the dependency array.",["571"],"'Table' is defined but never used.","'Select' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ROLE_LIST' is defined but never used.","'Input' is defined but never used.","'draft_report' is defined but never used.","'saveAs' is defined but never used.","'jsPDF' is defined but never used.","'pdfMake' is defined but never used.","'pdfFonts' is defined but never used.","'htmlToPdfmake' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["572"],["573"],["574"],["575","576"],["577","578"],["579","580"],["581","582"],["583","584"],["585","586"],["587","588"],["589","590"],["591","592"],["593","594"],"'USER_CREATE' is defined but never used.","no-dupe-keys","Duplicate key 'email'.","ObjectExpression","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["595"],["596","597"],["598","599"],["600","601"],["602","603"],["604","605"],["606","607"],["608","609"],["610","611"],["612","613"],["614","615"],"'USER_LIST' is defined but never used.","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMerchentss'. Either include it or remove the dependency array.",["616"],"'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"messageId":"617","fix":"618","desc":"619"},{"messageId":"620","fix":"621","desc":"622"},{"messageId":"617","fix":"623","desc":"619"},{"messageId":"620","fix":"624","desc":"622"},{"messageId":"617","fix":"625","desc":"619"},{"messageId":"620","fix":"626","desc":"622"},{"messageId":"617","fix":"627","desc":"619"},{"messageId":"620","fix":"628","desc":"622"},{"messageId":"617","fix":"629","desc":"619"},{"messageId":"620","fix":"630","desc":"622"},{"messageId":"617","fix":"631","desc":"619"},{"messageId":"620","fix":"632","desc":"622"},{"messageId":"617","fix":"633","desc":"619"},{"messageId":"620","fix":"634","desc":"622"},{"messageId":"617","fix":"635","desc":"619"},{"messageId":"620","fix":"636","desc":"622"},{"messageId":"617","fix":"637","desc":"619"},{"messageId":"620","fix":"638","desc":"622"},{"messageId":"617","fix":"639","desc":"619"},{"messageId":"620","fix":"640","desc":"622"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"messageId":"617","fix":"645","desc":"619"},{"messageId":"620","fix":"646","desc":"622"},{"messageId":"617","fix":"647","desc":"619"},{"messageId":"620","fix":"648","desc":"622"},{"messageId":"617","fix":"649","desc":"619"},{"messageId":"620","fix":"650","desc":"622"},{"messageId":"617","fix":"651","desc":"619"},{"messageId":"620","fix":"652","desc":"622"},{"messageId":"617","fix":"653","desc":"619"},{"messageId":"620","fix":"654","desc":"622"},{"messageId":"617","fix":"655","desc":"619"},{"messageId":"620","fix":"656","desc":"622"},{"messageId":"617","fix":"657","desc":"619"},{"messageId":"620","fix":"658","desc":"622"},{"messageId":"617","fix":"659","desc":"619"},{"messageId":"620","fix":"660","desc":"622"},{"messageId":"617","fix":"661","desc":"619"},{"messageId":"620","fix":"662","desc":"622"},{"messageId":"617","fix":"663","desc":"619"},{"messageId":"620","fix":"664","desc":"622"},{"messageId":"617","fix":"665","desc":"619"},{"messageId":"620","fix":"666","desc":"622"},{"messageId":"617","fix":"667","desc":"619"},{"messageId":"620","fix":"668","desc":"622"},{"messageId":"617","fix":"669","desc":"619"},{"messageId":"620","fix":"670","desc":"622"},{"messageId":"617","fix":"671","desc":"619"},{"messageId":"620","fix":"672","desc":"622"},{"messageId":"617","fix":"673","desc":"619"},{"messageId":"620","fix":"674","desc":"622"},{"messageId":"617","fix":"675","desc":"619"},{"messageId":"620","fix":"676","desc":"622"},{"messageId":"617","fix":"677","desc":"619"},{"messageId":"620","fix":"678","desc":"622"},{"messageId":"617","fix":"679","desc":"619"},{"messageId":"620","fix":"680","desc":"622"},{"messageId":"617","fix":"681","desc":"619"},{"messageId":"620","fix":"682","desc":"622"},{"messageId":"617","fix":"683","desc":"619"},{"messageId":"620","fix":"684","desc":"622"},{"desc":"643","fix":"685"},{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"desc":"690","fix":"691"},{"desc":"692","fix":"693"},{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"698","fix":"699"},{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"710","fix":"711"},{"desc":"712","fix":"713"},{"messageId":"617","fix":"714","desc":"619"},{"messageId":"620","fix":"715","desc":"622"},{"messageId":"617","fix":"716","desc":"619"},{"messageId":"620","fix":"717","desc":"622"},{"messageId":"617","fix":"718","desc":"619"},{"messageId":"620","fix":"719","desc":"622"},{"messageId":"617","fix":"720","desc":"619"},{"messageId":"620","fix":"721","desc":"622"},{"messageId":"617","fix":"722","desc":"619"},{"messageId":"620","fix":"723","desc":"622"},{"messageId":"617","fix":"724","desc":"619"},{"messageId":"620","fix":"725","desc":"622"},{"messageId":"617","fix":"726","desc":"619"},{"messageId":"620","fix":"727","desc":"622"},{"messageId":"617","fix":"728","desc":"619"},{"messageId":"620","fix":"729","desc":"622"},{"messageId":"617","fix":"730","desc":"619"},{"messageId":"620","fix":"731","desc":"622"},{"messageId":"617","fix":"732","desc":"619"},{"messageId":"620","fix":"733","desc":"622"},{"desc":"734","fix":"735"},{"messageId":"617","fix":"736","desc":"619"},{"messageId":"620","fix":"737","desc":"622"},{"messageId":"617","fix":"738","desc":"619"},{"messageId":"620","fix":"739","desc":"622"},{"messageId":"617","fix":"740","desc":"619"},{"messageId":"620","fix":"741","desc":"622"},{"messageId":"617","fix":"742","desc":"619"},{"messageId":"620","fix":"743","desc":"622"},{"messageId":"617","fix":"744","desc":"619"},{"messageId":"620","fix":"745","desc":"622"},{"messageId":"617","fix":"746","desc":"619"},{"messageId":"620","fix":"747","desc":"622"},{"messageId":"617","fix":"748","desc":"619"},{"messageId":"620","fix":"749","desc":"622"},{"messageId":"617","fix":"750","desc":"619"},{"messageId":"620","fix":"751","desc":"622"},{"messageId":"617","fix":"752","desc":"619"},{"messageId":"620","fix":"753","desc":"622"},{"messageId":"617","fix":"754","desc":"619"},{"messageId":"620","fix":"755","desc":"622"},{"desc":"756","fix":"757"},"removeEscape",{"range":"758","text":"759"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"760","text":"761"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"762","text":"759"},{"range":"763","text":"761"},{"range":"764","text":"759"},{"range":"765","text":"761"},{"range":"766","text":"759"},{"range":"767","text":"761"},{"range":"768","text":"759"},{"range":"769","text":"761"},{"range":"770","text":"759"},{"range":"771","text":"761"},{"range":"772","text":"759"},{"range":"773","text":"761"},{"range":"774","text":"759"},{"range":"775","text":"761"},{"range":"776","text":"759"},{"range":"777","text":"761"},{"range":"778","text":"759"},{"range":"779","text":"761"},"Update the dependencies array to be: [location.pathname, showNav]",{"range":"780","text":"781"},"Update the dependencies array to be: [setUserInfo]",{"range":"782","text":"783"},{"range":"784","text":"759"},{"range":"785","text":"761"},{"range":"786","text":"759"},{"range":"787","text":"761"},{"range":"788","text":"759"},{"range":"789","text":"761"},{"range":"790","text":"759"},{"range":"791","text":"761"},{"range":"792","text":"759"},{"range":"793","text":"761"},{"range":"794","text":"759"},{"range":"795","text":"761"},{"range":"796","text":"759"},{"range":"797","text":"761"},{"range":"798","text":"759"},{"range":"799","text":"761"},{"range":"800","text":"759"},{"range":"801","text":"761"},{"range":"802","text":"759"},{"range":"803","text":"761"},{"range":"804","text":"759"},{"range":"805","text":"761"},{"range":"806","text":"759"},{"range":"807","text":"761"},{"range":"808","text":"759"},{"range":"809","text":"761"},{"range":"810","text":"759"},{"range":"811","text":"761"},{"range":"812","text":"759"},{"range":"813","text":"761"},{"range":"814","text":"759"},{"range":"815","text":"761"},{"range":"816","text":"759"},{"range":"817","text":"761"},{"range":"818","text":"759"},{"range":"819","text":"761"},{"range":"820","text":"759"},{"range":"821","text":"761"},{"range":"822","text":"759"},{"range":"823","text":"761"},{"range":"824","text":"783"},"Update the dependencies array to be: [onFill, user]",{"range":"825","text":"826"},"Update the dependencies array to be: [getProductDetails]",{"range":"827","text":"828"},"Update the dependencies array to be: [getProductOrder, search]",{"range":"829","text":"830"},"Update the dependencies array to be: [getOrderDraft, search]",{"range":"831","text":"832"},"Update the dependencies array to be: [getOrderDetails]",{"range":"833","text":"834"},"Update the dependencies array to be: [getProducts]",{"range":"835","text":"836"},"Update the dependencies array to be: [getProductDetails, search]",{"range":"837","text":"838"},"Update the dependencies array to be: [getUsersList, search]",{"range":"839","text":"840"},"Update the dependencies array to be: [getMerchents, search]",{"range":"841","text":"842"},"Update the dependencies array to be: [getPermissions, search]",{"range":"843","text":"844"},"Update the dependencies array to be: [getRoles, search]",{"range":"845","text":"846"},"Update the dependencies array to be: [dateRange, getReport]",{"range":"847","text":"848"},"Update the dependencies array to be: [getRoles]",{"range":"849","text":"850"},"Update the dependencies array to be: [onFill, role]",{"range":"851","text":"852"},{"range":"853","text":"759"},{"range":"854","text":"761"},{"range":"855","text":"759"},{"range":"856","text":"761"},{"range":"857","text":"759"},{"range":"858","text":"761"},{"range":"859","text":"759"},{"range":"860","text":"761"},{"range":"861","text":"759"},{"range":"862","text":"761"},{"range":"863","text":"759"},{"range":"864","text":"761"},{"range":"865","text":"759"},{"range":"866","text":"761"},{"range":"867","text":"759"},{"range":"868","text":"761"},{"range":"869","text":"759"},{"range":"870","text":"761"},{"range":"871","text":"759"},{"range":"872","text":"761"},"Update the dependencies array to be: [getUsers]",{"range":"873","text":"874"},{"range":"875","text":"759"},{"range":"876","text":"761"},{"range":"877","text":"759"},{"range":"878","text":"761"},{"range":"879","text":"759"},{"range":"880","text":"761"},{"range":"881","text":"759"},{"range":"882","text":"761"},{"range":"883","text":"759"},{"range":"884","text":"761"},{"range":"885","text":"759"},{"range":"886","text":"761"},{"range":"887","text":"759"},{"range":"888","text":"761"},{"range":"889","text":"759"},{"range":"890","text":"761"},{"range":"891","text":"759"},{"range":"892","text":"761"},{"range":"893","text":"759"},{"range":"894","text":"761"},"Update the dependencies array to be: [getMerchentss]",{"range":"895","text":"896"},[2067,2068],"",[2067,2067],"\\",[2075,2076],[2075,2075],[2091,2092],[2091,2091],[2099,2100],[2099,2099],[2108,2109],[2108,2108],[2112,2113],[2112,2112],[2128,2129],[2128,2128],[2136,2137],[2136,2136],[2153,2154],[2153,2153],[2161,2162],[2161,2161],[2630,2649],"[location.pathname, showNav]",[3788,3790],"[setUserInfo]",[2009,2010],[2009,2009],[2017,2018],[2017,2017],[2033,2034],[2033,2033],[2041,2042],[2041,2041],[2050,2051],[2050,2050],[2054,2055],[2054,2054],[2070,2071],[2070,2070],[2078,2079],[2078,2078],[2095,2096],[2095,2095],[2103,2104],[2103,2103],[1863,1864],[1863,1863],[1871,1872],[1871,1871],[1887,1888],[1887,1887],[1895,1896],[1895,1895],[1904,1905],[1904,1904],[1908,1909],[1908,1908],[1924,1925],[1924,1924],[1932,1933],[1932,1932],[1949,1950],[1949,1949],[1957,1958],[1957,1957],[2301,2303],[2367,2373],"[onFill, user]",[2787,2789],"[getProductDetails]",[6390,6398],"[getProductOrder, search]",[7007,7015],"[getOrderDraft, search]",[2390,2392],"[getOrderDetails]",[1941,1943],"[getProducts]",[6425,6433],"[getProductDetails, search]",[5369,5377],"[getUsersList, search]",[5181,5189],"[getMerchents, search]",[4520,4528],"[getPermissions, search]",[3231,3239],"[getRoles, search]",[6334,6345],"[dateRange, getReport]",[1762,1764],"[getRoles]",[1827,1833],"[onFill, role]",[3504,3505],[3504,3504],[3512,3513],[3512,3512],[3528,3529],[3528,3528],[3536,3537],[3536,3536],[3545,3546],[3545,3545],[3549,3550],[3549,3549],[3565,3566],[3565,3565],[3573,3574],[3573,3573],[3590,3591],[3590,3590],[3598,3599],[3598,3598],[2641,2643],"[getUsers]",[4210,4211],[4210,4210],[4218,4219],[4218,4218],[4234,4235],[4234,4234],[4242,4243],[4242,4242],[4251,4252],[4251,4251],[4255,4256],[4255,4255],[4271,4272],[4271,4271],[4279,4280],[4279,4279],[4296,4297],[4296,4296],[4304,4305],[4304,4304],[2457,2459],"[getMerchentss]"]