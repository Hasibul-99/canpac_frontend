[{"E:\\react\\canpac\\src\\index.js":"1","E:\\react\\canpac\\src\\serviceWorker.js":"2","E:\\react\\canpac\\src\\routers\\App.js":"3","E:\\react\\canpac\\src\\layouts\\Private.js":"4","E:\\react\\canpac\\src\\layouts\\Auth.js":"5","E:\\react\\canpac\\src\\routers\\private-router.js":"6","E:\\react\\canpac\\src\\routers\\auth-router.js":"7","E:\\react\\canpac\\src\\pages\\private\\Order\\index.js":"8","E:\\react\\canpac\\src\\pages\\private\\Dashboard\\index.js":"9","E:\\react\\canpac\\src\\pages\\Auth\\SignIn\\index.js":"10","E:\\react\\canpac\\src\\pages\\components\\LeftSidebar.js":"11","E:\\react\\canpac\\src\\pages\\components\\TopNavbar.js":"12","E:\\react\\canpac\\src\\pages\\components\\icons\\index.js":"13","E:\\react\\canpac\\src\\pages\\Auth\\SignUp\\index.js":"14","E:\\react\\canpac\\src\\pages\\Auth\\Forget-Password\\index.js":"15","E:\\react\\canpac\\src\\pages\\private\\Profile\\UpdateProfile.js":"16","E:\\react\\canpac\\src\\pages\\private\\Dashboard\\verticalBar.js":"17","E:\\react\\canpac\\src\\pages\\private\\Dashboard\\Doughnut.js":"18","E:\\react\\canpac\\src\\pages\\private\\Product-Stock\\index.js":"19","E:\\react\\canpac\\src\\pages\\private\\Product-Order\\index.js":"20","E:\\react\\canpac\\src\\pages\\private\\Order-Draft\\index.js":"21","E:\\react\\canpac\\src\\pages\\private\\Produect-Details\\index.js":"22","E:\\react\\canpac\\src\\pages\\private\\Low-stock\\index.js":"23","E:\\react\\canpac\\src\\pages\\private\\Product-Delivery\\index.js":"24","E:\\react\\canpac\\src\\pages\\private\\users\\index.js":"25","E:\\react\\canpac\\src\\pages\\private\\Merchents\\index.js":"26","E:\\react\\canpac\\src\\pages\\private\\Permissions\\index.js":"27","E:\\react\\canpac\\src\\pages\\private\\Roles\\index.js":"28","E:\\react\\canpac\\src\\pages\\private\\Roles\\Create-Role.js":"29","E:\\react\\canpac\\src\\scripts\\api.js":"30","E:\\react\\canpac\\src\\scripts\\api-service.js":"31","E:\\react\\canpac\\src\\scripts\\helper.js":"32","E:\\react\\canpac\\src\\context\\AuthContext.js":"33","E:\\react\\canpac\\src\\pages\\private\\Report\\WeeklyReport.js":"34","E:\\react\\canpac\\src\\pages\\private\\Roles\\Update-role.js":"35","E:\\react\\canpac\\src\\pages\\private\\users\\CreateUser.js":"36","E:\\react\\canpac\\src\\pages\\private\\users\\UpdateUser.js":"37","E:\\react\\canpac\\src\\pages\\private\\Merchents\\UpdateMarchent.js":"38","E:\\react\\canpac\\src\\pages\\private\\Merchents\\CreateMarchent.js":"39","E:\\react\\canpac\\src\\pages\\Auth\\Forget-Password\\passwordSet.js":"40","E:\\react\\canpac\\src\\pages\\Auth\\VerifyEmail\\index.js":"41","E:\\react\\canpac\\src\\i18n.js":"42","E:\\react\\canpac\\src\\pages\\private\\404.js":"43","E:\\react\\canpac\\src\\pages\\private\\Merchents\\addProductModel.js":"44","E:\\react\\canpac\\src\\pages\\private\\Report-schedule\\index.js":"45"},{"size":963,"mtime":1643344354958,"results":"46","hashOfConfig":"47"},{"size":5156,"mtime":1612957156853,"results":"48","hashOfConfig":"47"},{"size":1012,"mtime":1637945927202,"results":"49","hashOfConfig":"47"},{"size":2139,"mtime":1637945926690,"results":"50","hashOfConfig":"47"},{"size":943,"mtime":1637945926649,"results":"51","hashOfConfig":"47"},{"size":5955,"mtime":1648006216479,"results":"52","hashOfConfig":"47"},{"size":1001,"mtime":1637945927203,"results":"53","hashOfConfig":"47"},{"size":3555,"mtime":1642049409523,"results":"54","hashOfConfig":"47"},{"size":7155,"mtime":1645183937226,"results":"55","hashOfConfig":"47"},{"size":6209,"mtime":1648054105016,"results":"56","hashOfConfig":"47"},{"size":14535,"mtime":1648006416912,"results":"57","hashOfConfig":"47"},{"size":15923,"mtime":1643120051509,"results":"58","hashOfConfig":"47"},{"size":1772,"mtime":1630068752394,"results":"59","hashOfConfig":"47"},{"size":6697,"mtime":1648054123176,"results":"60","hashOfConfig":"47"},{"size":7182,"mtime":1648054136611,"results":"61","hashOfConfig":"47"},{"size":6580,"mtime":1637945927082,"results":"62","hashOfConfig":"47"},{"size":2613,"mtime":1645184795496,"results":"63","hashOfConfig":"47"},{"size":2409,"mtime":1642048936200,"results":"64","hashOfConfig":"47"},{"size":7516,"mtime":1648186241283,"results":"65","hashOfConfig":"47"},{"size":12402,"mtime":1648403174937,"results":"66","hashOfConfig":"47"},{"size":12755,"mtime":1648403023436,"results":"67","hashOfConfig":"47"},{"size":8921,"mtime":1645286145758,"results":"68","hashOfConfig":"47"},{"size":4526,"mtime":1648053085841,"results":"69","hashOfConfig":"47"},{"size":12366,"mtime":1648403485987,"results":"70","hashOfConfig":"47"},{"size":10368,"mtime":1648404657325,"results":"71","hashOfConfig":"47"},{"size":10697,"mtime":1648404786590,"results":"72","hashOfConfig":"47"},{"size":8464,"mtime":1648404563273,"results":"73","hashOfConfig":"47"},{"size":5127,"mtime":1648404447424,"results":"74","hashOfConfig":"47"},{"size":3981,"mtime":1637945927115,"results":"75","hashOfConfig":"47"},{"size":2797,"mtime":1648007202006,"results":"76","hashOfConfig":"47"},{"size":5649,"mtime":1637945927232,"results":"77","hashOfConfig":"47"},{"size":1627,"mtime":1643137062796,"results":"78","hashOfConfig":"47"},{"size":1264,"mtime":1637945926632,"results":"79","hashOfConfig":"47"},{"size":15619,"mtime":1648404124265,"results":"80","hashOfConfig":"47"},{"size":4758,"mtime":1645262603461,"results":"81","hashOfConfig":"47"},{"size":9090,"mtime":1648405056524,"results":"82","hashOfConfig":"47"},{"size":8667,"mtime":1643130133190,"results":"83","hashOfConfig":"47"},{"size":11703,"mtime":1645284252980,"results":"84","hashOfConfig":"47"},{"size":8363,"mtime":1648404933920,"results":"85","hashOfConfig":"47"},{"size":3084,"mtime":1637945926791,"results":"86","hashOfConfig":"47"},{"size":1291,"mtime":1637945926823,"results":"87","hashOfConfig":"47"},{"size":455,"mtime":1637945926633,"results":"88","hashOfConfig":"47"},{"size":2449,"mtime":1645287426558,"results":"89","hashOfConfig":"47"},{"size":5914,"mtime":1648053387894,"results":"90","hashOfConfig":"47"},{"size":7044,"mtime":1648404297670,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"17bgnq6",{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"94"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\canpac\\src\\index.js",[],["202","203"],"E:\\react\\canpac\\src\\serviceWorker.js",[],"E:\\react\\canpac\\src\\routers\\App.js",[],"E:\\react\\canpac\\src\\layouts\\Private.js",[],"E:\\react\\canpac\\src\\layouts\\Auth.js",[],"E:\\react\\canpac\\src\\routers\\private-router.js",[],"E:\\react\\canpac\\src\\routers\\auth-router.js",[],"E:\\react\\canpac\\src\\pages\\private\\Order\\index.js",["204"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Select, Form, Button, InputNumber  } from 'antd';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { DROPDOWN_LIST, ORDER_CREATE } from '../../../scripts/api';\r\nimport { alertPop } from '../../../scripts/helper';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function OrderCreate() {\r\n    const [form] = Form.useForm();\r\n    const history = useHistory();\r\n    const [product, setProduct] = useState([]);\r\n\r\n    const onFinish = async (values) => {\r\n        let res = await postData(ORDER_CREATE, values);\r\n\r\n        if (res) {\r\n            alertPop('success', \"Order Created Successfully!\");\r\n            history.push('/product-order');\r\n            form.resetFields();\r\n        }\r\n    };\r\n\r\n    const getProductModel = async () => {\r\n        let res = await postData(DROPDOWN_LIST, {\r\n            data_type: 'product_model'\r\n        });\r\n\r\n        if (res) {\r\n            setProduct(res.data.data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProductModel()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Create Order</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                        form={form}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                        >\r\n                        <Form.Item\r\n                            label=\"Product Model\"\r\n                            name=\"product_id\"\r\n                            rules={[{ required: true, message: 'Please Select Product!' }]}\r\n                        >\r\n                            <Select\r\n                                size=\"large\"\r\n                                showSearch\r\n                                placeholder=\"Select Product Model\"\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                {\r\n                                    product?.length && product.map(pro => <Option value={pro.id} key={pro.id}>{pro?.product_name}</Option>)\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Quantity\"\r\n                            name=\"quantity\"\r\n                            rules={[{ required: true, message: 'Please input Quantity!' }]}\r\n                        >\r\n                            <InputNumber placeholder=\"Quantity\" size=\"large\" min={1} style={{width: \"100%\"}}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                            Create Order\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Dashboard\\index.js",["205","206","207"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport VerticalBar from \"./verticalBar\";\r\nimport DoughnutChart from \"./Doughnut\";\r\nimport { Card, Skeleton, Button  } from 'antd';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { authContext } from \"../../../context/AuthContext\";\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { DASHBOARD } from '../../../scripts/api';\r\nimport * as htmlToImage from 'html-to-image';\r\nimport moment from 'moment';\r\n\r\n\r\nexport default function Dashboard() {\r\n    const {t, i18n} = useTranslation();\r\n    const {user, getUserInfo, setUserInfo} = useContext(authContext);\r\n    const [dashboard, setDashboard] = useState();\r\n\r\n    const getDashboardData = async () => {\r\n        let res = await postData(DASHBOARD, {});\r\n\r\n        if (res) {\r\n            setDashboard(res.data.data);\r\n        }\r\n    };\r\n\r\n    const generateReport = () => {\r\n        htmlToImage.toBlob(document.getElementById('my-node'))\r\n            .then(function (blob) {\r\n                window.saveAs(blob, `generale-report-${moment().format('YYYY-MM-DD--HH-mm-ss')}.png`);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDashboardData()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                dashboard ? <>\r\n                {\r\n                    user && <div className=\"rui-page-title\">\r\n                        <div className=\"container-fluid\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb\" style={{\"listStyleType\": \"none\"}}>\r\n                                    <li className=\"breadcrumb-item\"> <strong>\r\n                                        {t(\"common.name\")}: </strong> {user?.name}</li>\r\n                                </ol>\r\n                                <ol className=\"breadcrumb\" style={{\"listStyleType\": \"none\"}}>\r\n                                    <li className=\"breadcrumb-item\"> <strong>Company:</strong> {user.company_name} </li>\r\n                                </ol>\r\n                                <ol className=\"breadcrumb\" style={{\"listStyleType\": \"none\"}}>\r\n                                    <li className=\"breadcrumb-item\"> <strong>Phone:</strong> {user.phone} </li>\r\n                                </ol>\r\n                                <ol className=\"breadcrumb\" style={{\"listStyleType\": \"none\"}}>\r\n                                    <li className=\"breadcrumb-item\"> <strong>Email:</strong> {user.email} </li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                \r\n                <div>\r\n                    <Button onClick={generateReport} type=\"primary\" size=\"large\" style={{width: \"300px\"}}\r\n                    className=\"btn-brand btn-block float-right mb-20\">Generate Report</Button>\r\n                </div>\r\n\r\n                <div className=\"rui-page-content\" id=\"my-node\">\r\n                    <div className=\"container-fluid\">\r\n                        {\r\n                            dashboard && <div className=\"row xs-gap mt-20 px-20\">\r\n                                {\r\n                                    getUserInfo()?.roles[0].name !== 'Premium Merchant' ? <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                        <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4 text-center\">\r\n                                            <h1>Product Stock</h1>\r\n                                            <Link to=\"/product-stock\"><h2>{dashboard.product_stock}</h2></Link>\r\n                                        </div>\r\n                                    </div> : ''\r\n                                }\r\n                                \r\n                                {\r\n                                    getUserInfo()?.roles[0].name !== 'Merchant' ? <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                        <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4 text-center\">\r\n                                            <h1>Product Order</h1>\r\n                                            <Link to=\"/product-order\"><h2>{dashboard.product_order}</h2></Link>\r\n                                        </div>\r\n                                    </div> : ''\r\n                                }\r\n                                \r\n                                {\r\n                                    getUserInfo()?.roles[0].name !== 'Merchant' && getUserInfo()?.roles[0].name !== 'Premium Merchant' ? <div className=\"col col-sm-12 col-lg-3 mb-10\">\r\n                                        <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4 text-center\">\r\n                                            <h1>Low Stock</h1>\r\n                                            <Link to=\"/low-stock\"><h2>{dashboard.low_stock}</h2></Link>\r\n                                        </div>\r\n                                    </div> : ''\r\n                                }\r\n                                \r\n                                <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                    <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4 text-center\">\r\n                                        <h1>Product Delivery</h1>\r\n                                        <Link to=\"/product-delivery\"><h2>{dashboard.product_delivery}</h2></Link>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    getUserInfo()?.roles[0].name === 'Premium Merchant' ? <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                                        <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4 text-center\">\r\n                                            <h1>Product Order Draft</h1>\r\n                                            <Link to=\"/product-delivery\"><h2>{dashboard.product_order_draft}</h2></Link>\r\n                                        </div>\r\n                                    </div> : ''\r\n                                }\r\n                                \r\n                            </div>\r\n                        }\r\n\r\n                        <div className=\"row xs-gap mt-20 px-20\">\r\n                            <div className=\"col col-sm-12 col-lg-12 mb-10\">\r\n                                <Card >\r\n                                    <VerticalBar quantity={dashboard.product_quantity_model_wise}></VerticalBar>\r\n                                </Card >\r\n                            </div>\r\n                            <div className=\"col col-sm-12 col-lg-12 mb-10\">\r\n                                <Card >\r\n                                    <DoughnutChart products={dashboard.popular_product_model}></DoughnutChart>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                </> : Skeleton\r\n            }\r\n            \r\n        </Fragment>\r\n    )\r\n}","E:\\react\\canpac\\src\\pages\\Auth\\SignIn\\index.js",["208","209","210","211","212","213","214","215","216","217","218"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport \"./style.scss\";\r\nimport { LOGIN, USER_PROFILE, GENERAL_RESOURCE } from \"../../../scripts/api\";\r\nimport { postData, postDataProfile } from \"../../../scripts/api-service\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default function SignIn() {\r\n    const [general, setGeneral] = useState();\r\n    const onFinish = async (values) => {\r\n        let res = await postData(LOGIN, values, 'no_token');\r\n        if (res) {\r\n            Cookies.set(\"canpacToken\", res.data.data.access_token, { expires: 1 });\r\n            // window.location = \"/\";\r\n            setUserInfo(res.data.data.access_token);\r\n        }\r\n    };\r\n\r\n    const setUserInfo = async (token) => {\r\n        let res = await postDataProfile(USER_PROFILE, {}, token);\r\n        if (res) {\r\n            let masterData = res?.data?.data;\r\n            localStorage.setItem(\"canpacPermissions\", JSON.stringify(masterData?.roles[0].permissions));\r\n            window.location = \"/\";\r\n        }\r\n    }\r\n\r\n    const getGeneralResourse = async () => {\r\n        let res = await postData(GENERAL_RESOURCE, {});\r\n\r\n        if (res) {\r\n            let masterData = res.data?.data;\r\n\r\n            console.log(\"masterData ===\", masterData);\r\n            setGeneral(masterData);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGeneralResourse()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"rui-main\">\r\n                <div className=\"rui-sign align-items-center justify-content-center\">\r\n                    <div className=\"bg-image\">\r\n                        <div className=\"bg-grey-1\" />\r\n                    </div>\r\n                    <div className=\"form rui-sign-form rui-sign-form-cloud\">\r\n                        <div className=\"row vertical-gap sm-gap justify-content-center\">\r\n                            <div className=\"col-12 pt-0\">\r\n                                {\r\n                                    general?.login_page_footer_logo ? <img src={general?.login_page_footer_logo}\r\n                                        height=\"100\" width=\"150\"\r\n                                        alt=\"logo\" /> : ''\r\n                                }\r\n\r\n                                <h1 className=\"display-4 mb-10 text-center\">Sign In</h1>\r\n                            </div>\r\n\r\n                            <Form style={{ width: \"100%\", marginTop: \"2rem\" }}\r\n                                onFinish={onFinish}\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"email\"\r\n                                    rules={[\r\n                                        { required: true, message: 'Please input your email addresss!' },\r\n                                        {\r\n                                            pattern: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n                                            message: \"Please enter a valid email address\",\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input size=\"large\" placeholder=\"Email address\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                >\r\n                                    <Input.Password size=\"large\" placeholder=\"Password\" />\r\n                                </Form.Item>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\"></div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <Link to=\"/auth/forget-password\" className=\"fs-13\">Forget password?</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\", marginTop: \"1rem\" }} >\r\n                                        Login\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"rui-sign-or\">or</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-20 text-grey-5\">\r\n                        Don&apos;t you have an account?\r\n                        <Link to=\"/auth/signup\" className=\"text-2\"> Sign Up</Link>\r\n                    </div>\r\n\r\n                    {\r\n                        general ? <footer class=\"rui-footer\">\r\n                            <div class=\"container-fluid text-center\">\r\n                                <p class=\"mb-0\">\r\n                                    Copyright © {general.login_page_footer_copyright_year} {general.login_page_footer_copyright_text}\r\n                                    <a style={{ color: \"#40a9ff\" }} href={general.login_page_footer_copyright_url} target=\"_blank\">{general.login_page_footer_copyright_url_title}</a>.\r\n                                    <br />\r\n                                    Contact with us: <span style={{ color: \"#40a9ff\" }} >{general.login_page_footer_contact_email}</span>\r\n                                    <br />\r\n                                    <span style={{ color: \"#40a9ff\" }}>{general.login_page_footer_contact_phone}</span>\r\n                                </p>\r\n                            </div>\r\n                        </footer> : ''\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\components\\LeftSidebar.js",[],"E:\\react\\canpac\\src\\pages\\components\\TopNavbar.js",["219","220","221","222","223","224","225","226","227","228","229","230"],"import React, {Fragment, useContext, useEffect, useState} from 'react'\r\nimport logo from \"../../assets/images/i-logo.png\";\r\nimport avatar1 from \"../../assets/images/avatar-1.png\";\r\nimport $ from \"jquery\";\r\nimport { Menu, Dropdown, Modal } from 'antd';\r\nimport { LogoutOutlined, UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { Link } from 'react-router-dom';\r\nimport { CHANGE_PASSWORD } from \"../../scripts/api\";\r\nimport { postData } from \"../../scripts/api-service\";\r\nimport { alertPop, checkUserPermission } from \"../../scripts/helper\";\r\nimport Cookies from \"js-cookie\";\r\nimport { authContext } from \"../../context/AuthContext\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n      width,\r\n      height\r\n    };\r\n};\r\n\r\nexport default function TopNavbar() {\r\n    const location = useLocation();\r\n    const {t, i18n} = useTranslation();\r\n\r\n    const {user, getUserInfo, setUserInfo, DeleteUserInfo, permissions } = useContext(authContext);\r\n\r\n    const [changepassModal, setChangepassModal] = useState(false);\r\n    const [showNav, setShowNav] = useState(true);\r\n\r\n    const toggleContent = () => {\r\n        if ($( \"#main-wrapper\" ).hasClass( \"yay-hide\" )) {\r\n            $( \"#main-wrapper\" ).removeClass( \"yay-hide\" );\r\n            setShowNav(true);\r\n        } else {\r\n            $( \"#main-wrapper\" ).addClass( \"yay-hide\" );\r\n            setShowNav(false);\r\n        }\r\n    }\r\n\r\n    const mobileViewToggle = () => {\r\n        if ($( \"#main-wrapper\" ).hasClass( \"yay-hide\" )) {\r\n            $('#left-sidebar-cici-4565').css(\"z-index\", 1004);\r\n            $('#left-sidebar-cici-4565').css(\"opacity\", 0);\r\n            $( \"#main-wrapper\" ).removeClass( \"yay-overlay\" );\r\n        } else {\r\n            $('#left-sidebar-cici-4565').css(\"z-index\", 10000);\r\n            $('#left-sidebar-cici-4565').css(\"opacity\", 1);\r\n            $( \"#left-sidebar-cici-4565\" ).addClass( \"yay-overlay\" );\r\n        }\r\n    }\r\n\r\n    const logOut = () => {\r\n        DeleteUserInfo();\r\n        Cookies.remove(\"canpacToken\");\r\n        window.location = \"/auth/login\";\r\n        localStorage.removeItem('canpacPermissions');\r\n    };\r\n\r\n    const canView = (context) => {\r\n        return checkUserPermission(context, permissions);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (location.pathname === \"/\") {\r\n            if (!($( \"#main-wrapper\" ).hasClass( \"yay-hide\" ))) $( \"#main-wrapper\" ).addClass( \"yay-hide\" );\r\n        } else {\r\n            if ($( \"#main-wrapper\" ).hasClass( \"yay-hide\" ) && showNav) $( \"#main-wrapper\" ).removeClass( \"yay-hide\" );\r\n        }\r\n\r\n    }, [location.pathname])\r\n\r\n    const menu = (\r\n        <Menu>\r\n            {\r\n                !canView('User - Change Password') ? <Menu.Item>\r\n                    <a rel=\"noopener noreferrer\" onClick={() => {setChangepassModal(true)}}>\r\n                        <KeyOutlined /> Change Password\r\n                    </a>\r\n                </Menu.Item> : ''\r\n            }\r\n          <Menu.Item>\r\n            <Link to=\"/update-profile\">\r\n                <UserOutlined /> Update Profile\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <a rel=\"noopener noreferrer\" onClick={() => logOut()}>\r\n                <LogoutOutlined /> Sign Out\r\n            </a>\r\n          </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const languageMenu = (\r\n        <Menu>\r\n          <Menu.Item>\r\n            <a rel=\"noopener noreferrer\" onClick={() => changeLanguage(\"en\")}>\r\n                ENGLISH\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <a onClick={() => changeLanguage(\"vn\")}>\r\n                VIETNAMESE\r\n            </a>\r\n          </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    const changeLanguage = (language) => {\r\n        i18n.changeLanguage(language);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setUserInfo();\r\n    }, [])\r\n\r\n    const onFinish = async (values) => {\r\n        if (values.password === values.password_confirmation) {\r\n            let res = await postData(CHANGE_PASSWORD, values);\r\n\r\n            if (res) {\r\n                alertPop('success', 'Password changed successfully');\r\n                setTimeout(() => {\r\n                    logOut();\r\n                }, 2000);\r\n            }\r\n        } else {\r\n            alertPop('error', 'Password and confirmation password not match!');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            let {width} = getWindowDimensions();\r\n            if (width <= 614) {\r\n                $('#left-sidebar-cici-4565').addClass('yay-overlay');\r\n            } else {\r\n                $('#left-sidebar-cici-4565').removeClass('yay-overlay')\r\n            }\r\n        } \r\n        \r\n        handleResize();\r\n        window.addEventListener('resize', handleResize);\r\n      }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n        <nav className=\"rui-navbar rui-navbar-top rui-navbar-sticky\">\r\n            <div className=\"rui-navbar-brand\">\r\n                <a href=\"/\" className=\"rui-navbar-logo\">\r\n                    <img src={logo} alt=\"\" width=\"90\" /> \r\n                </a>\r\n                <button className=\"yay-toggle rui-yaybar-toggle\" type=\"button\" onClick={toggleContent}><span></span></button>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"rui-navbar-content\">\r\n                    <ul className=\"nav\">\r\n                        {/* <li className=\"dropdown dropdown-hover dropdown-keep-open dropdown-triangle\"><a href=\"#actions\"\r\n                                className=\"dropdown-item\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"><span data-feather=\"layers\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Actions</span> <span\r\n                                    className=\"rui-dropdown-circle\"></span></a>\r\n                            \r\n                            <ul className=\"nav dropdown-menu\">\r\n                                <li><a href=\"#create-post\" className=\"nav-link\"><span data-feather=\"plus-circle\"\r\n                                            className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Create Post</span> <span\r\n                                            className=\"rui-nav-circle\"></span></a></li>\r\n                                <li><a href=\"#create-page\" className=\"nav-link\"><span data-feather=\"plus-circle\"\r\n                                            className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Create Page</span> <span\r\n                                            className=\"rui-nav-circle\"></span></a></li>\r\n                                <li><a href=\"#manage-users\" className=\"nav-link\"><span data-feather=\"users\"\r\n                                            className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Manage Users</span> <span\r\n                                            className=\"rui-nav-circle\"></span></a></li>\r\n                                <li className=\"dropdown dropdown-hover dropdown-keep-open dropdown-triangle\"><a\r\n                                        href=\"#manage-sites\" className=\"dropdown-item\" data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\" aria-expanded=\"false\"><span data-feather=\"sidebar\"\r\n                                            className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Manage Sites</span> <span\r\n                                            className=\"rui-dropdown-circle\"></span></a>\r\n                                    <ul className=\"nav dropdown-menu\">\r\n                                        <li><a href=\"#my-site-1\" className=\"nav-link\">My Site 1</a></li>\r\n                                        <li><a href=\"#my-site-2\" className=\"nav-link\">My Site 2</a></li>\r\n                                        <li><a href=\"#my-site-3\" className=\"nav-link\">My Site 3</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </li> */}\r\n                    </ul>\r\n\r\n                    <ul className=\"nav rui-navbar-right\">\r\n                        <li className=\"nav-item\"><a className=\"d-flex\" data-fancybox data-keyboard=\"false\" data-auto-focus=\"false\"\r\n                                data-touch=\"false\" data-close-existing=\"true\" data-src=\"#messenger\"\r\n                                href=\"javascript:;\"><span className=\"btn btn-custom-round\"><span data-feather=\"message-circle\"\r\n                                        className=\"rui-icon rui-icon-stroke-1_5\"></span></span></a></li>\r\n                        \r\n                        {/* <Dropdown className=\"mt-5\" overlay={languageMenu} placement=\"bottomRight\" arrow>\r\n                            <Button>{i18n.language}</Button>\r\n                        </Dropdown> */}\r\n                        <li className=\"dropdown dropdown-hover dropdown-triangle dropdown-keep-open\">\r\n                        <Dropdown overlay={menu} placement=\"bottomRight\" arrow>\r\n                            <a className=\"dropdown-item rui-navbar-avatar mnr-6\">\r\n                                    <img src={user?.thumb_image_url || avatar1} alt=\"\" />\r\n                            </a>\r\n                        </Dropdown>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n        <div className=\"rui-navbar rui-navbar-mobile\">\r\n            <div className=\"rui-navbar-head\">\r\n                <button onClick={() => {mobileViewToggle()}} className=\"rui-yaybar-toggle rui-yaybar-toggle-inverse yay-toggle\"\r\n                    type=\"button\" aria-label=\"Toggle side navigation\"><span></span>\r\n                </button>\r\n                <a className=\"rui-navbar-logo mr-auto\" href=\"/\">\r\n                    <img src={logo} alt=\"\" width=\"95\"/>\r\n                </a>\r\n                <div className=\"dropdown dropdown-triangle\">\r\n                <Dropdown overlay={menu} trigger={['click']}>\r\n                    <a className=\"dropdown-item rui-navbar-avatar\" >\r\n                            <img src={user?.thumb_image_url || avatar1} alt=\"\"/>\r\n                    </a>\r\n                </Dropdown>,\r\n                    {/* <ul className=\"dropdown-menu nav\">\r\n                        <li><a href=\"profile.html\" className=\"nav-link\"><span data-feather=\"plus-circle\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Create new Post</span> <span\r\n                                    className=\"rui-nav-circle\"></span></a></li>\r\n                        <li><a href=\"profile.html\" className=\"nav-link\"><span data-feather=\"users\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Manage Users</span> <span\r\n                                    className=\"rui-nav-circle\"></span></a></li>\r\n                        <li><a href=\"profile.html\" className=\"nav-link\"><span data-feather=\"check-circle\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Check Updates</span> <span\r\n                                    className=\"rui-nav-circle\"></span></a></li>\r\n                        <li><a href=\"profile.html\" className=\"nav-link\"><span data-feather=\"log-out\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Exit</span> <span\r\n                                    className=\"rui-nav-circle\"></span></a></li>\r\n                    </ul> */}\r\n                </div><button className=\"navbar-toggler rui-navbar-toggle\" type=\"button\" data-toggle=\"collapse\"\r\n                    data-target=\"#navbarMobile\" aria-controls=\"navbarMobile\" aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"><span></span></button>\r\n            </div>\r\n            \r\n            <div className=\"collapse navbar-collapse rui-navbar-collapse\" id=\"navbarMobile\">\r\n                <div className=\"rui-navbar-content\">\r\n                    <ul className=\"nav\">\r\n                        \r\n                    <Dropdown className=\"mt-5 w-100\" overlay={languageMenu} placement=\"bottomRight\" arrow>\r\n                        <Button>{i18n.language}</Button>\r\n                    </Dropdown>\r\n                        {/* <li className=\"dropdown dropdown-keep-open\"><a className=\"dropdown-item\" href=\"#\" data-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\" aria-expanded=\"false\"><span data-feather=\"flag\"\r\n                                    className=\"rui-icon rui-icon-stroke-1_5\"></span> <span>Language</span> <span\r\n                                    className=\"rui-dropdown-circle\"></span></a>\r\n                            <ul className=\"nav dropdown-menu rui-navbar-dropdown-language\">\r\n                                <li><a href=\"#\" className=\"rui-navbar-language active\"><span\r\n                                            className=\"rui-navbar-language-img\"><img\r\n                                                src=\"assets/images/united-states-of-america.svg\" alt=\"\"/></span>USA</a></li>\r\n                                <li><a href=\"#\" className=\"rui-navbar-language\"><span className=\"rui-navbar-language-img\"><img\r\n                                                src=\"assets/images/china.svg\" alt=\"\"/></span>China</a></li>\r\n                                <li><a href=\"#\" className=\"rui-navbar-language\"><span className=\"rui-navbar-language-img\"><img\r\n                                                src=\"assets/images/germany.svg\" alt=\"\"/></span>Germany</a></li>\r\n                                <li><a href=\"#\" className=\"rui-navbar-language\"><span className=\"rui-navbar-language-img\"><img\r\n                                                src=\"assets/images/japan.svg\" alt=\"\"/></span>Japan</a></li>\r\n                                <li><a href=\"#\" className=\"rui-navbar-language\"><span className=\"rui-navbar-language-img\"><img\r\n                                                src=\"assets/images/spain.svg\" alt=\"\"/></span>Spain</a></li>\r\n                            </ul>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <Modal title=\"Change Password\"\r\n            visible={changepassModal}\r\n            width=\"50vw\"\r\n            onCancel={() => {setChangepassModal(false);}}\r\n            footer={false}\r\n        >\r\n            <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                onFinish={onFinish}\r\n                >\r\n                <Form.Item\r\n                    name=\"old_password\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password size=\"large\" placeholder=\"Old Password\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password size=\"large\" placeholder=\"Password\"/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"password_confirmation\"\r\n                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                    <Input.Password size=\"large\" placeholder=\"Confirm Password\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                        Save\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\components\\icons\\index.js",[],"E:\\react\\canpac\\src\\pages\\Auth\\SignUp\\index.js",["231","232","233","234","235","236","237","238","239","240","241"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { MERCHENT_SELT_SIGNUP, GENERAL_RESOURCE } from '../../../scripts/api';\r\nimport { alertPop } from '../../../scripts/helper';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SignUp() {\r\n    const [general, setGeneral] = useState();\r\n    const history = useHistory();\r\n\r\n    const onFinish = async (values) => {\r\n        let res = await postData(MERCHENT_SELT_SIGNUP, values);\r\n\r\n        if (res) {\r\n            alertPop('success', res?.data?.message);\r\n            history.push('/auth/login');\r\n        }\r\n    };\r\n\r\n    const getGeneralResourse = async () => {\r\n        let res = await postData(GENERAL_RESOURCE, {});\r\n\r\n        if (res) {\r\n            let masterData = res.data?.data;\r\n\r\n            console.log(\"masterData ===\", masterData);\r\n            setGeneral(masterData);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGeneralResourse()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"rui-main\">\r\n                <div className=\"rui-sign align-items-center justify-content-center\">\r\n                    <div className=\"bg-image\">\r\n                        <div className=\"bg-grey-1\" />\r\n                    </div>\r\n                    <div className=\"form rui-sign-form rui-sign-form-cloud\">\r\n                        <div className=\"row vertical-gap sm-gap justify-content-center\">\r\n                            <div className=\"col-12 pt-0\">\r\n                                {\r\n                                    general?.login_page_footer_logo ? <img src={general?.login_page_footer_logo}\r\n                                        height=\"100\" width=\"150\"\r\n                                        alt=\"logo\" /> : ''\r\n                                }\r\n                                <h1 className=\"display-4 mb-10 text-center\">Sign Up</h1>\r\n                            </div>\r\n\r\n                            <Form style={{ width: \"100%\", marginTop: \"2rem\" }}\r\n                                onFinish={onFinish}\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"name\"\r\n                                    rules={[{ required: true, message: 'Please input your Name!' }]}\r\n                                >\r\n                                    <Input size=\"large\" placeholder=\"Enter Name\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"email\"\r\n                                    rules={[{ required: true, message: 'Please input email!' },\r\n                                    {\r\n                                        pattern: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n                                        message: \"Please enter a valid email address\",\r\n                                    }]}\r\n                                >\r\n                                    <Input size=\"large\" placeholder=\"Enter email\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"phone\"\r\n                                    rules={[{ required: true, message: 'Please input Phone!' }]}\r\n                                >\r\n                                    <Input size=\"large\" placeholder=\"Enter Phone\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"company_name\"\r\n                                    rules={[{ required: true, message: 'Please input company name!' }]}\r\n                                >\r\n                                    <Input size=\"large\" placeholder=\"Enter company name\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                >\r\n                                    <Input.Password size=\"large\" placeholder=\"password\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"password_confirmation\"\r\n                                    rules={[{ required: true, message: 'Please input your Confirm password!' }]}\r\n                                >\r\n                                    <Input.Password size=\"large\" placeholder=\"Confirm Password\" />\r\n                                </Form.Item>\r\n\r\n\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\", marginTop: \"1rem\" }} >\r\n                                        Sign up\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"rui-sign-or\">or</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-20 text-grey-5\">\r\n                        Already have an account <Link to=\"/auth/login\" className=\"text-2\">Sign In</Link>\r\n                    </div>\r\n\r\n                    {\r\n                        general ? <footer class=\"rui-footer\">\r\n                            <div class=\"container-fluid text-center\">\r\n                                <p class=\"mb-0\">\r\n                                    Copyright © {general.login_page_footer_copyright_year} {general.login_page_footer_copyright_text}\r\n                                    <a style={{ color: \"#40a9ff\" }} href={general.login_page_footer_copyright_url} target=\"_blank\">{general.login_page_footer_copyright_url_title}</a>.\r\n                                    <br />\r\n                                    Contact with us: <span style={{ color: \"#40a9ff\" }} >{general.login_page_footer_contact_email}</span>\r\n                                    <br />\r\n                                    <span style={{ color: \"#40a9ff\" }}>{general.login_page_footer_contact_phone}</span>\r\n                                </p>\r\n                            </div>\r\n                        </footer> : ''\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\Auth\\Forget-Password\\index.js",["242","243","244","245","246","247","248","249","250","251","252","253","254"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { postData } from \"../../../scripts/api-service\";\r\nimport { FORGET_PASSWORD_EMAIL, GENERAL_RESOURCE } from \"../../../scripts/api\";\r\n\r\nexport default function ForgetPassword() {\r\n    const [general, setGeneral] = useState();\r\n    const [isresetpassword, setResetPassword] = useState(1);\r\n    const [isLoading, setIsLoading] = useState();\r\n\r\n    const onFinish = async (values) => {\r\n        console.log('Success:', values);\r\n        // setResetPassword(0);\r\n        let res = await postData(FORGET_PASSWORD_EMAIL, values);\r\n\r\n        if (res) {\r\n            setIsLoading(true);\r\n        }\r\n    };\r\n\r\n\r\n    const getGeneralResourse = async () => {\r\n        let res = await postData(GENERAL_RESOURCE, {});\r\n\r\n        if (res) {\r\n            let masterData = res.data?.data;\r\n\r\n            console.log(\"masterData ===\", masterData);\r\n            setGeneral(masterData);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGeneralResourse()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"rui-main\">\r\n                <div className=\"rui-sign align-items-center justify-content-center\">\r\n                    <div className=\"bg-image\">\r\n                        <div className=\"bg-grey-1\" />\r\n                    </div>\r\n                    <div className=\"form rui-sign-form rui-sign-form-cloud\">\r\n                        <div className=\"row vertical-gap sm-gap justify-content-center\">\r\n                            {\r\n                                isresetpassword ? <Fragment>\r\n                                    <div className=\"col-12 pt-0\">\r\n                                        {\r\n                                            general?.login_page_footer_logo ? <img src={general?.login_page_footer_logo}\r\n                                                height=\"100\" width=\"150\"\r\n                                                alt=\"logo\" /> : ''\r\n                                        }\r\n\r\n                                        <h1 className=\"display-4 mb-10 text-center\">Forget Password</h1>\r\n                                    </div>\r\n                                    <Form style={{ width: \"100%\", marginTop: \"2rem\" }}\r\n                                        onFinish={onFinish}\r\n                                    >\r\n                                        <Form.Item\r\n                                            name=\"email\"\r\n                                            rules={[{ required: true, message: 'Please input email!' },\r\n                                            {\r\n                                                pattern: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n                                                message: \"Please enter a valid email address\",\r\n                                            }]}\r\n                                        >\r\n                                            <Input size=\"large\" placeholder=\"Email\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item>\r\n                                            <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\", marginTop: \"1rem\" }} >\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Fragment> : <Fragment>\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"display-4 mb-10 text-center\">Reset Password</h1>\r\n                                    </div>\r\n\r\n                                    <Form style={{ width: \"100%\", marginTop: \"2rem\" }}\r\n                                    // onFinish={onFinish}\r\n                                    >\r\n                                        <Form.Item\r\n                                            name=\"password\"\r\n                                            rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                        >\r\n                                            <Input.Password size=\"large\" placeholder=\"password\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item\r\n                                            name=\"password\"\r\n                                            rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                        >\r\n                                            <Input.Password size=\"large\" placeholder=\"Confirm Password\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item>\r\n                                            <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\", marginTop: \"1rem\" }} >\r\n                                                Save\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Fragment>\r\n                            }\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"rui-sign-or\">or</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-20 text-grey-5\">\r\n                        Already have an account? <Link to=\"/auth/login\" className=\"text-2\">Sign In</Link>\r\n                        <br />\r\n                        <h5 className=\"text-center mt-3 mb-3\">Or</h5>\r\n                        Don&apos;t you have an account? <Link to=\"/auth/signup\" className=\"text-2\">Sign Up</Link>\r\n\r\n                    </div>\r\n\r\n                    {\r\n                        general ? <footer class=\"rui-footer\">\r\n                            <div class=\"container-fluid text-center\">\r\n                                <p class=\"mb-0\">\r\n                                    Copyright © {general.login_page_footer_copyright_year} {general.login_page_footer_copyright_text}\r\n                                    <a style={{ color: \"#40a9ff\" }} href={general.login_page_footer_copyright_url} target=\"_blank\">{general.login_page_footer_copyright_url_title}</a>.\r\n                                    <br />\r\n                                    Contact with us: <span style={{ color: \"#40a9ff\" }} >{general.login_page_footer_contact_email}</span>\r\n                                    <br />\r\n                                    <span style={{ color: \"#40a9ff\" }}>{general.login_page_footer_contact_phone}</span>\r\n                                </p>\r\n                            </div>\r\n                        </footer> : ''\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Profile\\UpdateProfile.js",["255","256","257","258"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button, Upload } from \"antd\";\r\nimport demo from \"../../../assets/images/avatar-1.png\"\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { authContext } from \"../../../context/AuthContext\";\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { USER_PROFILE } from '../../../scripts/api';\r\nimport { alertPop } from '../../../scripts/helper';\r\n\r\nexport default function UpdateProfile() {\r\n    const formRef = React.createRef();\r\n    const {user, getUserInfo, setUserInfo} = useContext(authContext);\r\n    const [file, setfile] = useState();\r\n    const [imageBase64, setImageBase64] = useState();\r\n\r\n    const onFinish = async (values) => {\r\n        let data = new FormData();\r\n        \r\n        if (file) data.append('image', file); \r\n        data.append('name', values.name);\r\n        data.append('email', values.email); \r\n        data.append('phone', values.phone); \r\n        data.append('company_name', values.company_name); \r\n\r\n        let res = await postData(USER_PROFILE, data);\r\n\r\n        if (res) {\r\n            alertPop('success', \"Profile Update Successfully!\");\r\n        }\r\n    };\r\n\r\n    const props = {\r\n        beforeUpload: file => {\r\n            // return (file.type === 'image/png' || file.type === 'image/jpg') ? true : Upload.LIST_IGNORE;\r\n        },\r\n        onChange: info => {\r\n            console.log(info.fileList);\r\n        },\r\n    };\r\n\r\n    const onFill = () => {\r\n        formRef.current.setFieldsValue({\r\n            name: user?.name,\r\n            company_name: user?.company_name,\r\n            email: user?.email,\r\n            phone: user?.phone,\r\n        });\r\n    };\r\n\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.onload = () => resolve(reader.result);\r\n          reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    const profilePreview = async ({file}) => {\r\n        setfile(file.originFileObj);\r\n        let preview = await getBase64(file.originFileObj);\r\n        setImageBase64(preview);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUserInfo();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user) onFill()\r\n    }, [user])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Update Profile</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row xs-gap\">\r\n                        <div className=\"col-sm\">\r\n                            <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                                    ref={formRef}\r\n                                    layout={'vertical'}\r\n                                    onFinish={onFinish}\r\n                                    >\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[{ required: true, message: 'Please Input Your Name!' }]}\r\n                                        // initialValue={userlogInfo?.name}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Name\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: 'Please input email!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Email\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        rules={[{ required: true, message: 'Please input phone!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Phone\" />\r\n                                    </Form.Item>\r\n                                    \r\n                                    <Form.Item\r\n                                        label=\"Company Name\"\r\n                                        name=\"company_name\"\r\n                                        rules={[{ required: false, message: 'Please input company name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Company Name\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item>\r\n                                        <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                            Update\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                <div className=\"rui-profile\">\r\n                                    <div className=\"rui-profile-img m-auto\">\r\n                                        <img src={ imageBase64 ? imageBase64 : user?.real_image_url ? user?.real_image_url : demo} alt=\"\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text-center mt-5\">\r\n                                    <Upload {...props} accept=\"image/*\" onChange={profilePreview}>\r\n                                        <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n                                    </Upload>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Dashboard\\verticalBar.js",[],"E:\\react\\canpac\\src\\pages\\private\\Dashboard\\Doughnut.js",[],"E:\\react\\canpac\\src\\pages\\private\\Product-Stock\\index.js",["259","260","261","262","263","264"],"import React, { Fragment, useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  Space,\r\n  Select,\r\n  Form,\r\n  InputNumber,\r\n  Button,\r\n  Input,\r\n  DatePicker,\r\n  Skeleton, Spin\r\n} from \"antd\";\r\nimport { getData, postData } from \"../../../scripts/api-service\";\r\nimport {\r\n  PRODUCT_STOCK,\r\n  PRODUCT_STOCK_EXPORT,\r\n  PRODUCT_QTY_SHEET_UPDATE,\r\n  RUN_COMMAND_NOW,\r\n} from \"../../../scripts/api\";\r\nimport { alertPop, checkUserPermission } from \"../../../scripts/helper\";\r\nimport { authContext } from \"../../../context/AuthContext\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from \"moment\";\r\nimport {\r\n  HourglassOutlined,\r\n  EditOutlined,\r\n  UndoOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst children = [];\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\n\r\nconst headers = [\r\n  { label: \"Product Code of SAP\", key: \"product_code_of_sap\" },\r\n  { label: \"Product name\", key: \"product_name\" },\r\n  {\r\n    label: \"Quantity of Product Per Sheet\",\r\n    key: \"quantity_of_product_per_sheet\",\r\n  },\r\n  { label: \"Stock\", key: \"stock\" },\r\n  { label: \"Thickness\", key: \"thickness\" },\r\n  { label: \"Weight\", key: \"weight\" },\r\n  { label: \"QTY per sheet\", key: \"qty_per_sheet\" },\r\n];\r\n\r\nexport default function ProductDelivery() {\r\n  const { permissions } = useContext(authContext);\r\n  const [products, setProducts] = useState();\r\n  const [exportData, setExportData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"\",\r\n      key: \"name\",\r\n      render: (text, record) => (\r\n        <>\r\n          {record.has_low_stock ? (\r\n            <HourglassOutlined\r\n              style={{ color: \"red\", fontSize: \"2rem\" }}\r\n              title=\"This product is in low stock\"\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Product name\",\r\n      dataIndex: \"product_display_name\",\r\n      key: \"address\",\r\n    },\r\n    //   {\r\n    //     title: 'Date',\r\n    //     dataIndex: 'name',\r\n    //     key: 'name',\r\n    //   },\r\n    //   {\r\n    //     title: 'Printed Sheet (Body Blank)',\r\n    //     dataIndex: 'age',\r\n    //     key: 'age',\r\n    //   },\r\n    {\r\n      title: \"Can Stock\",\r\n      dataIndex: \"stock\",\r\n      key: \"stock\",\r\n    },\r\n    {\r\n      title: \"Total Can Stock & Printed Sheet\",\r\n      dataIndex: \"quantity_of_product_per_sheet\",\r\n      key: \"quantity_of_product_per_sheet\",\r\n    },\r\n    {\r\n      title: \"QTY per sheet\",\r\n      key: \"qty_per_sheet\",\r\n      render: (text, record, index) => (\r\n        <>\r\n          <InputNumber\r\n            value={record.qty_per_sheet}\r\n            id={\"js-qty-sheet-\" + record.id}\r\n            min={0}\r\n            style={{ width: \"60px\" }}\r\n            onChange={(e) => qtyOnChange(e, index, record.id)}\r\n            className=\"mr-5\"\r\n            disabled={!canView(\"Update Product Qty Per Sheet\")}\r\n          />\r\n          {canView(\"Update Product Qty Per Sheet\") ? (\r\n            <EditOutlined onClick={() => updateQtySheet(record, index)} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      ),\r\n      width: 120,\r\n    },\r\n    {\r\n      title: \"Weight Standard (g)\",\r\n      dataIndex: \"weight\",\r\n      key: \"weight\",\r\n    },\r\n    {\r\n      title: \"Thickness(mm)\",\r\n      dataIndex: \"thickness\",\r\n      key: \"thickness\",\r\n    },\r\n  ];\r\n\r\n  const qtyOnChange = (val, index, recordId) => {\r\n    let idx = products.findIndex(pro => pro.id === recordId);\r\n    products[idx].qty_per_sheet = val;\r\n    setProducts([...products]);\r\n  }\r\n\r\n  const updateQtySheet = async (record, index) => {\r\n    let res = await postData(PRODUCT_QTY_SHEET_UPDATE, {\r\n      product_id: record.id,\r\n      qty_per_sheet: record.qty_per_sheet //parseInt(value) || 0,\r\n    });\r\n\r\n    if (res) {\r\n      alertPop(\"success\", res.data.message);\r\n      getProductExportData();\r\n    }\r\n  };\r\n\r\n  const getProductDetails = async (query = {}) => {\r\n      setIsLoading(true);\r\n    let res = await postData(PRODUCT_STOCK, query);\r\n\r\n    if (res) {\r\n      setProducts(res.data.data);\r\n\r\n      setIsLoading(false);\r\n      getProductExportData(query);\r\n    }\r\n  };\r\n\r\n  const getProductExportData = async (query) => {\r\n    let url = PRODUCT_STOCK_EXPORT;\r\n    if (query?.filter_by) url = url + \"?filter_by=\" + query?.filter_by;\r\n\r\n    let res = await getData(url);\r\n\r\n    if (res) {\r\n      setExportData(res?.data?.data || []);\r\n    }\r\n  };\r\n\r\n  const canView = (context) => {\r\n    return checkUserPermission(context, permissions);\r\n  };\r\n\r\n  const titleEnter = (e) => {\r\n    getProductDetails({ filter_by: e.target.value });\r\n  };\r\n\r\n  const titleChange = (e) => {\r\n    if (!e.target.value) getProductDetails({});\r\n  };\r\n\r\n  const runCommandNow = async () => {\r\n    let res = await postData(RUN_COMMAND_NOW, {\r\n      command: \"PRODUCT_STOCK\",\r\n    });\r\n\r\n    if (res) {\r\n      alertPop(\"success\", res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"rui-page-title\">\r\n        <div className=\"container-fluid\">\r\n          <h1>Product Stock</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"rui-page-content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"\">\r\n            <h3>Filter</h3>\r\n            <div className=\"row xs-gap mt-10 mb-30\">\r\n              <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                <Input\r\n                  size=\"large\"\r\n                  placeholder=\"Search\"\r\n                  allowClear={true}\r\n                  onPressEnter={titleEnter}\r\n                  onChange={titleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {canView(\"Product - Stock | Export\") ? (\r\n            <div className=\"float-right mb-20 pt-10\">\r\n              {/* <Button type=\"primary\" onClick={() => generateReport()} size=\"large\">Generate Report</Button> */}\r\n              <CSVLink\r\n                data={exportData}\r\n                headers={headers}\r\n                target=\"_blank\"\r\n                filename={`Product-Stock-${moment().format(\r\n                  \"YYYY-MM-DD--HH-mm-ss\"\r\n                )}.csv`}\r\n              >\r\n                <Button\r\n                  type=\"primary\"\r\n                  style={{ width: \"300px\" }}\r\n                  size=\"large\"\r\n                  className=\"btn-brand btn-block float-right mb-20\"\r\n                >\r\n                  Generate Report\r\n                </Button>\r\n              </CSVLink>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {canView(\"Run Command Now\") ? (\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              onClick={() => runCommandNow()}\r\n              className=\"float-right mb-20 mt-10 px-20 mr-20\"\r\n            >\r\n              <UndoOutlined style={{ height: \"10px\" }} />\r\n            </Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n            {\r\n                isLoading ? <div className=\"loading-content\">\r\n                <Spin size=\"large\" className=\"mr-20\" />\r\n                <Spin size=\"large\" className=\"mr-20\"/>\r\n                <Spin size=\"large\" className=\"mr-20\"/>\r\n            </div> : <Table dataSource={products} columns={columns} />\r\n            }\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Product-Order\\index.js",["265","266"],"E:\\react\\canpac\\src\\pages\\private\\Order-Draft\\index.js",["267","268","269","270","271","272"],"E:\\react\\canpac\\src\\pages\\private\\Produect-Details\\index.js",["273","274","275"],"import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport { Select, Form, Button, InputNumber, Timeline   } from 'antd';\r\nimport { ClockCircleOutlined } from '@ant-design/icons';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport ReactQuill from 'react-quill';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { DROPDOWN_LIST, ORDER_VIEW, ORDER_UPDATE, ORDER_EMAIL } from '../../../scripts/api';\r\nimport { alertPop, checkUserPermission} from '../../../scripts/helper';\r\nimport { authContext } from '../../../context/AuthContext';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function ProductDetails() {\r\n    const { permissions } = useContext(authContext);\r\n    const [form] = Form.useForm();\r\n    let { orderId } = useParams();\r\n    const [order, setOrder] = useState();\r\n    const [orderStatus, setOrderStatus] = useState();\r\n    const [mailText, setMailText] = useState();\r\n\r\n    const canView = (context) => {\r\n        return checkUserPermission(context, permissions);\r\n    };\r\n\r\n    const onFinish = async (values) => {\r\n        let data = values;\r\n        data.id = orderId;\r\n\r\n        let res = await postData(ORDER_UPDATE, data);\r\n        if (res) {\r\n            alertPop('success', \"Updated Successfully!\");\r\n        }\r\n    };\r\n\r\n    const quillChange = (value) => {\r\n        setMailText(value);\r\n    }\r\n\r\n    const getOrderDetails = async () => {\r\n        let res = await postData(ORDER_VIEW, {\r\n            id: orderId\r\n        });\r\n\r\n        if (res) {\r\n            let masterData = res.data.data;\r\n            setOrder(masterData);\r\n            form.setFieldsValue({\r\n                status: masterData.status * 1,\r\n                ordered_quantity: masterData.ordered_quantity,\r\n            });\r\n        }\r\n    }\r\n\r\n    const getOrderStatus = async () => {\r\n        let res = await postData(DROPDOWN_LIST, {\r\n            data_type: \"order_status\"\r\n        });\r\n\r\n        if (res) setOrderStatus(res.data.data)\r\n    }\r\n\r\n    const sendMail = async () => {\r\n        let data = {\r\n            id: orderId,\r\n            text: mailText\r\n        };\r\n\r\n        let res = await postData(ORDER_EMAIL, data);\r\n        if (res) {\r\n            alertPop('success', \"Sended Successfully!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrderDetails();\r\n        getOrderStatus();\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Order Details</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"Order-info\">\r\n                        <h4><strong>Order ID: </strong>{order?.sap_order_id || 'N/A'}</h4>\r\n                        <h4><strong>Product: </strong>{order?.product?.product_name}</h4>\r\n                        <h4><strong>Order Quantity: </strong>{order?.ordered_quantity}</h4>\r\n                        <h4><strong>Remaining Quantity: </strong>{order?.remaining_quantity}</h4>\r\n                        <h4><strong>Status: </strong>{order?.status_title}</h4>\r\n                        <h4><strong>Customer Name: </strong>{order?.merchant?.name}</h4>\r\n                    </div>\r\n\r\n                    {/* { */}\r\n                        {/* // canView('Product - Delivery | Update') ? <Fragment> */}\r\n                            <hr/>\r\n\r\n                            <div className=\"row\">\r\n                                {\r\n                                    canView('Product - Delivery | Update') ? <div className=\"col col-sm-12 col-lg-6 mb-10\">\r\n                                        <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                                            form={form}\r\n                                            layout={'vertical'}\r\n                                            onFinish={onFinish}\r\n                                            >\r\n                                            <Form.Item\r\n                                                label=\"Update Status\"\r\n                                                name=\"status\"\r\n                                                rules={[{ required: true, message: 'Please input status!' }]}\r\n                                            >\r\n                                                <Select\r\n                                                    size=\"large\"\r\n                                                    showSearch\r\n                                                    placeholder=\"Process\"\r\n                                                    optionFilterProp=\"children\"\r\n                                                    filterOption={(input, option) =>\r\n                                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                    }\r\n                                                >\r\n                                                    {\r\n                                                        orderStatus?.length && orderStatus.map(status => <Option value={status.value} key={status.value}>{status.title}</Option>)\r\n                                                    }\r\n                                                </Select>\r\n                                            </Form.Item>\r\n\r\n                                            <Form.Item\r\n                                                label=\"Delevary Quantity\"\r\n                                                name=\"delivered_quantity\"\r\n                                                rules={[{ required: true, message: 'Please input quantity!' }]}\r\n                                            >\r\n                                                <InputNumber placeholder=\"Select Quantity\" size=\"large\" min={1} max={order?.ordered_quantity}  style={{width: \"100%\"}}/>\r\n                                            </Form.Item>\r\n\r\n                                            <Form.Item>\r\n                                                <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                                Update Order\r\n                                                </Button>\r\n                                            </Form.Item>\r\n                                        </Form>\r\n                                    </div> \r\n                                    : ''\r\n                                }\r\n                                \r\n                                {\r\n                                    canView(\"Order - Details | E-mail Send\") ? <div className=\"col col-sm-12 col-lg-6 mb-10\">\r\n                                        <ReactQuill  onChange={quillChange} style={{height: \"150px\"}}/>\r\n\r\n                                        <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" onClick={() => sendMail()}\r\n                                            style={{width: \"100%\", marginTop: \"6rem\"}} >\r\n                                            Send\r\n                                        </Button>\r\n                                    </div> : ''\r\n                                }\r\n                                \r\n                            </div>\r\n\r\n                        {/* // </Fragment> : '' */}\r\n                    {/* } */}\r\n                    \r\n                    <hr/>\r\n\r\n                    {\r\n                        canView(\"Order - Details | History\") ? <div className=\"order-history mt-50\">\r\n                            <h3 className=\"text-center\">Order Histoy</h3>\r\n\r\n                            <Timeline mode=\"alternate\">\r\n                                {\r\n                                    order?.history?.length && order.history.map((his, index) => {\r\n                                        return (\r\n                                            index % 2 == 0 \r\n                                            ? <Timeline.Item \r\n                                                position='left'>\r\n                                                    {his.description_en}\r\n                                                </Timeline.Item> :\r\n                                                <Timeline.Item color=\"green\" \r\n                                                position='right'>\r\n                                                    {his.description_en}\r\n                                                </Timeline.Item>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Timeline>\r\n                        </div> : ''\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Low-stock\\index.js",["276","277"],"import React, { Fragment, useEffect, useState, useContext } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Button, Input, Spin } from 'antd';\r\nimport { getData, postData } from '../../../scripts/api-service';\r\nimport { PRODUCT_STOCK_LOW, PRODUCT_STOCK_LOW_EXPORT, RUN_COMMAND_NOW } from '../../../scripts/api';\r\nimport { checkUserPermission, alertPop } from '../../../scripts/helper';\r\nimport { authContext } from '../../../context/AuthContext';\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from 'moment';\r\nimport { UndoOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst headers = [\r\n  { label: \"Product Code of SAP\", key: \"ItemCode\" },\r\n  { label: \"Product name\", key: \"Itemname\" },\r\n  { label: \"Low Stock\", key: \"Low Stock\" },\r\n];\r\n\r\nexport default function LowStock() {\r\n  const [products, setProducts] = useState();\r\n  const { permissions } = useContext(authContext);\r\n  const [exportData, setExportData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Product Name',\r\n      dataIndex: 'product',\r\n      key: 'id',\r\n      render: (record) => <>\r\n        {record?.product_display_name}\r\n      </>\r\n    },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Quantity (can)',\r\n      dataIndex: 'low_stock',\r\n      key: 'low_stock',\r\n    }\r\n  ];\r\n\r\n  const canView = (context) => {\r\n    return checkUserPermission(context, permissions);\r\n  };\r\n\r\n  const getProducts = async (query = {}) => {\r\n    setIsLoading(true);\r\n    let res = await postData(PRODUCT_STOCK_LOW, query);\r\n\r\n    if (res) {\r\n      setProducts(res.data.data);\r\n      setIsLoading(false)\r\n      getProductLowExportData(query);\r\n    }\r\n  }\r\n\r\n  const getProductLowExportData = async (query) => {\r\n    let url = PRODUCT_STOCK_LOW_EXPORT;\r\n    if (query?.filter_by) url = url + '?filter_by=' + query?.filter_by;\r\n\r\n    let res = await getData(url);\r\n\r\n    if (res) {\r\n      console.log(\"res?.data?.data\", res?.data?.data);\r\n\r\n      setExportData(res?.data?.data || []);\r\n    }\r\n  };\r\n\r\n  const titleEnter = (e) => {\r\n    getProducts({ filter_by: e.target.value });\r\n  }\r\n\r\n  const titleChange = (e) => {\r\n    if (!e.target.value) getProducts({});\r\n  }\r\n\r\n  const runCommandNow = async () => {\r\n    let res = await postData(RUN_COMMAND_NOW, {\r\n        command: \"LOW_STOCK\"\r\n    });\r\n\r\n    if (res) {\r\n        alertPop('success', res.data.message);\r\n    }\r\n}\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"rui-page-title\">\r\n        <div className=\"container-fluid\">\r\n          <h1>Low Stock</h1>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"rui-page-content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"\">\r\n            <h3>Filter</h3>\r\n            <div className=\"row xs-gap mt-10 mb-30\">\r\n              <div className=\"col  col-sm-12 col-lg-3 mb-10\">\r\n                <Input size=\"large\" placeholder=\"Title\" allowClear={true}\r\n                  onPressEnter={titleEnter} onChange={titleChange} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {\r\n            canView('Product - Low Stock | Export') ? <div className=\"float-right mb-20 pt-10\">\r\n              {/* <Button type=\"primary\" onClick={() => generateReport()} size=\"large\">Generate Report</Button> */}\r\n              <CSVLink data={exportData} headers={headers} target=\"_blank\" filename={`Product-low-Stock-${moment().format('YYYY-MM-DD--HH-mm-ss')}.csv`}>\r\n                <Button type=\"primary\" style={{ width: \"300px\" }} size=\"large\" className=\"btn-brand btn-block float-right mb-20\">\r\n                  Generate Report\r\n                </Button>\r\n              </CSVLink>\r\n            </div> : ''\r\n          }\r\n          {\r\n            canView('Run Command Now') ? <Button type=\"primary\" size=\"large\" onClick={() => runCommandNow()}\r\n              className='float-right mb-20 mt-10 px-20 mr-20'><UndoOutlined style={{ height: \"10px\" }} /></Button> : ''\r\n          }\r\n\r\n          {/* <Table dataSource={products} columns={columns} /> */}\r\n\r\n          {\r\n                isLoading ? <div className=\"loading-content\">\r\n                <Spin size=\"large\" className=\"mr-20\" />\r\n                <Spin size=\"large\" className=\"mr-20\"/>\r\n                <Spin size=\"large\" className=\"mr-20\"/>\r\n            </div> : <Table dataSource={products} columns={columns} />\r\n            }\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Product-Delivery\\index.js",["278"],"E:\\react\\canpac\\src\\pages\\private\\users\\index.js",["279","280","281","282","283","284","285"],"E:\\react\\canpac\\src\\pages\\private\\Merchents\\index.js",["286","287","288","289"],"E:\\react\\canpac\\src\\pages\\private\\Permissions\\index.js",["290","291","292"],"E:\\react\\canpac\\src\\pages\\private\\Roles\\index.js",["293","294","295"],"E:\\react\\canpac\\src\\pages\\private\\Roles\\Create-Role.js",["296","297","298"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport {Table, Space, Select, Form, Button, Input, Checkbox , Row, Col } from 'antd';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { PERMISSION_LIST, ROLE_CREATE } from '../../../scripts/api';\r\nimport { alertPop } from '../../../scripts/helper';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function CreateRole() {\r\n    const history = useHistory();\r\n    const [permissions, setPermissions] = useState([]);\r\n\r\n    const onFinish = async (values) => {\r\n        let {name, permissions} = values;\r\n\r\n        let data = {\r\n            name: name,\r\n            permissions: JSON.stringify(permissions)\r\n        }\r\n\r\n        let res = await postData(ROLE_CREATE, data);\r\n        if (res) {\r\n            alertPop('success', \"Role Created Successfully!\");\r\n            history.push('/roles');\r\n        }\r\n    };\r\n\r\n    const getPermissions = async () => {\r\n        let res = await postData(PERMISSION_LIST, {});\r\n        if (res) setPermissions(res.data.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPermissions()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Create Role</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\"}}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                        >\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col  col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    rules={[{ required: true, message: 'Please input role name' }]}\r\n                                >\r\n                                    <Input size=\"large\" placeholder=\"Name\" />   \r\n                                </Form.Item>\r\n                            </div>\r\n\r\n                            <div className=\"col col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item\r\n                                    label=\"Permissions\"\r\n                                    name=\"permissions\"\r\n                                    rules={[{ required: true, message: \"Required*\" }]}\r\n                                >\r\n                                    <Checkbox.Group style={{ width: '100%', height: \"350px\", \"overflowY\": \"scroll\" }}>\r\n                                        <Row>\r\n                                            {\r\n                                                permissions.length && permissions.map(per => <Col span={24}>\r\n                                                    <Checkbox value={per.id} key={per.id}>{per.name}</Checkbox>\r\n                                                </Col>)\r\n                                            }\r\n                                        </Row>\r\n                                    </Checkbox.Group>  \r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col  col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block float-right\" size=\"large\" \r\n                                        type=\"primary\" htmlType=\"submit\">\r\n                                        Create Role\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\scripts\\api.js",[],"E:\\react\\canpac\\src\\scripts\\api-service.js",["299","300"],"import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {checkRes, alertPop} from \"./helper\";\r\nimport i18n from 'i18next'\r\n\r\nconst base_url = process.env.REACT_APP_BASE;\r\nconst token = Cookies.get(\"canpacToken\") || \"\";\r\n\r\naxios.defaults.headers.post['Accept'] = 'application/json';\r\n\r\nconst alert = (messages) => {\r\n  alertPop(\"error\", messages ? messages : \"Something went wrong\");\r\n};\r\n\r\n/* query ---> api url to query with\r\n   no_token ---> acts as a flag for no need to use token */\r\nexport const getData = async (query, no_token) => {\r\n  try {\r\n    let data = await axios.get(`${base_url}${query}`, {\r\n      headers: no_token ? {} : {\r\n        'Authorization': `Bearer ${token}`,\r\n        \"lang\": i18n?.language || 'en',\r\n        \"responseType\": \"arraybuffer\"\r\n      },\r\n    });\r\n    return data;\r\n    // if (checkRes(data.status)) {\r\n    //     // setUserProfile();\r\n    //     return data;\r\n    // } else {\r\n    //     toast.error(msg_undefined);\r\n    // }\r\n  } catch (error) {\r\n    // checkRes(error?.response?.status);\r\n    // error.response?.data?.messages &&\r\n    // typeof error.response?.data?.messages === \"object\"\r\n    // ? error.response.data.messages.map((err) => {\r\n    //     alertPop(error_status, err);\r\n    //     })\r\n    // : errorHandle(error);\r\n    // return false;\r\n  }\r\n};\r\n\r\n/* query ---> api url to query with\r\n     data ---> data to be posted\r\n     no_token ---> acts as a flag for no need to use token */\r\nexport const postData = async (query, data, no_token) => {\r\n  try {\r\n    let res = await axios({\r\n      method: \"post\",\r\n      url: `${base_url}${query}`,\r\n      headers: no_token ? {} : {\r\n            'Authorization': `Bearer ${token}`,\r\n            \"lang\": i18n?.language || 'en'\r\n          },\r\n      data: data,\r\n    });\r\n    if (checkRes(res?.data.code)) {\r\n      return res;\r\n    } else {\r\n      alert(res?.data?.message);\r\n      \r\n      if (res?.data?.errors && Object.keys(res.data.errors).length !== 0) {\r\n        let error = res.data.errors;\r\n\r\n        for (const prop in error) {\r\n          if (error[prop][0]) alert(error[prop][0])\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    checkRes(error?.response?.status);\r\n    Array.isArray(error?.response?.data?.messages)\r\n      ? error.response.data.messages.map((err) => {\r\n          alertPop(\"error\", err);\r\n          console.log(\"err\", err);\r\n        })\r\n      : console.log(\"error\", error); //errorHandle(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const putData = async (query, data, no_token) => {\r\n  try {\r\n    console.log(`${base_url}${query}`);\r\n    let res = await axios({\r\n      method: \"put\",\r\n      url: `${base_url}${query}`,\r\n      headers: no_token\r\n        ? {}\r\n        : {\r\n            'x-auth-token': `${token}`,\r\n          },\r\n      data: data,\r\n    });\r\n\r\n    return res;\r\n    // if (checkRes(res?.data.status)) {\r\n    //     // setUserProfile();\r\n    //     return res;\r\n    // } else {\r\n    //     toast.error(msg_undefined);\r\n    // }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    // checkRes(error.response.status);\r\n    // error.response && error.response.data && error.response.data.messages\r\n    //   ? error.response.data.messages.map((err) => {\r\n    //       // alertPop(error_status, err);\r\n    //       console.log(\"err\", err);\r\n    //     })\r\n    //   : console.log(\"error\", error); //errorHandle(error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// const setUserProfile = async () => {\r\n//   try {\r\n//     let res = await axios({\r\n//       method: \"post\",\r\n//       url: `${base_url}${ME}`,\r\n//       headers: {\r\n//         Authorization: `bearer ${token}`,\r\n//       },\r\n//       data: {},\r\n//     });\r\n\r\n//     if (res?.data?.status_code && checkRes(res.data.status_code)) {\r\n//       window.localStorage.setItem(\"profile\", JSON.stringify(res.data));\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(\"error\", error);\r\n//   }\r\n// };\r\n\r\nexport const deleteData = async (query, no_token) => {\r\n  try {\r\n    let data = await axios.delete(`${base_url}${query}`, {\r\n      headers: no_token\r\n        ? {}\r\n        : {\r\n          'x-auth-token': `${token}`,\r\n          },\r\n    });\r\n    return data;\r\n    // if (checkRes(data.status)) {\r\n    //     // setUserProfile();\r\n    //     return data;\r\n    // } else {\r\n    //     toast.error(msg_undefined);\r\n    // }\r\n  } catch (error) {\r\n    // checkRes(error?.response?.status);\r\n    // error.response?.data?.messages &&\r\n    // typeof error.response?.data?.messages === \"object\"\r\n    // ? error.response.data.messages.map((err) => {\r\n    //     alertPop(error_status, err);\r\n    //     })\r\n    // : errorHandle(error);\r\n    // return false;\r\n  }\r\n};\r\n\r\n\r\nexport const postDataProfile = async (query, data, token) => {\r\n  try {\r\n    let res = await axios({\r\n      method: \"post\",\r\n      url: `${base_url}${query}`,\r\n      headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            \"lang\": i18n?.language || 'en'\r\n          },\r\n      data: data,\r\n    });\r\n    if (checkRes(res?.data.code)) {\r\n      return res;\r\n    } else {\r\n      alert(res?.data?.message);\r\n      \r\n      if (res?.data?.errors && Object.keys(res.data.errors).length !== 0) {\r\n        let error = res.data.errors;\r\n\r\n        for (const prop in error) {\r\n          if (error[prop][0]) alert(error[prop][0])\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    checkRes(error?.response?.status);\r\n    Array.isArray(error?.response?.data?.messages)\r\n      ? error.response.data.messages.map((err) => {\r\n          alertPop(\"error\", err);\r\n          console.log(\"err\", err);\r\n        })\r\n      : console.log(\"error\", error); //errorHandle(error);\r\n    return false;\r\n  }\r\n};\r\n","E:\\react\\canpac\\src\\scripts\\helper.js",[],"E:\\react\\canpac\\src\\context\\AuthContext.js",["301"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { USER_PROFILE, ROLE_LIST } from \"../scripts/api\";\r\nimport { postData } from '../scripts/api-service';\r\n\r\nexport const authContext = createContext();\r\n\r\nconst AuthContext = props => {\r\n    const [user, setUser] = useState();\r\n    const [permissions, setPermissions] = useState();\r\n\r\n    useEffect(() => {\r\n        setUser();\r\n    }, []);\r\n\r\n    const setUserInfo = async () => {\r\n        let res = await postData(USER_PROFILE, {});\r\n        if (res) {\r\n            let masterData = res?.data?.data;\r\n            setUser(masterData);\r\n            setPermissions(masterData?.roles[0].permissions);\r\n            localStorage.setItem(\"canpacPermissions\", JSON.stringify(masterData?.roles[0].permissions));\r\n        }\r\n    }\r\n\r\n    const getUserInfo = () => {\r\n        return user;\r\n    }\r\n\r\n    const DeleteUserInfo = () => {\r\n        setUser(null);\r\n    }\r\n\r\n    return (\r\n        <authContext.Provider\r\n            value={{\r\n                user,\r\n                setUserInfo,\r\n                getUserInfo,\r\n                DeleteUserInfo,\r\n                permissions\r\n            }}>\r\n            {props.children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext;\r\n","E:\\react\\canpac\\src\\pages\\private\\Report\\WeeklyReport.js",["302","303","304","305","306","307","308","309","310","311","312","313","314","315","316"],"E:\\react\\canpac\\src\\pages\\private\\Roles\\Update-role.js",["317","318","319","320","321","322"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport {Table, Space, Select, Form, Button, Input, Checkbox , Row, Col } from 'antd';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { PERMISSION_LIST, ROLE_UPDATE, ROLE_LIST } from '../../../scripts/api';\r\nimport { alertPop } from '../../../scripts/helper';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport default function UpdateRole() {\r\n    const formRef = React.createRef();\r\n    const history = useHistory();\r\n    let { roleId } = useParams();\r\n    const [permissions, setPermissions] = useState([]);\r\n    const [role, setRole] = useState();\r\n\r\n    const onFinish = async (values) => {\r\n        let {name, permissions} = values;\r\n\r\n        let data = {\r\n            id: roleId,\r\n            name: name,\r\n            permissions: JSON.stringify(permissions)\r\n        }\r\n\r\n        console.log(\"permissions\", permissions);\r\n\r\n        let res = await postData(ROLE_UPDATE, data);\r\n        if (res) {\r\n            alertPop('success', \"Role Updated Successfully!\");\r\n            history.push('/roles');\r\n        }\r\n    };\r\n\r\n    const getPermissions = async () => {\r\n        let res = await postData(PERMISSION_LIST, {});\r\n        if (res) setPermissions(res.data.data);\r\n    }\r\n\r\n    const getRoles = async () => {\r\n        let res = await postData(ROLE_LIST, {});\r\n\r\n        if (res) {\r\n            let masterData = res?.data?.data || [];\r\n            let role = masterData.find(e => e.id == roleId);\r\n            setRole(role);\r\n        }\r\n    }\r\n\r\n    const onFill = () => {\r\n        formRef.current.setFieldsValue({\r\n            name: role?.name,\r\n            permissions: role.permissions.map(e => e.id),\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPermissions();\r\n        getRoles();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (role) onFill()\r\n    }, [role])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Update Role</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\"}}\r\n                        ref={formRef}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                        >\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col  col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    rules={[{ required: true, message: 'Please input role name' }]}\r\n                                >\r\n                                    <Input size=\"large\" placeholder=\"Name\" />   \r\n                                </Form.Item>\r\n                            </div>\r\n\r\n                            <div className=\"col col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item\r\n                                    label=\"Permissions\"\r\n                                    name=\"permissions\"\r\n                                    rules={[{ required: false }]}\r\n                                >\r\n                                    <Checkbox.Group style={{ width: '100%', height: \"350px\", \"overflowY\": \"scroll\" }}>\r\n                                        <Row>\r\n                                            {\r\n                                                permissions.length && permissions.map(per => <Col span={24}>\r\n                                                    <Checkbox value={per.id} key={per.id}>{per.name}</Checkbox>\r\n                                                </Col>)\r\n                                            }\r\n                                        </Row>\r\n                                    </Checkbox.Group>  \r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col  col-sm-12 col-lg-6 mb-10\">\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block float-right\" size=\"large\" \r\n                                        type=\"primary\" htmlType=\"submit\">\r\n                                        Update Role\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\users\\CreateUser.js",["323","324","325","326","327","328","329","330","331","332","333"],"E:\\react\\canpac\\src\\pages\\private\\users\\UpdateUser.js",["334","335","336","337","338","339","340","341","342","343","344","345","346","347","348"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Form, Input, Button, Upload, Select } from \"antd\";\r\nimport { alertPop, getBase64 } from '../../../scripts/helper';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { ROLE_LIST, USER_CREATE, DROPDOWN_LIST, USER_LIST, USER_UPDATE } from '../../../scripts/api';\r\nimport demo from \"../../../assets/images/avatar-1.png\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function UpdateUser() {\r\n    const history = useHistory();\r\n    let { userId } = useParams();\r\n    const [form] = Form.useForm();\r\n    const [file, setfile] = useState();\r\n    const [imageBase64, setImageBase64] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const [ userInfo, setUserInfo ] = useState();\r\n\r\n\r\n    const profilePreview = async ({file}) => {\r\n        setfile(file.originFileObj);\r\n        let preview = await getBase64(file.originFileObj);\r\n        setImageBase64(preview);\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        console.log(\"value\", values);\r\n        let data = new FormData();\r\n        \r\n        if (file) data.append('image', file); \r\n        data.append('name', values.name);\r\n        data.append('email', values.email); \r\n        data.append('phone', values.phone); \r\n        data.append('company_name', values.company_name); \r\n        data.append('role', values.role);\r\n\r\n        data.append('id', userId);\r\n\r\n        let res = await postData(USER_UPDATE, data);\r\n\r\n        if (res) {\r\n            alertPop('success', \"User Updated Successfully!\");\r\n            history.push('/users');\r\n        }\r\n    };\r\n\r\n    const getRoles = async () => {\r\n        let res = await postData(DROPDOWN_LIST, {\r\n            data_type: \"role\"\r\n        });\r\n        \r\n        if (res) {\r\n            let masterData = res.data.data.filter(val => (val.name !== 'Merchant' && val.name !== \"Premium Merchant\"));\r\n            setRoles(masterData);\r\n        }\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        let res = await postData(USER_LIST, {});\r\n\r\n        if (res) {\r\n            let masterData = res.data.data || [];\r\n            let user = masterData.find(use => use.id == userId);\r\n            setUserInfo(user);\r\n            form.setFieldsValue({\r\n                company_name: user.company_name,\r\n                email: user.email,\r\n                name: user.name,\r\n                phone: user.phone,\r\n                email: user.email,\r\n                role: user.roles[0].name,\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRoles();\r\n        getUsers()\r\n    }, [])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Update User</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                        form={form}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[{ required: true, message: 'Please Input Your Name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Name\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: 'Please input email!' },\r\n                                                {\r\n                                                    pattern: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n                                                    message: \"Please enter a valid email address\",\r\n                                            }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Email\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        rules={[{ required: true, message: 'Please input phone!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Phone\" />\r\n                                    </Form.Item>\r\n                                    \r\n                                    <Form.Item\r\n                                        label=\"Company Name\"\r\n                                        name=\"company_name\"\r\n                                        rules={[{ required: false, message: 'Please input company name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Company Name\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                            label=\"Role\"\r\n                                            name=\"role\"\r\n                                            rules={[{ required: true, message: 'Please input company name!' }]}\r\n                                        >\r\n                                            <Select\r\n                                                size=\"large\"\r\n                                                showSearch\r\n                                                placeholder=\"Select a role\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {roles && roles.map(per => <Option key={per.id} value={per.name}>{per.name}</Option>)}\r\n                                            </Select>\r\n                                    </Form.Item>\r\n                                    <hr/>\r\n\r\n                                    <div className=\"rui-profile mt-10\">\r\n                                        <div className=\"rui-profile-img m-auto\">\r\n                                            <img src={ imageBase64 ? imageBase64 : userInfo?.thumb_image_url ? userInfo?.thumb_image_url : demo} alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-center mt-5\">\r\n                                        <Upload accept=\"image/*\" onChange={profilePreview}>\r\n                                            <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n                                        </Upload>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                        Update\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"col-sm\"></div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Merchents\\UpdateMarchent.js",["349","350","351","352","353","354","355","356"],"import React, { Fragment, useEffect, useState, useContext } from 'react'\r\nimport { Form, Input, Button, Upload, Select, Card,Row, Col } from \"antd\";\r\nimport { alertPop, getBase64, checkUserPermission } from '../../../scripts/helper';\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { MERCHENT_LIST, MARCHENT_PRODUCT_MODEL, ROLE_LIST, USER_CREATE, USER_LIST, MERCHENT_UPDATE } from '../../../scripts/api';\r\nimport demo from \"../../../assets/images/avatar-1.png\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { authContext } from '../../../context/AuthContext';\r\n\r\nconst { Option } = Select;\r\nconst style = { padding: '20px', \r\n    border: \"1px solid #ccc\",\r\n    borderRadius: '5px',\r\n    marginBottom: '10px'\r\n};\r\nexport default function UpdateMarchent() {\r\n    const { permissions } = useContext(authContext);\r\n    const history = useHistory();\r\n    let { marchentId } = useParams();\r\n    const [form] = Form.useForm();\r\n    const [file, setfile] = useState();\r\n    const [imageBase64, setImageBase64] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const [ userInfo, setUserInfo ] = useState();\r\n    const [selectedRole, setSelectedRole] = useState('Merchant');\r\n    const [marchentProducts, setMarchentProducts] = useState([]);\r\n\r\n\r\n    const profilePreview = async ({file}) => {\r\n        setfile(file.originFileObj);\r\n        let preview = await getBase64(file.originFileObj);\r\n        setImageBase64(preview);\r\n    };\r\n\r\n    const canView = (context) => {\r\n        return checkUserPermission(context, permissions);\r\n    };\r\n\r\n    const onFinish = async (values) => {\r\n        let data = new FormData();\r\n        \r\n        if (file) data.append('image', file); \r\n        data.append('name', values.name);\r\n        data.append('email', values.email); \r\n        data.append('phone', values.phone); \r\n        data.append('company_name', values.company_name); \r\n        data.append('role', values.role);\r\n        data.append('sap_id', values.sap_id);\r\n\r\n        data.append('id', marchentId);\r\n\r\n        let res = await postData(MERCHENT_UPDATE, data);\r\n\r\n        if (res) {\r\n            alertPop('success', \"Marchent Updated Successfully!\");\r\n            history.push('/merchents');\r\n        }\r\n    };\r\n\r\n    const getMerchentss = async () => {\r\n        let res = await postData(MERCHENT_LIST, {});\r\n\r\n        if (res) {\r\n            let masterData = res.data.data || [];\r\n            let user = masterData.find(use => use.id == marchentId);\r\n            if (user) {\r\n                setUserInfo(user);\r\n\r\n                form.setFieldsValue({\r\n                    company_name: user.company_name,\r\n                    email: user.email,\r\n                    name: user.name,\r\n                    phone: user.phone,\r\n                    email: user.email,\r\n                    role: user.roles[0].name,\r\n                    sap_id: user.sap_id\r\n                });\r\n\r\n                setSelectedRole(user.roles[0].name);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getMarchentProiductModel = async () => {\r\n        let res = await postData(MARCHENT_PRODUCT_MODEL, {\r\n            merchant_id: marchentId\r\n        });\r\n\r\n        if (res) {\r\n            let masterData = res.data.data || [];\r\n            setMarchentProducts(masterData);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMerchentss();\r\n        if (canView(\"Merchant - Mapped Products\")) getMarchentProiductModel()\r\n    }, [])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Update Merchant</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"rui-page-content\">\r\n                <div className=\"container-fluid\">\r\n                    <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                        form={form}\r\n                        layout={'vertical'}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        rules={[{ required: true, message: 'Please Input Your Name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Name\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        rules={[{ required: true, message: 'Please input email!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Email\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        rules={[{ required: true, message: 'Please input phone!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Phone\" />\r\n                                    </Form.Item>\r\n                                    \r\n                                    <Form.Item\r\n                                        label=\"Company Name\"\r\n                                        name=\"company_name\"\r\n                                        rules={[{ required: true, message: 'Please input company name!' }]}\r\n                                    >\r\n                                        <Input size=\"large\" placeholder=\"Enter Company Name\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"bg-grey-1 pt-15 pr-20 pb-15 pl-20 br-4\">\r\n                                    <Form.Item\r\n                                            label=\"Role\"\r\n                                            name=\"role\"\r\n                                            rules={[{ required: true, message: 'Please input company name!' }]}\r\n                                        >\r\n                                            <Select\r\n                                                size=\"large\"\r\n                                                showSearch\r\n                                                placeholder=\"Select a role\"\r\n                                                optionFilterProp=\"children\"\r\n                                                onChange={(e) => setSelectedRole(e)}\r\n                                                filterOption={(input, option) =>\r\n                                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                <Option key={1} value=\"Merchant\">Merchant</Option>\r\n                                                <Option key={2} value=\"Premium Merchant\">Premium Merchant</Option>\r\n                                            </Select>\r\n                                    </Form.Item>\r\n                                    \r\n                                    {\r\n                                        selectedRole === 'Premium Merchant' ? <Form.Item\r\n                                            label=\"SAP Id\"\r\n                                            name=\"sap_id\"\r\n                                            rules={[{ required: true, message: 'Please input SAP Id!' }]}\r\n                                        >\r\n                                            <Input size=\"large\" placeholder=\"Enter SAP Id\" />\r\n                                        </Form.Item> : ''\r\n                                    }\r\n                                    \r\n                                    <hr/>\r\n\r\n                                    <div className=\"rui-profile mt-10\">\r\n                                        <div className=\"rui-profile-img m-auto\">\r\n                                            <img src={ imageBase64 ? imageBase64 : userInfo?.thumb_image_url ? userInfo?.thumb_image_url : demo} alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-center mt-5\">\r\n                                        <Upload accept=\"image/*\" onChange={profilePreview}>\r\n                                            <Button icon={<UploadOutlined />}>Upload Image</Button>\r\n                                        </Upload>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row xs-gap\">\r\n                            <div className=\"col-sm\">\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                        Update\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"col-sm\"></div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n               selectedRole === \"Premium Merchant\" ? <div className='mb-5'>\r\n                    {\r\n                        marchentProducts?.length ? <Card title=\"Product Model\" className='marchent-model'>\r\n                            <Row gutter={{ xs: 8, sm: 16, md: 24}}>\r\n                                {\r\n                                    marchentProducts.map(product => <Col className=\"gutter-row\" span={6} key={\"product43-\" + product.product_id}>\r\n                                        <div style={style}>\r\n                                            {product.product.product_display_name}\r\n                                        </div>\r\n                                    </Col>)\r\n                                }\r\n                            </Row>\r\n                            {/* {\r\n                                marchentProducts.map(product => {\r\n                                    return <Card.Grid hoverable={false} style={gridStyle} key={\"product43-\" + product.product_id}>\r\n                                        {product.product.product_display_name}\r\n                                    </Card.Grid>\r\n                                })\r\n                            } */}\r\n                        </Card> : ''\r\n                    }\r\n                    <Card>\r\n                        <Row justify=\"end\">\r\n                            <Col span={4}>\r\n                                <Button type=\"primary\" size=\"large\">\r\n                                    <Link to={'/update-merchents-product-model/' + marchentId}>Assign Product Model</Link>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div> : ''\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Merchents\\CreateMarchent.js",["357"],"E:\\react\\canpac\\src\\pages\\Auth\\Forget-Password\\passwordSet.js",["358","359"],"import React, { Fragment, useState } from 'react'\r\nimport { Form, Input, Button } from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function passwordSet() {\r\n    const onFinish = async (values) => {\r\n        console.log('Success:', values);\r\n        // // setResetPassword(0);\r\n        // let res = await postData(FORGET_PASSWORD_EMAIL, values);\r\n\r\n        // if (res) {\r\n        //     setIsLoading(true);\r\n        // }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"rui-main\">\r\n            <div className=\"rui-sign align-items-center justify-content-center\">\r\n            <div className=\"bg-image\">\r\n                    <div className=\"bg-grey-1\" />\r\n                </div>\r\n                <div className=\"form rui-sign-form rui-sign-form-cloud\">\r\n                    <div className=\"row vertical-gap sm-gap justify-content-center\">\r\n                        <Fragment>\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"display-4 mb-10 text-center\">Reset Password</h1>\r\n                            </div>\r\n\r\n                            <Form style={{width: \"100%\", marginTop: \"2rem\"}}\r\n                                onFinish={onFinish}\r\n                                >\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                >\r\n                                    <Input.Password size=\"large\" placeholder=\"password\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                >\r\n                                    <Input.Password size=\"large\" placeholder=\"Confirm Password\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Button className=\"btn-brand btn-block\" size=\"large\" type=\"primary\" htmlType=\"submit\" style={{width: \"100%\", marginTop: \"1rem\"}} >\r\n                                        Save\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Fragment>\r\n\r\n                <div className=\"col-12\">\r\n                            {/* <div className=\"rui-sign-or\">or</div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"mt-20 text-grey-5\">\r\n                    Already have an account? <Link to=\"/auth/login\" className=\"text-2\">Sign In</Link>\r\n                    <br/>\r\n                    <h5 className=\"text-center mt-3 mb-3\">Or</h5>\r\n                    Don&apos;t you have an account? <Link to=\"/auth/signup\" className=\"text-2\">Sign Up</Link>\r\n                </div>*/}\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\Auth\\VerifyEmail\\index.js",["360"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport tick from \"../../../assets/images/progress-and-tick-icon-animation.gif\";\r\n\r\nexport default function VerifyEmail() {\r\n    return (\r\n        <div className=\"rui-main\">\r\n            <div className=\"rui-sign align-items-center justify-content-center\">\r\n            <div className=\"bg-image\">\r\n                    <div className=\"bg-grey-1\" />\r\n                </div>\r\n                <div className=\"form rui-sign-form rui-sign-form-cloud\">\r\n                    <div className=\"row vertical-gap sm-gap justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            <h1 className=\"display-4 mb-10 text-center\">Email Verified</h1>\r\n                            <hr/>\r\n                            <img src={tick} style={{width: \"100%\"}} />\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"rui-sign-or\">or</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-20 text-grey-5\">\r\n                    Move to <Link to=\"/auth/login\" className=\"text-2\">Sign In</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\i18n.js",[],"E:\\react\\canpac\\src\\pages\\private\\404.js",[],"E:\\react\\canpac\\src\\pages\\private\\Merchents\\addProductModel.js",["361","362","363"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Card, Checkbox, Button, Row, Col, Spin } from 'antd';\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { postData } from '../../../scripts/api-service';\r\nimport { DROPDOWN_LIST, MARCHENT_PRODUCT_MODEL, MARCHENT_PRODUCT_MODEL_ASSIGN } from '../../../scripts/api';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { alertPop } from '../../../scripts/helper';\r\n\r\nconst gridStyle = {\r\n    width: '25%',\r\n    textAlign: 'center',\r\n};\r\nconst style = {\r\n    padding: '20px',\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: '5px',\r\n    marginBottom: '10px'\r\n};\r\n\r\nexport default function AddProductModel() {\r\n    const history = useHistory();\r\n    let { marchentId } = useParams();\r\n    const [selectedModelIds, setSelectedModelIds] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n    const getMarchentProiductModel = async () => {\r\n        let res = await postData(MARCHENT_PRODUCT_MODEL, {\r\n            merchant_id: marchentId\r\n        });\r\n\r\n        if (res) {\r\n            let masterData = res.data.data || [];\r\n            let models = masterData.map(data => data?.product?.id);\r\n\r\n            setSelectedModelIds(models);\r\n        }\r\n    }\r\n\r\n    const getProductModelList = async () => {\r\n        setIsLoading(true);\r\n        let res = await postData(DROPDOWN_LIST, {\r\n            data_type: \"product_model\"\r\n        });\r\n\r\n        if (res) {\r\n            let masterData = res?.data?.data || [];\r\n            setProducts(masterData);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handelProduct = (modelId, checked) => {\r\n        if (checked) {\r\n            setSelectedModelIds(oldArray => [...oldArray, modelId]);\r\n        } else {\r\n            let filter = selectedModelIds.filter(i => i !== modelId);\r\n            setSelectedModelIds(filter);\r\n        }\r\n    };\r\n\r\n    const isCheckedModel = (pro) => {\r\n        let fIndex = selectedModelIds.findIndex(mod => mod === pro.id);\r\n\r\n        if (fIndex !== -1) return true\r\n        else return false;\r\n    }\r\n\r\n    const assignModel = async () => {\r\n        let res = await postData(MARCHENT_PRODUCT_MODEL_ASSIGN, {\r\n            merchant_id: marchentId * 1,\r\n            product_models: JSON.stringify(selectedModelIds)\r\n        });\r\n\r\n        if (res) {\r\n            alertPop('success', \"Marchent Product Model Added Successfully!\");\r\n            history.push('/update-merchents/' + marchentId);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMarchentProiductModel();\r\n        getProductModelList()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"rui-page-title\">\r\n                <div className=\"container-fluid\">\r\n                    <h1>Assign Product Model</h1>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                isLoading ? <div className=\"loading-content\">\r\n                    <Spin size=\"large\" className=\"mr-20\" />\r\n                    <Spin size=\"large\" className=\"mr-20\" />\r\n                    <Spin size=\"large\" className=\"mr-20\" />\r\n                </div> : <>\r\n                    {\r\n                        products?.length ? <>\r\n                            <div\r\n                                id=\"scrollableDiv\"\r\n                                style={{\r\n                                    height: 500,\r\n                                    overflow: 'auto',\r\n                                    padding: '0 16px',\r\n                                    border: '1px solid rgba(140, 140, 140, 0.35)',\r\n                                }}\r\n                            >\r\n                                <InfiniteScroll\r\n                                    dataLength={products.length}\r\n                                    hasMore={products.length < 50}\r\n                                    scrollableTarget=\"scrollableDiv\"\r\n                                >\r\n                                    <Card>\r\n                                        <Row gutter={{ xs: 8, sm: 16, md: 24 }}>\r\n                                            {\r\n                                                products.map(pro => <Col className=\"gutter-row\" span={6} key={\"pro---\" + pro.id}>\r\n                                                    <div style={style}>\r\n                                                        <Checkbox onChange={(e) => handelProduct(pro.id, e.target.checked)}\r\n                                                            checked={isCheckedModel(pro)}>{pro.product_name}</Checkbox>\r\n                                                    </div>\r\n\r\n                                                </Col>)\r\n                                            }\r\n                                        </Row>\r\n                                        {/* {\r\n                                    products.map(pro => <Card.Grid hoverable={false} style={gridStyle} key={\"pro---\", pro.id}>\r\n                                        <Checkbox onChange={(e) => handelProduct(pro.id, e.target.checked)} \r\n                                            checked={isCheckedModel(pro)}>{pro.product_name}</Checkbox>\r\n                                    </Card.Grid>)\r\n                                } */}\r\n                                    </Card>\r\n                                </InfiniteScroll>\r\n                            </div>\r\n                        </> : ''\r\n                    }\r\n                </>\r\n            }\r\n\r\n            <Card>\r\n                <Row justify=\"end\">\r\n                    <Col span={4}>\r\n                        <Button type=\"primary\" size=\"large\" onClick={assignModel}>\r\n                            Assign Product Model\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n}\r\n","E:\\react\\canpac\\src\\pages\\private\\Report-schedule\\index.js",["364","365","366","367"],{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","replacedBy":"371"},{"ruleId":"372","severity":1,"message":"373","line":2,"column":9,"nodeType":"374","messageId":"375","endLine":2,"endColumn":13},{"ruleId":"372","severity":1,"message":"376","line":6,"column":10,"nodeType":"374","messageId":"375","endLine":6,"endColumn":15},{"ruleId":"372","severity":1,"message":"377","line":15,"column":15,"nodeType":"374","messageId":"375","endLine":15,"endColumn":19},{"ruleId":"372","severity":1,"message":"378","line":16,"column":31,"nodeType":"374","messageId":"375","endLine":16,"endColumn":42},{"ruleId":"379","severity":1,"message":"380","line":71,"column":67,"nodeType":"381","messageId":"382","endLine":71,"endColumn":68,"suggestions":"383"},{"ruleId":"379","severity":1,"message":"384","line":71,"column":75,"nodeType":"381","messageId":"382","endLine":71,"endColumn":76,"suggestions":"385"},{"ruleId":"379","severity":1,"message":"380","line":71,"column":91,"nodeType":"381","messageId":"382","endLine":71,"endColumn":92,"suggestions":"386"},{"ruleId":"379","severity":1,"message":"384","line":71,"column":99,"nodeType":"381","messageId":"382","endLine":71,"endColumn":100,"suggestions":"387"},{"ruleId":"379","severity":1,"message":"384","line":71,"column":108,"nodeType":"381","messageId":"382","endLine":71,"endColumn":109,"suggestions":"388"},{"ruleId":"379","severity":1,"message":"384","line":71,"column":112,"nodeType":"381","messageId":"382","endLine":71,"endColumn":113,"suggestions":"389"},{"ruleId":"379","severity":1,"message":"380","line":71,"column":128,"nodeType":"381","messageId":"382","endLine":71,"endColumn":129,"suggestions":"390"},{"ruleId":"379","severity":1,"message":"384","line":71,"column":136,"nodeType":"381","messageId":"382","endLine":71,"endColumn":137,"suggestions":"391"},{"ruleId":"379","severity":1,"message":"380","line":71,"column":153,"nodeType":"381","messageId":"382","endLine":71,"endColumn":154,"suggestions":"392"},{"ruleId":"379","severity":1,"message":"384","line":71,"column":161,"nodeType":"381","messageId":"382","endLine":71,"endColumn":162,"suggestions":"393"},{"ruleId":"394","severity":1,"message":"395","line":117,"column":37,"nodeType":"396","messageId":"397","endLine":117,"endColumn":132,"fix":"398"},{"ruleId":"372","severity":1,"message":"399","line":28,"column":12,"nodeType":"374","messageId":"375","endLine":28,"endColumn":13},{"ruleId":"372","severity":1,"message":"400","line":30,"column":18,"nodeType":"374","messageId":"375","endLine":30,"endColumn":29},{"ruleId":"401","severity":1,"message":"402","line":75,"column":8,"nodeType":"403","endLine":75,"endColumn":27,"suggestions":"404"},{"ruleId":"405","severity":1,"message":"406","line":81,"column":21,"nodeType":"396","endLine":81,"endColumn":93},{"ruleId":"405","severity":1,"message":"406","line":92,"column":13,"nodeType":"396","endLine":92,"endColumn":67},{"ruleId":"405","severity":1,"message":"406","line":102,"column":13,"nodeType":"396","endLine":102,"endColumn":79},{"ruleId":"405","severity":1,"message":"406","line":107,"column":13,"nodeType":"396","endLine":107,"endColumn":53},{"ruleId":"401","severity":1,"message":"407","line":120,"column":8,"nodeType":"403","endLine":120,"endColumn":10,"suggestions":"408"},{"ruleId":"405","severity":1,"message":"409","line":196,"column":50,"nodeType":"396","endLine":198,"endColumn":53},{"ruleId":"410","severity":1,"message":"411","line":198,"column":38,"nodeType":"381","messageId":"412","endLine":198,"endColumn":52},{"ruleId":"405","severity":1,"message":"406","line":206,"column":29,"nodeType":"396","endLine":206,"endColumn":82},{"ruleId":"405","severity":1,"message":"406","line":226,"column":21,"nodeType":"396","endLine":226,"endColumn":69},{"ruleId":"379","severity":1,"message":"380","line":69,"column":63,"nodeType":"381","messageId":"382","endLine":69,"endColumn":64,"suggestions":"413"},{"ruleId":"379","severity":1,"message":"384","line":69,"column":71,"nodeType":"381","messageId":"382","endLine":69,"endColumn":72,"suggestions":"414"},{"ruleId":"379","severity":1,"message":"380","line":69,"column":87,"nodeType":"381","messageId":"382","endLine":69,"endColumn":88,"suggestions":"415"},{"ruleId":"379","severity":1,"message":"384","line":69,"column":95,"nodeType":"381","messageId":"382","endLine":69,"endColumn":96,"suggestions":"416"},{"ruleId":"379","severity":1,"message":"384","line":69,"column":104,"nodeType":"381","messageId":"382","endLine":69,"endColumn":105,"suggestions":"417"},{"ruleId":"379","severity":1,"message":"384","line":69,"column":108,"nodeType":"381","messageId":"382","endLine":69,"endColumn":109,"suggestions":"418"},{"ruleId":"379","severity":1,"message":"380","line":69,"column":124,"nodeType":"381","messageId":"382","endLine":69,"endColumn":125,"suggestions":"419"},{"ruleId":"379","severity":1,"message":"384","line":69,"column":132,"nodeType":"381","messageId":"382","endLine":69,"endColumn":133,"suggestions":"420"},{"ruleId":"379","severity":1,"message":"380","line":69,"column":149,"nodeType":"381","messageId":"382","endLine":69,"endColumn":150,"suggestions":"421"},{"ruleId":"379","severity":1,"message":"384","line":69,"column":157,"nodeType":"381","messageId":"382","endLine":69,"endColumn":158,"suggestions":"422"},{"ruleId":"394","severity":1,"message":"395","line":126,"column":37,"nodeType":"396","messageId":"397","endLine":126,"endColumn":132,"fix":"423"},{"ruleId":"372","severity":1,"message":"424","line":9,"column":29,"nodeType":"374","messageId":"375","endLine":9,"endColumn":45},{"ruleId":"372","severity":1,"message":"425","line":10,"column":12,"nodeType":"374","messageId":"375","endLine":10,"endColumn":21},{"ruleId":"379","severity":1,"message":"380","line":65,"column":71,"nodeType":"381","messageId":"382","endLine":65,"endColumn":72,"suggestions":"426"},{"ruleId":"379","severity":1,"message":"384","line":65,"column":79,"nodeType":"381","messageId":"382","endLine":65,"endColumn":80,"suggestions":"427"},{"ruleId":"379","severity":1,"message":"380","line":65,"column":95,"nodeType":"381","messageId":"382","endLine":65,"endColumn":96,"suggestions":"428"},{"ruleId":"379","severity":1,"message":"384","line":65,"column":103,"nodeType":"381","messageId":"382","endLine":65,"endColumn":104,"suggestions":"429"},{"ruleId":"379","severity":1,"message":"384","line":65,"column":112,"nodeType":"381","messageId":"382","endLine":65,"endColumn":113,"suggestions":"430"},{"ruleId":"379","severity":1,"message":"384","line":65,"column":116,"nodeType":"381","messageId":"382","endLine":65,"endColumn":117,"suggestions":"431"},{"ruleId":"379","severity":1,"message":"380","line":65,"column":132,"nodeType":"381","messageId":"382","endLine":65,"endColumn":133,"suggestions":"432"},{"ruleId":"379","severity":1,"message":"384","line":65,"column":140,"nodeType":"381","messageId":"382","endLine":65,"endColumn":141,"suggestions":"433"},{"ruleId":"379","severity":1,"message":"380","line":65,"column":157,"nodeType":"381","messageId":"382","endLine":65,"endColumn":158,"suggestions":"434"},{"ruleId":"379","severity":1,"message":"384","line":65,"column":165,"nodeType":"381","messageId":"382","endLine":65,"endColumn":166,"suggestions":"435"},{"ruleId":"394","severity":1,"message":"395","line":127,"column":37,"nodeType":"396","messageId":"397","endLine":127,"endColumn":132,"fix":"436"},{"ruleId":"372","severity":1,"message":"373","line":2,"column":10,"nodeType":"374","messageId":"375","endLine":2,"endColumn":14},{"ruleId":"372","severity":1,"message":"400","line":13,"column":18,"nodeType":"374","messageId":"375","endLine":13,"endColumn":29},{"ruleId":"401","severity":1,"message":"407","line":68,"column":8,"nodeType":"403","endLine":68,"endColumn":10,"suggestions":"437"},{"ruleId":"401","severity":1,"message":"438","line":72,"column":8,"nodeType":"403","endLine":72,"endColumn":14,"suggestions":"439"},{"ruleId":"372","severity":1,"message":"373","line":2,"column":10,"nodeType":"374","messageId":"375","endLine":2,"endColumn":14},{"ruleId":"372","severity":1,"message":"440","line":5,"column":3,"nodeType":"374","messageId":"375","endLine":5,"endColumn":8},{"ruleId":"372","severity":1,"message":"441","line":7,"column":3,"nodeType":"374","messageId":"375","endLine":7,"endColumn":7},{"ruleId":"372","severity":1,"message":"442","line":12,"column":3,"nodeType":"374","messageId":"375","endLine":12,"endColumn":11},{"ruleId":"372","severity":1,"message":"443","line":32,"column":9,"nodeType":"374","messageId":"375","endLine":32,"endColumn":20},{"ruleId":"401","severity":1,"message":"444","line":200,"column":6,"nodeType":"403","endLine":200,"endColumn":8,"suggestions":"445"},{"ruleId":"372","severity":1,"message":"441","line":3,"column":37,"nodeType":"374","messageId":"375","endLine":3,"endColumn":41},{"ruleId":"401","severity":1,"message":"446","line":212,"column":8,"nodeType":"403","endLine":212,"endColumn":16,"suggestions":"447"},{"ruleId":"372","severity":1,"message":"373","line":2,"column":9,"nodeType":"374","messageId":"375","endLine":2,"endColumn":13},{"ruleId":"372","severity":1,"message":"448","line":39,"column":12,"nodeType":"374","messageId":"375","endLine":39,"endColumn":23},{"ruleId":"372","severity":1,"message":"449","line":39,"column":25,"nodeType":"374","messageId":"375","endLine":39,"endColumn":39},{"ruleId":"372","severity":1,"message":"450","line":176,"column":11,"nodeType":"374","messageId":"375","endLine":176,"endColumn":22},{"ruleId":"372","severity":1,"message":"451","line":183,"column":11,"nodeType":"374","messageId":"375","endLine":183,"endColumn":28},{"ruleId":"401","severity":1,"message":"452","line":238,"column":8,"nodeType":"403","endLine":238,"endColumn":16,"suggestions":"453"},{"ruleId":"372","severity":1,"message":"454","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":29},{"ruleId":"401","severity":1,"message":"455","line":79,"column":8,"nodeType":"403","endLine":79,"endColumn":10,"suggestions":"456"},{"ruleId":"457","severity":1,"message":"458","line":175,"column":55,"nodeType":"459","messageId":"460","endLine":175,"endColumn":57},{"ruleId":"372","severity":1,"message":"373","line":2,"column":10,"nodeType":"374","messageId":"375","endLine":2,"endColumn":14},{"ruleId":"401","severity":1,"message":"461","line":94,"column":6,"nodeType":"403","endLine":94,"endColumn":8,"suggestions":"462"},{"ruleId":"401","severity":1,"message":"444","line":216,"column":8,"nodeType":"403","endLine":216,"endColumn":16,"suggestions":"463"},{"ruleId":"372","severity":1,"message":"441","line":3,"column":31,"nodeType":"374","messageId":"375","endLine":3,"endColumn":35},{"ruleId":"372","severity":1,"message":"464","line":3,"column":58,"nodeType":"374","messageId":"375","endLine":3,"endColumn":68},{"ruleId":"372","severity":1,"message":"465","line":3,"column":78,"nodeType":"374","messageId":"375","endLine":3,"endColumn":83},{"ruleId":"372","severity":1,"message":"466","line":3,"column":92,"nodeType":"374","messageId":"375","endLine":3,"endColumn":95},{"ruleId":"372","severity":1,"message":"467","line":3,"column":97,"nodeType":"374","messageId":"375","endLine":3,"endColumn":103},{"ruleId":"457","severity":1,"message":"458","line":104,"column":34,"nodeType":"459","messageId":"460","endLine":104,"endColumn":36},{"ruleId":"401","severity":1,"message":"468","line":165,"column":8,"nodeType":"403","endLine":165,"endColumn":16,"suggestions":"469"},{"ruleId":"372","severity":1,"message":"441","line":2,"column":31,"nodeType":"374","messageId":"375","endLine":2,"endColumn":35},{"ruleId":"372","severity":1,"message":"464","line":2,"column":58,"nodeType":"374","messageId":"375","endLine":2,"endColumn":68},{"ruleId":"457","severity":1,"message":"458","line":110,"column":34,"nodeType":"459","messageId":"460","endLine":110,"endColumn":36},{"ruleId":"401","severity":1,"message":"470","line":172,"column":8,"nodeType":"403","endLine":172,"endColumn":16,"suggestions":"471"},{"ruleId":"372","severity":1,"message":"373","line":2,"column":9,"nodeType":"374","messageId":"375","endLine":2,"endColumn":13},{"ruleId":"372","severity":1,"message":"443","line":12,"column":9,"nodeType":"374","messageId":"375","endLine":12,"endColumn":20},{"ruleId":"401","severity":1,"message":"472","line":142,"column":8,"nodeType":"403","endLine":142,"endColumn":16,"suggestions":"473"},{"ruleId":"372","severity":1,"message":"443","line":12,"column":9,"nodeType":"374","messageId":"375","endLine":12,"endColumn":20},{"ruleId":"405","severity":1,"message":"406","line":40,"column":19,"nodeType":"396","endLine":40,"endColumn":22},{"ruleId":"401","severity":1,"message":"474","line":108,"column":8,"nodeType":"403","endLine":108,"endColumn":16,"suggestions":"475"},{"ruleId":"372","severity":1,"message":"476","line":2,"column":9,"nodeType":"374","messageId":"375","endLine":2,"endColumn":14},{"ruleId":"372","severity":1,"message":"440","line":2,"column":16,"nodeType":"374","messageId":"375","endLine":2,"endColumn":21},{"ruleId":"372","severity":1,"message":"477","line":2,"column":23,"nodeType":"374","messageId":"375","endLine":2,"endColumn":29},{"ruleId":"478","severity":1,"message":"479","line":75,"column":48,"nodeType":"480","messageId":"481","endLine":75,"endColumn":50},{"ruleId":"478","severity":1,"message":"479","line":193,"column":48,"nodeType":"480","messageId":"481","endLine":193,"endColumn":50},{"ruleId":"372","severity":1,"message":"482","line":2,"column":24,"nodeType":"374","messageId":"375","endLine":2,"endColumn":33},{"ruleId":"372","severity":1,"message":"373","line":2,"column":9,"nodeType":"374","messageId":"375","endLine":2,"endColumn":13},{"ruleId":"372","severity":1,"message":"440","line":3,"column":16,"nodeType":"374","messageId":"375","endLine":3,"endColumn":21},{"ruleId":"372","severity":1,"message":"441","line":3,"column":31,"nodeType":"374","messageId":"375","endLine":3,"endColumn":35},{"ruleId":"372","severity":1,"message":"483","line":3,"column":45,"nodeType":"374","messageId":"375","endLine":3,"endColumn":50},{"ruleId":"372","severity":1,"message":"484","line":5,"column":45,"nodeType":"374","messageId":"375","endLine":5,"endColumn":57},{"ruleId":"372","severity":1,"message":"485","line":7,"column":10,"nodeType":"374","messageId":"375","endLine":7,"endColumn":16},{"ruleId":"372","severity":1,"message":"486","line":11,"column":8,"nodeType":"374","messageId":"375","endLine":11,"endColumn":13},{"ruleId":"372","severity":1,"message":"487","line":12,"column":8,"nodeType":"374","messageId":"375","endLine":12,"endColumn":15},{"ruleId":"372","severity":1,"message":"488","line":13,"column":8,"nodeType":"374","messageId":"375","endLine":13,"endColumn":16},{"ruleId":"372","severity":1,"message":"489","line":14,"column":8,"nodeType":"374","messageId":"375","endLine":14,"endColumn":21},{"ruleId":"372","severity":1,"message":"443","line":18,"column":9,"nodeType":"374","messageId":"375","endLine":18,"endColumn":20},{"ruleId":"372","severity":1,"message":"400","line":23,"column":32,"nodeType":"374","messageId":"375","endLine":23,"endColumn":43},{"ruleId":"372","severity":1,"message":"490","line":25,"column":11,"nodeType":"374","messageId":"375","endLine":25,"endColumn":16},{"ruleId":"401","severity":1,"message":"491","line":222,"column":8,"nodeType":"403","endLine":222,"endColumn":14,"suggestions":"492"},{"ruleId":"401","severity":1,"message":"493","line":226,"column":8,"nodeType":"403","endLine":226,"endColumn":37,"suggestions":"494"},{"ruleId":"372","severity":1,"message":"476","line":2,"column":9,"nodeType":"374","messageId":"375","endLine":2,"endColumn":14},{"ruleId":"372","severity":1,"message":"440","line":2,"column":16,"nodeType":"374","messageId":"375","endLine":2,"endColumn":21},{"ruleId":"372","severity":1,"message":"477","line":2,"column":23,"nodeType":"374","messageId":"375","endLine":2,"endColumn":29},{"ruleId":"457","severity":1,"message":"458","line":43,"column":50,"nodeType":"459","messageId":"460","endLine":43,"endColumn":52},{"ruleId":"401","severity":1,"message":"474","line":58,"column":8,"nodeType":"403","endLine":58,"endColumn":10,"suggestions":"495"},{"ruleId":"401","severity":1,"message":"438","line":62,"column":8,"nodeType":"403","endLine":62,"endColumn":14,"suggestions":"496"},{"ruleId":"372","severity":1,"message":"482","line":6,"column":10,"nodeType":"374","messageId":"375","endLine":6,"endColumn":19},{"ruleId":"379","severity":1,"message":"380","line":94,"column":71,"nodeType":"381","messageId":"382","endLine":94,"endColumn":72,"suggestions":"497"},{"ruleId":"379","severity":1,"message":"384","line":94,"column":79,"nodeType":"381","messageId":"382","endLine":94,"endColumn":80,"suggestions":"498"},{"ruleId":"379","severity":1,"message":"380","line":94,"column":95,"nodeType":"381","messageId":"382","endLine":94,"endColumn":96,"suggestions":"499"},{"ruleId":"379","severity":1,"message":"384","line":94,"column":103,"nodeType":"381","messageId":"382","endLine":94,"endColumn":104,"suggestions":"500"},{"ruleId":"379","severity":1,"message":"384","line":94,"column":112,"nodeType":"381","messageId":"382","endLine":94,"endColumn":113,"suggestions":"501"},{"ruleId":"379","severity":1,"message":"384","line":94,"column":116,"nodeType":"381","messageId":"382","endLine":94,"endColumn":117,"suggestions":"502"},{"ruleId":"379","severity":1,"message":"380","line":94,"column":132,"nodeType":"381","messageId":"382","endLine":94,"endColumn":133,"suggestions":"503"},{"ruleId":"379","severity":1,"message":"384","line":94,"column":140,"nodeType":"381","messageId":"382","endLine":94,"endColumn":141,"suggestions":"504"},{"ruleId":"379","severity":1,"message":"380","line":94,"column":157,"nodeType":"381","messageId":"382","endLine":94,"endColumn":158,"suggestions":"505"},{"ruleId":"379","severity":1,"message":"384","line":94,"column":165,"nodeType":"381","messageId":"382","endLine":94,"endColumn":166,"suggestions":"506"},{"ruleId":"372","severity":1,"message":"482","line":6,"column":10,"nodeType":"374","messageId":"375","endLine":6,"endColumn":19},{"ruleId":"372","severity":1,"message":"507","line":6,"column":21,"nodeType":"374","messageId":"375","endLine":6,"endColumn":32},{"ruleId":"457","severity":1,"message":"458","line":65,"column":54,"nodeType":"459","messageId":"460","endLine":65,"endColumn":56},{"ruleId":"508","severity":1,"message":"509","line":72,"column":17,"nodeType":"510","messageId":"460","endLine":72,"endColumn":22},{"ruleId":"401","severity":1,"message":"511","line":81,"column":8,"nodeType":"403","endLine":81,"endColumn":10,"suggestions":"512"},{"ruleId":"379","severity":1,"message":"380","line":113,"column":75,"nodeType":"381","messageId":"382","endLine":113,"endColumn":76,"suggestions":"513"},{"ruleId":"379","severity":1,"message":"384","line":113,"column":83,"nodeType":"381","messageId":"382","endLine":113,"endColumn":84,"suggestions":"514"},{"ruleId":"379","severity":1,"message":"380","line":113,"column":99,"nodeType":"381","messageId":"382","endLine":113,"endColumn":100,"suggestions":"515"},{"ruleId":"379","severity":1,"message":"384","line":113,"column":107,"nodeType":"381","messageId":"382","endLine":113,"endColumn":108,"suggestions":"516"},{"ruleId":"379","severity":1,"message":"384","line":113,"column":116,"nodeType":"381","messageId":"382","endLine":113,"endColumn":117,"suggestions":"517"},{"ruleId":"379","severity":1,"message":"384","line":113,"column":120,"nodeType":"381","messageId":"382","endLine":113,"endColumn":121,"suggestions":"518"},{"ruleId":"379","severity":1,"message":"380","line":113,"column":136,"nodeType":"381","messageId":"382","endLine":113,"endColumn":137,"suggestions":"519"},{"ruleId":"379","severity":1,"message":"384","line":113,"column":144,"nodeType":"381","messageId":"382","endLine":113,"endColumn":145,"suggestions":"520"},{"ruleId":"379","severity":1,"message":"380","line":113,"column":161,"nodeType":"381","messageId":"382","endLine":113,"endColumn":162,"suggestions":"521"},{"ruleId":"379","severity":1,"message":"384","line":113,"column":169,"nodeType":"381","messageId":"382","endLine":113,"endColumn":170,"suggestions":"522"},{"ruleId":"372","severity":1,"message":"482","line":6,"column":49,"nodeType":"374","messageId":"375","endLine":6,"endColumn":58},{"ruleId":"372","severity":1,"message":"507","line":6,"column":60,"nodeType":"374","messageId":"375","endLine":6,"endColumn":71},{"ruleId":"372","severity":1,"message":"523","line":6,"column":73,"nodeType":"374","messageId":"375","endLine":6,"endColumn":82},{"ruleId":"372","severity":1,"message":"524","line":24,"column":12,"nodeType":"374","messageId":"375","endLine":24,"endColumn":17},{"ruleId":"372","severity":1,"message":"525","line":24,"column":19,"nodeType":"374","messageId":"375","endLine":24,"endColumn":27},{"ruleId":"457","severity":1,"message":"458","line":66,"column":54,"nodeType":"459","messageId":"460","endLine":66,"endColumn":56},{"ruleId":"508","severity":1,"message":"509","line":75,"column":21,"nodeType":"510","messageId":"460","endLine":75,"endColumn":26},{"ruleId":"401","severity":1,"message":"526","line":99,"column":8,"nodeType":"403","endLine":99,"endColumn":10,"suggestions":"527"},{"ruleId":"372","severity":1,"message":"528","line":1,"column":27,"nodeType":"374","messageId":"375","endLine":1,"endColumn":36},{"ruleId":"372","severity":1,"message":"529","line":1,"column":27,"nodeType":"374","messageId":"375","endLine":1,"endColumn":35},{"ruleId":"372","severity":1,"message":"373","line":3,"column":9,"nodeType":"374","messageId":"375","endLine":3,"endColumn":13},{"ruleId":"530","severity":1,"message":"531","line":17,"column":29,"nodeType":"396","endLine":17,"endColumn":71},{"ruleId":"372","severity":1,"message":"373","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":14},{"ruleId":"372","severity":1,"message":"532","line":9,"column":7,"nodeType":"374","messageId":"375","endLine":9,"endColumn":16},{"ruleId":"401","severity":1,"message":"533","line":85,"column":8,"nodeType":"403","endLine":85,"endColumn":10,"suggestions":"534"},{"ruleId":"372","severity":1,"message":"373","line":2,"column":10,"nodeType":"374","messageId":"375","endLine":2,"endColumn":14},{"ruleId":"372","severity":1,"message":"440","line":3,"column":17,"nodeType":"374","messageId":"375","endLine":3,"endColumn":22},{"ruleId":"372","severity":1,"message":"483","line":3,"column":47,"nodeType":"374","messageId":"375","endLine":3,"endColumn":52},{"ruleId":"372","severity":1,"message":"464","line":3,"column":60,"nodeType":"374","messageId":"375","endLine":3,"endColumn":70},"no-native-reassign",["535"],"no-negated-in-lhs",["536"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Trans' is defined but never used.","'i18n' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["537","538"],"Unnecessary escape character: \\\".",["539","540"],["541","542"],["543","544"],["545","546"],["547","548"],["549","550"],["551","552"],["553","554"],["555","556"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"557","text":"558"},"'t' is assigned a value but never used.","'getUserInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showNav'. Either include it or remove the dependency array.","ArrayExpression",["559"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'setUserInfo'. Either include it or remove the dependency array.",["560"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","unexpectedScriptURL",["561","562"],["563","564"],["565","566"],["567","568"],["569","570"],["571","572"],["573","574"],["575","576"],["577","578"],["579","580"],{"range":"581","text":"558"},"'setResetPassword' is assigned a value but never used.","'isLoading' is assigned a value but never used.",["582","583"],["584","585"],["586","587"],["588","589"],["590","591"],["592","593"],["594","595"],["596","597"],["598","599"],["600","601"],{"range":"602","text":"558"},["603"],"React Hook useEffect has a missing dependency: 'onFill'. Either include it or remove the dependency array.",["604"],"'Space' is defined but never used.","'Form' is defined but never used.","'Skeleton' is defined but never used.","'RangePicker' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProductDetails'. Either include it or remove the dependency array.",["605"],"React Hook useEffect has a missing dependency: 'getProductOrder'. Either include it or remove the dependency array.",["606"],"'orderStatus' is assigned a value but never used.","'setOrderStatus' is assigned a value but never used.","'searchOrder' is assigned a value but never used.","'searchOrderStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrderDraft'. Either include it or remove the dependency array.",["607"],"'ClockCircleOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'getOrderDetails'. Either include it or remove the dependency array.",["608"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["609"],["610"],"'DatePicker' is defined but never used.","'Image' is defined but never used.","'Tag' is defined but never used.","'Switch' is defined but never used.","React Hook useEffect has a missing dependency: 'getUsersList'. Either include it or remove the dependency array.",["611"],"React Hook useEffect has a missing dependency: 'getMerchents'. Either include it or remove the dependency array.",["612"],"React Hook useEffect has a missing dependency: 'getPermissions'. Either include it or remove the dependency array.",["613"],"React Hook useEffect has a missing dependency: 'getRoles'. Either include it or remove the dependency array.",["614"],"'Table' is defined but never used.","'Select' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ROLE_LIST' is defined but never used.","'Input' is defined but never used.","'draft_report' is defined but never used.","'saveAs' is defined but never used.","'jsPDF' is defined but never used.","'pdfMake' is defined but never used.","'pdfFonts' is defined but never used.","'htmlToPdfmake' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'canView'. Either include it or remove the dependency array.",["615"],"React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["616"],["617"],["618"],["619","620"],["621","622"],["623","624"],["625","626"],["627","628"],["629","630"],["631","632"],["633","634"],["635","636"],["637","638"],"'USER_CREATE' is defined but never used.","no-dupe-keys","Duplicate key 'email'.","ObjectExpression","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["639"],["640","641"],["642","643"],["644","645"],["646","647"],["648","649"],["650","651"],["652","653"],["654","655"],["656","657"],["658","659"],"'USER_LIST' is defined but never used.","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'canView', 'getMarchentProiductModel', and 'getMerchentss'. Either include them or remove the dependency array.",["660"],"'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'gridStyle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMarchentProiductModel'. Either include it or remove the dependency array.",["661"],"no-global-assign","no-unsafe-negation",{"messageId":"662","fix":"663","desc":"664"},{"messageId":"665","fix":"666","desc":"667"},{"messageId":"662","fix":"668","desc":"664"},{"messageId":"665","fix":"669","desc":"667"},{"messageId":"662","fix":"670","desc":"664"},{"messageId":"665","fix":"671","desc":"667"},{"messageId":"662","fix":"672","desc":"664"},{"messageId":"665","fix":"673","desc":"667"},{"messageId":"662","fix":"674","desc":"664"},{"messageId":"665","fix":"675","desc":"667"},{"messageId":"662","fix":"676","desc":"664"},{"messageId":"665","fix":"677","desc":"667"},{"messageId":"662","fix":"678","desc":"664"},{"messageId":"665","fix":"679","desc":"667"},{"messageId":"662","fix":"680","desc":"664"},{"messageId":"665","fix":"681","desc":"667"},{"messageId":"662","fix":"682","desc":"664"},{"messageId":"665","fix":"683","desc":"667"},{"messageId":"662","fix":"684","desc":"664"},{"messageId":"665","fix":"685","desc":"667"},[5599,5599]," rel=\"noreferrer\"",{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"messageId":"662","fix":"690","desc":"664"},{"messageId":"665","fix":"691","desc":"667"},{"messageId":"662","fix":"692","desc":"664"},{"messageId":"665","fix":"693","desc":"667"},{"messageId":"662","fix":"694","desc":"664"},{"messageId":"665","fix":"695","desc":"667"},{"messageId":"662","fix":"696","desc":"664"},{"messageId":"665","fix":"697","desc":"667"},{"messageId":"662","fix":"698","desc":"664"},{"messageId":"665","fix":"699","desc":"667"},{"messageId":"662","fix":"700","desc":"664"},{"messageId":"665","fix":"701","desc":"667"},{"messageId":"662","fix":"702","desc":"664"},{"messageId":"665","fix":"703","desc":"667"},{"messageId":"662","fix":"704","desc":"664"},{"messageId":"665","fix":"705","desc":"667"},{"messageId":"662","fix":"706","desc":"664"},{"messageId":"665","fix":"707","desc":"667"},{"messageId":"662","fix":"708","desc":"664"},{"messageId":"665","fix":"709","desc":"667"},[6085,6085],{"messageId":"662","fix":"710","desc":"664"},{"messageId":"665","fix":"711","desc":"667"},{"messageId":"662","fix":"712","desc":"664"},{"messageId":"665","fix":"713","desc":"667"},{"messageId":"662","fix":"714","desc":"664"},{"messageId":"665","fix":"715","desc":"667"},{"messageId":"662","fix":"716","desc":"664"},{"messageId":"665","fix":"717","desc":"667"},{"messageId":"662","fix":"718","desc":"664"},{"messageId":"665","fix":"719","desc":"667"},{"messageId":"662","fix":"720","desc":"664"},{"messageId":"665","fix":"721","desc":"667"},{"messageId":"662","fix":"722","desc":"664"},{"messageId":"665","fix":"723","desc":"667"},{"messageId":"662","fix":"724","desc":"664"},{"messageId":"665","fix":"725","desc":"667"},{"messageId":"662","fix":"726","desc":"664"},{"messageId":"665","fix":"727","desc":"667"},{"messageId":"662","fix":"728","desc":"664"},{"messageId":"665","fix":"729","desc":"667"},[6566,6566],{"desc":"688","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"743","fix":"744"},{"desc":"745","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"753","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"messageId":"662","fix":"761","desc":"664"},{"messageId":"665","fix":"762","desc":"667"},{"messageId":"662","fix":"763","desc":"664"},{"messageId":"665","fix":"764","desc":"667"},{"messageId":"662","fix":"765","desc":"664"},{"messageId":"665","fix":"766","desc":"667"},{"messageId":"662","fix":"767","desc":"664"},{"messageId":"665","fix":"768","desc":"667"},{"messageId":"662","fix":"769","desc":"664"},{"messageId":"665","fix":"770","desc":"667"},{"messageId":"662","fix":"771","desc":"664"},{"messageId":"665","fix":"772","desc":"667"},{"messageId":"662","fix":"773","desc":"664"},{"messageId":"665","fix":"774","desc":"667"},{"messageId":"662","fix":"775","desc":"664"},{"messageId":"665","fix":"776","desc":"667"},{"messageId":"662","fix":"777","desc":"664"},{"messageId":"665","fix":"778","desc":"667"},{"messageId":"662","fix":"779","desc":"664"},{"messageId":"665","fix":"780","desc":"667"},{"desc":"781","fix":"782"},{"messageId":"662","fix":"783","desc":"664"},{"messageId":"665","fix":"784","desc":"667"},{"messageId":"662","fix":"785","desc":"664"},{"messageId":"665","fix":"786","desc":"667"},{"messageId":"662","fix":"787","desc":"664"},{"messageId":"665","fix":"788","desc":"667"},{"messageId":"662","fix":"789","desc":"664"},{"messageId":"665","fix":"790","desc":"667"},{"messageId":"662","fix":"791","desc":"664"},{"messageId":"665","fix":"792","desc":"667"},{"messageId":"662","fix":"793","desc":"664"},{"messageId":"665","fix":"794","desc":"667"},{"messageId":"662","fix":"795","desc":"664"},{"messageId":"665","fix":"796","desc":"667"},{"messageId":"662","fix":"797","desc":"664"},{"messageId":"665","fix":"798","desc":"667"},{"messageId":"662","fix":"799","desc":"664"},{"messageId":"665","fix":"800","desc":"667"},{"messageId":"662","fix":"801","desc":"664"},{"messageId":"665","fix":"802","desc":"667"},{"desc":"803","fix":"804"},{"desc":"805","fix":"806"},"removeEscape",{"range":"807","text":"808"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"809","text":"810"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"811","text":"808"},{"range":"812","text":"810"},{"range":"813","text":"808"},{"range":"814","text":"810"},{"range":"815","text":"808"},{"range":"816","text":"810"},{"range":"817","text":"808"},{"range":"818","text":"810"},{"range":"819","text":"808"},{"range":"820","text":"810"},{"range":"821","text":"808"},{"range":"822","text":"810"},{"range":"823","text":"808"},{"range":"824","text":"810"},{"range":"825","text":"808"},{"range":"826","text":"810"},{"range":"827","text":"808"},{"range":"828","text":"810"},"Update the dependencies array to be: [location.pathname, showNav]",{"range":"829","text":"830"},"Update the dependencies array to be: [setUserInfo]",{"range":"831","text":"832"},{"range":"833","text":"808"},{"range":"834","text":"810"},{"range":"835","text":"808"},{"range":"836","text":"810"},{"range":"837","text":"808"},{"range":"838","text":"810"},{"range":"839","text":"808"},{"range":"840","text":"810"},{"range":"841","text":"808"},{"range":"842","text":"810"},{"range":"843","text":"808"},{"range":"844","text":"810"},{"range":"845","text":"808"},{"range":"846","text":"810"},{"range":"847","text":"808"},{"range":"848","text":"810"},{"range":"849","text":"808"},{"range":"850","text":"810"},{"range":"851","text":"808"},{"range":"852","text":"810"},{"range":"853","text":"808"},{"range":"854","text":"810"},{"range":"855","text":"808"},{"range":"856","text":"810"},{"range":"857","text":"808"},{"range":"858","text":"810"},{"range":"859","text":"808"},{"range":"860","text":"810"},{"range":"861","text":"808"},{"range":"862","text":"810"},{"range":"863","text":"808"},{"range":"864","text":"810"},{"range":"865","text":"808"},{"range":"866","text":"810"},{"range":"867","text":"808"},{"range":"868","text":"810"},{"range":"869","text":"808"},{"range":"870","text":"810"},{"range":"871","text":"808"},{"range":"872","text":"810"},{"range":"873","text":"832"},"Update the dependencies array to be: [onFill, user]",{"range":"874","text":"875"},"Update the dependencies array to be: [getProductDetails]",{"range":"876","text":"877"},"Update the dependencies array to be: [getProductOrder, search]",{"range":"878","text":"879"},"Update the dependencies array to be: [getOrderDraft, search]",{"range":"880","text":"881"},"Update the dependencies array to be: [getOrderDetails]",{"range":"882","text":"883"},"Update the dependencies array to be: [getProducts]",{"range":"884","text":"885"},"Update the dependencies array to be: [getProductDetails, search]",{"range":"886","text":"887"},"Update the dependencies array to be: [getUsersList, search]",{"range":"888","text":"889"},"Update the dependencies array to be: [getMerchents, search]",{"range":"890","text":"891"},"Update the dependencies array to be: [getPermissions, search]",{"range":"892","text":"893"},"Update the dependencies array to be: [getRoles, search]",{"range":"894","text":"895"},"Update the dependencies array to be: [canView, user]",{"range":"896","text":"897"},"Update the dependencies array to be: [dateRange, getReport, selectedCustomer]",{"range":"898","text":"899"},"Update the dependencies array to be: [getRoles]",{"range":"900","text":"901"},"Update the dependencies array to be: [onFill, role]",{"range":"902","text":"903"},{"range":"904","text":"808"},{"range":"905","text":"810"},{"range":"906","text":"808"},{"range":"907","text":"810"},{"range":"908","text":"808"},{"range":"909","text":"810"},{"range":"910","text":"808"},{"range":"911","text":"810"},{"range":"912","text":"808"},{"range":"913","text":"810"},{"range":"914","text":"808"},{"range":"915","text":"810"},{"range":"916","text":"808"},{"range":"917","text":"810"},{"range":"918","text":"808"},{"range":"919","text":"810"},{"range":"920","text":"808"},{"range":"921","text":"810"},{"range":"922","text":"808"},{"range":"923","text":"810"},"Update the dependencies array to be: [getUsers]",{"range":"924","text":"925"},{"range":"926","text":"808"},{"range":"927","text":"810"},{"range":"928","text":"808"},{"range":"929","text":"810"},{"range":"930","text":"808"},{"range":"931","text":"810"},{"range":"932","text":"808"},{"range":"933","text":"810"},{"range":"934","text":"808"},{"range":"935","text":"810"},{"range":"936","text":"808"},{"range":"937","text":"810"},{"range":"938","text":"808"},{"range":"939","text":"810"},{"range":"940","text":"808"},{"range":"941","text":"810"},{"range":"942","text":"808"},{"range":"943","text":"810"},{"range":"944","text":"808"},{"range":"945","text":"810"},"Update the dependencies array to be: [canView, getMarchentProiductModel, getMerchentss]",{"range":"946","text":"947"},"Update the dependencies array to be: [getMarchentProiductModel]",{"range":"948","text":"949"},[2923,2924],"",[2923,2923],"\\",[2931,2932],[2931,2931],[2947,2948],[2947,2947],[2955,2956],[2955,2955],[2964,2965],[2964,2964],[2968,2969],[2968,2968],[2984,2985],[2984,2984],[2992,2993],[2992,2992],[3009,3010],[3009,3009],[3017,3018],[3017,3017],[2769,2788],"[location.pathname, showNav]",[4035,4037],"[setUserInfo]",[2867,2868],[2867,2867],[2875,2876],[2875,2875],[2891,2892],[2891,2891],[2899,2900],[2899,2899],[2908,2909],[2908,2908],[2912,2913],[2912,2912],[2928,2929],[2928,2928],[2936,2937],[2936,2936],[2953,2954],[2953,2953],[2961,2962],[2961,2961],[2743,2744],[2743,2743],[2751,2752],[2751,2751],[2767,2768],[2767,2767],[2775,2776],[2775,2775],[2784,2785],[2784,2784],[2788,2789],[2788,2788],[2804,2805],[2804,2804],[2812,2813],[2812,2812],[2829,2830],[2829,2829],[2837,2838],[2837,2837],[2301,2303],[2367,2373],"[onFill, user]",[5123,5125],"[getProductDetails]",[6521,6529],"[getProductOrder, search]",[7131,7139],"[getOrderDraft, search]",[2390,2392],"[getOrderDetails]",[2519,2521],"[getProducts]",[6549,6557],"[getProductDetails, search]",[5679,5687],"[getUsersList, search]",[6020,6028],"[getMerchents, search]",[4671,4679],"[getPermissions, search]",[3355,3363],"[getRoles, search]",[6862,6868],"[canView, user]",[6945,6974],"[dateRange, getReport, selectedCustomer]",[1814,1816],"[getRoles]",[1879,1885],"[onFill, role]",[3733,3734],[3733,3733],[3741,3742],[3741,3741],[3757,3758],[3757,3757],[3765,3766],[3765,3765],[3774,3775],[3774,3774],[3778,3779],[3778,3778],[3794,3795],[3794,3794],[3802,3803],[3802,3802],[3819,3820],[3819,3819],[3827,3828],[3827,3827],[2701,2703],"[getUsers]",[4270,4271],[4270,4270],[4278,4279],[4278,4278],[4294,4295],[4294,4294],[4302,4303],[4302,4302],[4311,4312],[4311,4311],[4315,4316],[4315,4315],[4331,4332],[4331,4331],[4339,4340],[4339,4339],[4356,4357],[4356,4356],[4364,4365],[4364,4364],[3506,3508],"[canView, getMarchentProiductModel, getMerchentss]",[2681,2683],"[getMarchentProiductModel]"]